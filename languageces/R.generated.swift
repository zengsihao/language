//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 1 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.localizable` struct is generated, and contains static references to 2510 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: About INTO
      ///
      /// Key: AboutInto
      ///
      /// Locales: en, zh-Hant
      var aboutInto: RswiftResources.StringResource { .init(key: "AboutInto", tableName: "Localizable", source: source, developmentValue: "About INTO", comment: nil) }

      /// en translation: Account and Security
      ///
      /// Key: AccountInfo
      ///
      /// Locales: en, zh-Hant
      var accountInfo: RswiftResources.StringResource { .init(key: "AccountInfo", tableName: "Localizable", source: source, developmentValue: "Account and Security", comment: nil) }

      /// en translation: Administrator
      ///
      /// Key: Admins
      ///
      /// Locales: en, zh-Hant
      var admins: RswiftResources.StringResource { .init(key: "Admins", tableName: "Localizable", source: source, developmentValue: "Administrator", comment: nil) }

      /// en translation: Advanced
      ///
      /// Key: Advanced
      ///
      /// Locales: en, zh-Hant
      var advanced: RswiftResources.StringResource { .init(key: "Advanced", tableName: "Localizable", source: source, developmentValue: "Advanced", comment: nil) }

      /// en translation: Associated INID
      ///
      /// Key: Associated_INID
      ///
      /// Locales: en, zh-Hant
      var associated_INID: RswiftResources.StringResource { .init(key: "Associated_INID", tableName: "Localizable", source: source, developmentValue: "Associated INID", comment: nil) }

      /// en translation: Association Failed
      ///
      /// Key: Association_Failed
      ///
      /// Locales: en, zh-Hant
      var association_Failed: RswiftResources.StringResource { .init(key: "Association_Failed", tableName: "Localizable", source: source, developmentValue: "Association Failed", comment: nil) }

      /// en translation: Association Now
      ///
      /// Key: Association_Now
      ///
      /// Locales: en, zh-Hant
      var association_Now: RswiftResources.StringResource { .init(key: "Association_Now", tableName: "Localizable", source: source, developmentValue: "Association Now", comment: nil) }

      /// en translation: Association Successful
      ///
      /// Key: Association_Successful
      ///
      /// Locales: en, zh-Hant
      var association_Successful: RswiftResources.StringResource { .init(key: "Association_Successful", tableName: "Localizable", source: source, developmentValue: "Association Successful", comment: nil) }

      /// en translation: Auto Unlock
      ///
      /// Key: Auto_Unlock
      ///
      /// Locales: en, zh-Hant
      var auto_Unlock: RswiftResources.StringResource { .init(key: "Auto_Unlock", tableName: "Localizable", source: source, developmentValue: "Auto Unlock", comment: nil) }

      /// en translation: Back up the seed phrase to protect the wallet security
      ///
      /// Key: Back_up_security
      ///
      /// Locales: en, zh-Hant
      var back_up_security: RswiftResources.StringResource { .init(key: "Back_up_security", tableName: "Localizable", source: source, developmentValue: "Back up the seed phrase to protect the wallet security", comment: nil) }

      /// en translation: Balance
      ///
      /// Key: Balance
      ///
      /// Locales: en, zh-Hant
      var balance: RswiftResources.StringResource { .init(key: "Balance", tableName: "Localizable", source: source, developmentValue: "Balance", comment: nil) }

      /// en translation: Beginner Tasks
      ///
      /// Key: Beginner_Tasks
      ///
      /// Locales: en, zh-Hant
      var beginner_Tasks: RswiftResources.StringResource { .init(key: "Beginner_Tasks", tableName: "Localizable", source: source, developmentValue: "Beginner Tasks", comment: nil) }

      /// en translation: Beginner tasks unlocked!
      ///
      /// Key: Beginner_tasks_unlocked
      ///
      /// Locales: en, zh-Hant
      var beginner_tasks_unlocked: RswiftResources.StringResource { .init(key: "Beginner_tasks_unlocked", tableName: "Localizable", source: source, developmentValue: "Beginner tasks unlocked!", comment: nil) }

      /// en translation: Bind friends
      ///
      /// Key: Bind_friends
      ///
      /// Locales: en, zh-Hant
      var bind_friends: RswiftResources.StringResource { .init(key: "Bind_friends", tableName: "Localizable", source: source, developmentValue: "Bind friends", comment: nil) }

      /// en translation: Bind friends to join INTO
      ///
      /// Key: Bind_friends_join_INTO
      ///
      /// Locales: en, zh-Hant
      var bind_friends_join_INTO: RswiftResources.StringResource { .init(key: "Bind_friends_join_INTO", tableName: "Localizable", source: source, developmentValue: "Bind friends to join INTO", comment: nil) }

      /// en translation: Binding failed！
      ///
      /// Key: Binding_failed
      ///
      /// Locales: en, zh-Hant
      var binding_failed: RswiftResources.StringResource { .init(key: "Binding_failed", tableName: "Localizable", source: source, developmentValue: "Binding failed！", comment: nil) }

      /// en translation: Binding successful!
      ///
      /// Key: Binding_successful
      ///
      /// Locales: en, zh-Hant
      var binding_successful: RswiftResources.StringResource { .init(key: "Binding_successful", tableName: "Localizable", source: source, developmentValue: "Binding successful!", comment: nil) }

      /// en translation: Bookmarks
      ///
      /// Key: Bookmarks
      ///
      /// Locales: en, zh-Hant
      var bookmarks: RswiftResources.StringResource { .init(key: "Bookmarks", tableName: "Localizable", source: source, developmentValue: "Bookmarks", comment: nil) }

      /// en translation: VideoCall
      ///
      /// Key: Call
      ///
      /// Locales: en, zh-Hant
      var call: RswiftResources.StringResource { .init(key: "Call", tableName: "Localizable", source: source, developmentValue: "VideoCall", comment: nil) }

      /// en translation: Caution
      ///
      /// Key: Caution
      ///
      /// Locales: en, zh-Hant
      var caution: RswiftResources.StringResource { .init(key: "Caution", tableName: "Localizable", source: source, developmentValue: "Caution", comment: nil) }

      /// en translation: Chain ID
      ///
      /// Key: Chain ID
      ///
      /// Locales: en, zh-Hant
      var chainID: RswiftResources.StringResource { .init(key: "Chain ID", tableName: "Localizable", source: source, developmentValue: "Chain ID", comment: nil) }

      /// en translation: Chain ID: %ld
      ///
      /// Key: Chain ID with prefix
      ///
      /// Locales: en, zh-Hant
      var chainIDWithPrefix: RswiftResources.StringResource1<Int> { .init(key: "Chain ID with prefix", tableName: "Localizable", source: source, developmentValue: "Chain ID: %ld", comment: nil) }

      /// en translation: Chat on-chain with friends to increase daily social weight and get social rewards
      ///
      /// Key: Chat_social_weight_rewards
      ///
      /// Locales: en, zh-Hant
      var chat_social_weight_rewards: RswiftResources.StringResource { .init(key: "Chat_social_weight_rewards", tableName: "Localizable", source: source, developmentValue: "Chat on-chain with friends to increase daily social weight and get social rewards", comment: nil) }

      /// en translation: Select a profile photo
      ///
      /// Key: ChooseAvatar
      ///
      /// Locales: en, zh-Hant
      var chooseAvatar: RswiftResources.StringResource { .init(key: "ChooseAvatar", tableName: "Localizable", source: source, developmentValue: "Select a profile photo", comment: nil) }

      /// en translation: Claim 100 TOX Rewards
      ///
      /// Key: Claim_Rewards
      ///
      /// Locales: en, zh-Hant
      var claim_Rewards: RswiftResources.StringResource { .init(key: "Claim_Rewards", tableName: "Localizable", source: source, developmentValue: "Claim 100 TOX Rewards", comment: nil) }

      /// en translation: Click to switch the current chain
      ///
      /// Key: Click_switch_chain
      ///
      /// Locales: en, zh-Hant
      var click_switch_chain: RswiftResources.StringResource { .init(key: "Click_switch_chain", tableName: "Localizable", source: source, developmentValue: "Click to switch the current chain", comment: nil) }

      /// en translation: Cloud Backup
      ///
      /// Key: Cloud_Backup
      ///
      /// Locales: en, zh-Hant
      var cloud_Backup: RswiftResources.StringResource { .init(key: "Cloud_Backup", tableName: "Localizable", source: source, developmentValue: "Cloud Backup", comment: nil) }

      /// en translation: Cloud backup has been activated for this mobile phone number, please change the mobile phone number
      ///
      /// Key: Cloud_backup_activated_change_phone
      ///
      /// Locales: en, zh-Hant
      var cloud_backup_activated_change_phone: RswiftResources.StringResource { .init(key: "Cloud_backup_activated_change_phone", tableName: "Localizable", source: source, developmentValue: "Cloud backup has been activated for this mobile phone number, please change the mobile phone number", comment: nil) }

      /// en translation: Cloud backup seed phrase
      ///
      /// Key: Cloud_backup_seed_phrase
      ///
      /// Locales: en, zh-Hant
      var cloud_backup_seed_phrase: RswiftResources.StringResource { .init(key: "Cloud_backup_seed_phrase", tableName: "Localizable", source: source, developmentValue: "Cloud backup seed phrase", comment: nil) }

      /// en translation: Cloud backup successful
      ///
      /// Key: Cloud_backup_successful
      ///
      /// Locales: en, zh-Hant
      var cloud_backup_successful: RswiftResources.StringResource { .init(key: "Cloud_backup_successful", tableName: "Localizable", source: source, developmentValue: "Cloud backup successful", comment: nil) }

      /// en translation: Coming to INTO
      ///
      /// Key: Coming_to_INTO
      ///
      /// Locales: en, zh-Hant
      var coming_to_INTO: RswiftResources.StringResource { .init(key: "Coming_to_INTO", tableName: "Localizable", source: source, developmentValue: "Coming to INTO", comment: nil) }

      /// en translation: Complete the Match Chain SBT Certification to earn 30 TOX
      ///
      /// Key: Complete_Match_Chain_Certification
      ///
      /// Locales: en, zh-Hant
      var complete_Match_Chain_Certification: RswiftResources.StringResource { .init(key: "Complete_Match_Chain_Certification", tableName: "Localizable", source: source, developmentValue: "Complete the Match Chain SBT Certification to earn 30 TOX", comment: nil) }

      /// en translation: Complete SBT Certification
      ///
      /// Key: Complete_SBT_Certification
      ///
      /// Locales: en, zh-Hant
      var complete_SBT_Certification: RswiftResources.StringResource { .init(key: "Complete_SBT_Certification", tableName: "Localizable", source: source, developmentValue: "Complete SBT Certification", comment: nil) }

      /// en translation: Complete Task
      ///
      /// Key: Complete_Task
      ///
      /// Locales: en, zh-Hant
      var complete_Task: RswiftResources.StringResource { .init(key: "Complete_Task", tableName: "Localizable", source: source, developmentValue: "Complete Task", comment: nil) }

      /// en translation: Complete Task
      ///
      /// Key: Complete_beginner_tasks
      ///
      /// Locales: en, zh-Hant
      var complete_beginner_tasks: RswiftResources.StringResource { .init(key: "Complete_beginner_tasks", tableName: "Localizable", source: source, developmentValue: "Complete Task", comment: nil) }

      /// en translation: Complete the cloud backup
      ///
      /// Key: Complete_cloud_backup
      ///
      /// Locales: en, zh-Hant
      var complete_cloud_backup: RswiftResources.StringResource { .init(key: "Complete_cloud_backup", tableName: "Localizable", source: source, developmentValue: "Complete the cloud backup", comment: nil) }

      /// en translation: Complete the task to get up to 100TOX beginner benefits
      ///
      /// Key: Complete_task_get_benefits
      ///
      /// Locales: en, zh-Hant
      var complete_task_get_benefits: RswiftResources.StringResource { .init(key: "Complete_task_get_benefits", tableName: "Localizable", source: source, developmentValue: "Complete the task to get up to 100TOX beginner benefits", comment: nil) }

      /// en translation: Confirm Release
      ///
      /// Key: Confirm_Release
      ///
      /// Locales: en, zh-Hant
      var confirm_Release: RswiftResources.StringResource { .init(key: "Confirm_Release", tableName: "Localizable", source: source, developmentValue: "Confirm Release", comment: nil) }

      /// en translation: Confirming the release of the common bond?     You can associate a new INID after unbinding.
      ///
      /// Key: Confirm_binding_associate
      ///
      /// Locales: en, zh-Hant
      var confirm_binding_associate: RswiftResources.StringResource { .init(key: "Confirm_binding_associate", tableName: "Localizable", source: source, developmentValue: "Confirming the release of the common bond? \n   You can associate a new INID after unbinding.", comment: nil) }

      /// en translation: Confirm the Import
      ///
      /// Key: Confirm_the_Import
      ///
      /// Locales: en, zh-Hant
      var confirm_the_Import: RswiftResources.StringResource { .init(key: "Confirm_the_Import", tableName: "Localizable", source: source, developmentValue: "Confirm the Import", comment: nil) }

      /// en translation: Congratulations, get 0.001TOX!
      ///
      /// Key: Congratulation_get
      ///
      /// Locales: en, zh-Hant
      var congratulation_get: RswiftResources.StringResource { .init(key: "Congratulation_get", tableName: "Localizable", source: source, developmentValue: "Congratulations, get 0.001TOX!", comment: nil) }

      /// en translation: Congratulations, get 10TOX!
      ///
      /// Key: Congratulations_get
      ///
      /// Locales: en, zh-Hant
      var congratulations_get: RswiftResources.StringResource { .init(key: "Congratulations_get", tableName: "Localizable", source: source, developmentValue: "Congratulations, get 10TOX!", comment: nil) }

      /// en translation: Continue
      ///
      /// Key: Continue
      ///
      /// Locales: en, zh-Hant
      var `continue`: RswiftResources.StringResource { .init(key: "Continue", tableName: "Localizable", source: source, developmentValue: "Continue", comment: nil) }

      /// en translation: Contract Address
      ///
      /// Key: Contract Address
      ///
      /// Locales: en, zh-Hant
      var contractAddress: RswiftResources.StringResource { .init(key: "Contract Address", tableName: "Localizable", source: source, developmentValue: "Contract Address", comment: nil) }

      /// en translation: Contract TOX balance
      ///
      /// Key: Contract_balance
      ///
      /// Locales: en, zh-Hant
      var contract_balance: RswiftResources.StringResource { .init(key: "Contract_balance", tableName: "Localizable", source: source, developmentValue: "Contract TOX balance", comment: nil) }

      /// en translation: Copy
      ///
      /// Key: Copy
      ///
      /// Locales: en, zh-Hant
      var copy: RswiftResources.StringResource { .init(key: "Copy", tableName: "Localizable", source: source, developmentValue: "Copy", comment: nil) }

      /// en translation: Copy Address
      ///
      /// Key: Copy Address
      ///
      /// Locales: en, zh-Hant
      var copyAddress: RswiftResources.StringResource { .init(key: "Copy Address", tableName: "Localizable", source: source, developmentValue: "Copy Address", comment: nil) }

      /// en translation: Country address
      ///
      /// Key: Country_address
      ///
      /// Locales: en, zh-Hant
      var country_address: RswiftResources.StringResource { .init(key: "Country_address", tableName: "Localizable", source: source, developmentValue: "Country address", comment: nil) }

      /// en translation: Creation Failed
      ///
      /// Key: Creation_Failed
      ///
      /// Locales: en, zh-Hant
      var creation_Failed: RswiftResources.StringResource { .init(key: "Creation_Failed", tableName: "Localizable", source: source, developmentValue: "Creation Failed", comment: nil) }

      /// en translation: Current chain
      ///
      /// Key: Current_Chain
      ///
      /// Locales: en, zh-Hant
      var current_Chain: RswiftResources.StringResource { .init(key: "Current_Chain", tableName: "Localizable", source: source, developmentValue: "Current chain", comment: nil) }

      /// en translation: Please complete SBT certification first
      ///
      /// Key: DIDauthenticationfirst
      ///
      /// Locales: en, zh-Hant
      var diDauthenticationfirst: RswiftResources.StringResource { .init(key: "DIDauthenticationfirst", tableName: "Localizable", source: source, developmentValue: "Please complete SBT certification first", comment: nil) }

      /// en translation: Daily Join
      ///
      /// Key: Daily_Participation
      ///
      /// Locales: en, zh-Hant
      var daily_Participation: RswiftResources.StringResource { .init(key: "Daily_Participation", tableName: "Localizable", source: source, developmentValue: "Daily Join", comment: nil) }

      /// en translation: Daily social tasks
      ///
      /// Key: Daily_social_tasks
      ///
      /// Locales: en, zh-Hant
      var daily_social_tasks: RswiftResources.StringResource { .init(key: "Daily_social_tasks", tableName: "Localizable", source: source, developmentValue: "Daily social tasks", comment: nil) }

      /// en translation: Decimals
      ///
      /// Key: Decimals
      ///
      /// Locales: en, zh-Hant
      var decimals: RswiftResources.StringResource { .init(key: "Decimals", tableName: "Localizable", source: source, developmentValue: "Decimals", comment: nil) }

      /// en translation: Deleting
      ///
      /// Key: Deleting
      ///
      /// Locales: en, zh-Hant
      var deleting: RswiftResources.StringResource { .init(key: "Deleting", tableName: "Localizable", source: source, developmentValue: "Deleting", comment: nil) }

      /// en translation: Discover the community
      ///
      /// Key: Discover_community
      ///
      /// Locales: en, zh-Hant
      var discover_community: RswiftResources.StringResource { .init(key: "Discover_community", tableName: "Localizable", source: source, developmentValue: "Discover the community", comment: nil) }

      /// en translation: Display weight composition: basic weight, social weight bonus and social weight bonus of the day
      ///
      /// Key: Display_weight_composition
      ///
      /// Locales: en, zh-Hant
      var display_weight_composition: RswiftResources.StringResource { .init(key: "Display_weight_composition", tableName: "Localizable", source: source, developmentValue: "Display weight composition: basic weight, social weight bonus and social weight bonus of the day", comment: nil) }

      /// en translation: DuckDuckGo
      ///
      /// Key: DuckDuckGo
      ///
      /// Locales: en, zh-Hant
      var duckDuckGo: RswiftResources.StringResource { .init(key: "DuckDuckGo", tableName: "Localizable", source: source, developmentValue: "DuckDuckGo", comment: nil) }

      /// en translation: Empty
      ///
      /// Key: Empty
      ///
      /// Locales: en, zh-Hant
      var empty: RswiftResources.StringResource { .init(key: "Empty", tableName: "Localizable", source: source, developmentValue: "Empty", comment: nil) }

      /// en translation: Enable Cloud Backup
      ///
      /// Key: Enable_Cloud_Backup
      ///
      /// Locales: en, zh-Hant
      var enable_Cloud_Backup: RswiftResources.StringResource { .init(key: "Enable_Cloud_Backup", tableName: "Localizable", source: source, developmentValue: "Enable Cloud Backup", comment: nil) }

      /// en translation: Endpoint
      ///
      /// Key: Endpoint
      ///
      /// Locales: en, zh-Hant
      var endpoint: RswiftResources.StringResource { .init(key: "Endpoint", tableName: "Localizable", source: source, developmentValue: "Endpoint", comment: nil) }

      /// en translation: Enter Phone Number
      ///
      /// Key: Enter_Phone_Number
      ///
      /// Locales: en, zh-Hant
      var enter_Phone_Number: RswiftResources.StringResource { .init(key: "Enter_Phone_Number", tableName: "Localizable", source: source, developmentValue: "Enter Phone Number", comment: nil) }

      /// en translation: Enter the Verification Code
      ///
      /// Key: Enter_Verification_Code
      ///
      /// Locales: en, zh-Hant
      var enter_Verification_Code: RswiftResources.StringResource { .init(key: "Enter_Verification_Code", tableName: "Localizable", source: source, developmentValue: "Enter the Verification Code", comment: nil) }

      /// en translation: Enter invitation code
      ///
      /// Key: Enter_invitation_code
      ///
      /// Locales: en, zh-Hant
      var enter_invitation_code: RswiftResources.StringResource { .init(key: "Enter_invitation_code", tableName: "Localizable", source: source, developmentValue: "Enter invitation code", comment: nil) }

      /// en translation: Enter or paste the private key
      ///
      /// Key: Enter_paste_private_key
      ///
      /// Locales: en, zh-Hant
      var enter_paste_private_key: RswiftResources.StringResource { .init(key: "Enter_paste_private_key", tableName: "Localizable", source: source, developmentValue: "Enter or paste the private key", comment: nil) }

      /// en translation: Enter or paste seed phrase
      ///
      /// Key: Enter_paste_seed_phrase
      ///
      /// Locales: en, zh-Hant
      var enter_paste_seed_phrase: RswiftResources.StringResource { .init(key: "Enter_paste_seed_phrase", tableName: "Localizable", source: source, developmentValue: "Enter or paste seed phrase", comment: nil) }

      /// en translation: Ethereum Address
      ///
      /// Key: Ethereum Address
      ///
      /// Locales: en, zh-Hant
      var ethereumAddress: RswiftResources.StringResource { .init(key: "Ethereum Address", tableName: "Localizable", source: source, developmentValue: "Ethereum Address", comment: nil) }

      /// en translation: Sorry. You have reached the maximum number of registered users.
      ///
      /// Key: ExceedServiceLimit
      ///
      /// Locales: en, zh-Hant
      var exceedServiceLimit: RswiftResources.StringResource { .init(key: "ExceedServiceLimit", tableName: "Localizable", source: source, developmentValue: "Sorry. You have reached the maximum number of registered users.", comment: nil) }

      /// en translation: Experience social earning
      ///
      /// Key: Experience_social_earning
      ///
      /// Locales: en, zh-Hant
      var experience_social_earning: RswiftResources.StringResource { .init(key: "Experience_social_earning", tableName: "Localizable", source: source, developmentValue: "Experience social earning", comment: nil) }

      /// en translation: General
      ///
      /// Key: General
      ///
      /// Locales: en, zh-Hant
      var general: RswiftResources.StringResource { .init(key: "General", tableName: "Localizable", source: source, developmentValue: "General", comment: nil) }

      /// en translation: Generate Seed Phrase
      ///
      /// Key: Generate_Seed_Phrase
      ///
      /// Locales: en, zh-Hant
      var generate_Seed_Phrase: RswiftResources.StringResource { .init(key: "Generate_Seed_Phrase", tableName: "Localizable", source: source, developmentValue: "Generate Seed Phrase", comment: nil) }

      /// en translation: Get up to
      ///
      /// Key: Get_up
      ///
      /// Locales: en, zh-Hant
      var get_up: RswiftResources.StringResource { .init(key: "Get_up", tableName: "Localizable", source: source, developmentValue: "Get up to", comment: nil) }

      /// en translation: Google
      ///
      /// Key: Google
      ///
      /// Locales: en, zh-Hant
      var google: RswiftResources.StringResource { .init(key: "Google", tableName: "Localizable", source: source, developmentValue: "Google", comment: nil) }

      /// en translation: History
      ///
      /// Key: History
      ///
      /// Locales: en, zh-Hant
      var history: RswiftResources.StringResource { .init(key: "History", tableName: "Localizable", source: source, developmentValue: "History", comment: nil) }

      /// en translation: INTO social accounts are being created automatically for you, please wait a minute...
      ///
      /// Key: INTO_social_accounts_created
      ///
      /// Locales: en, zh-Hant
      var into_social_accounts_created: RswiftResources.StringResource { .init(key: "INTO_social_accounts_created", tableName: "Localizable", source: source, developmentValue: "INTO social accounts are being created automatically for you, please wait a minute...", comment: nil) }

      /// en translation: INTO online push
      ///
      /// Key: INTOonlinepush
      ///
      /// Locales: en, zh-Hant
      var intOonlinepush: RswiftResources.StringResource { .init(key: "INTOonlinepush", tableName: "Localizable", source: source, developmentValue: "INTO online push", comment: nil) }

      /// en translation: INTO red envelope
      ///
      /// Key: INTOredpacket
      ///
      /// Locales: en, zh-Hant
      var intOredpacket: RswiftResources.StringResource { .init(key: "INTOredpacket", tableName: "Localizable", source: source, developmentValue: "INTO red envelope", comment: nil) }

      /// en translation: Import Wallet
      ///
      /// Key: Import_Wallet
      ///
      /// Locales: en, zh-Hant
      var import_Wallet: RswiftResources.StringResource { .init(key: "Import_Wallet", tableName: "Localizable", source: source, developmentValue: "Import Wallet", comment: nil) }

      /// en translation: Import failed and this seed phrase is not recognized
      ///
      /// Key: Import_failed_not_recognized
      ///
      /// Locales: en, zh-Hant
      var import_failed_not_recognized: RswiftResources.StringResource { .init(key: "Import_failed_not_recognized", tableName: "Localizable", source: source, developmentValue: "Import failed and this seed phrase is not recognized", comment: nil) }

      /// en translation: This wallet could be only used for watching. Import Private Key/Keystore to sign transactions
      ///
      /// Key: InCoordinatorError.onlyWatchAccount
      ///
      /// Locales: en, zh-Hant
      var inCoordinatorErrorOnlyWatchAccount: RswiftResources.StringResource { .init(key: "InCoordinatorError.onlyWatchAccount", tableName: "Localizable", source: source, developmentValue: "This wallet could be only used for watching. Import Private Key/Keystore to sign transactions", comment: nil) }

      /// en translation: Inky assistant
      ///
      /// Key: Inky_Assistant
      ///
      /// Locales: en, zh-Hant
      var inky_Assistant: RswiftResources.StringResource { .init(key: "Inky_Assistant", tableName: "Localizable", source: source, developmentValue: "Inky assistant", comment: nil) }

      /// en translation: Join community
      ///
      /// Key: Jo_Community
      ///
      /// Locales: en, zh-Hant
      var jo_Community: RswiftResources.StringResource { .init(key: "Jo_Community", tableName: "Localizable", source: source, developmentValue: "Join community", comment: nil) }

      /// en translation: Join a community
      ///
      /// Key: Join_community
      ///
      /// Locales: en, zh-Hant
      var join_community: RswiftResources.StringResource { .init(key: "Join_community", tableName: "Localizable", source: source, developmentValue: "Join a community", comment: nil) }

      /// en translation: Join the referral community to get 10 TOX
      ///
      /// Key: Join_referral_community
      ///
      /// Locales: en, zh-Hant
      var join_referral_community: RswiftResources.StringResource { .init(key: "Join_referral_community", tableName: "Localizable", source: source, developmentValue: "Join the referral community to get 10 TOX", comment: nil) }

      /// en translation: Keep the seed phrase in a safe place
      ///
      /// Key: Keep_safe_place
      ///
      /// Locales: en, zh-Hant
      var keep_safe_place: RswiftResources.StringResource { .init(key: "Keep_safe_place", tableName: "Localizable", source: source, developmentValue: "Keep the seed phrase in a safe place", comment: nil) }

      /// en translation: Keystore JSON
      ///
      /// Key: Keystore
      ///
      /// Locales: en, zh-Hant
      var keystore: RswiftResources.StringResource { .init(key: "Keystore", tableName: "Localizable", source: source, developmentValue: "Keystore JSON", comment: nil) }

      /// en translation: Keystore JSON
      ///
      /// Key: Keystore JSON
      ///
      /// Locales: en, zh-Hant
      var keystoreJSON: RswiftResources.StringResource { .init(key: "Keystore JSON", tableName: "Localizable", source: source, developmentValue: "Keystore JSON", comment: nil) }

      /// en translation: Keystore
      ///
      /// Key: Keystore.shorter
      ///
      /// Locales: en, zh-Hant
      var keystoreShorter: RswiftResources.StringResource { .init(key: "Keystore.shorter", tableName: "Localizable", source: source, developmentValue: "Keystore", comment: nil) }

      /// en translation: Later
      ///
      /// Key: Later
      ///
      /// Locales: en, zh-Hant
      var later: RswiftResources.StringResource { .init(key: "Later", tableName: "Localizable", source: source, developmentValue: "Later", comment: nil) }

      /// en translation: Learn about social nodes
      ///
      /// Key: Learn_social_nodes
      ///
      /// Locales: en, zh-Hant
      var learn_social_nodes: RswiftResources.StringResource { .init(key: "Learn_social_nodes", tableName: "Localizable", source: source, developmentValue: "Learn about social nodes", comment: nil) }

      /// en translation: List of Cloud Wallets
      ///
      /// Key: List_Cloud_Wallets
      ///
      /// Locales: en, zh-Hant
      var list_Cloud_Wallets: RswiftResources.StringResource { .init(key: "List_Cloud_Wallets", tableName: "Localizable", source: source, developmentValue: "List of Cloud Wallets", comment: nil) }

      /// en translation: Loading
      ///
      /// Key: Loading
      ///
      /// Locales: en, zh-Hant
      var loading: RswiftResources.StringResource { .init(key: "Loading", tableName: "Localizable", source: source, developmentValue: "Loading", comment: nil) }

      /// en translation: Loading...
      ///
      /// Key: LoadingDots
      ///
      /// Locales: en, zh-Hant
      var loadingDots: RswiftResources.StringResource { .init(key: "LoadingDots", tableName: "Localizable", source: source, developmentValue: "Loading...", comment: nil) }

      /// en translation: Know
      ///
      /// Key: MarkView.know
      ///
      /// Locales: en, zh-Hant
      var markViewKnow: RswiftResources.StringResource { .init(key: "MarkView.know", tableName: "Localizable", source: source, developmentValue: "Know", comment: nil) }

      /// en translation: You can view your current social weight composition   Basic weight + social weight bonus + social weight bonus of the day
      ///
      /// Key: MiningMarkView.steup1
      ///
      /// Locales: en, zh-Hant
      var miningMarkViewSteup1: RswiftResources.StringResource { .init(key: "MiningMarkView.steup1", tableName: "Localizable", source: source, developmentValue: "You can view your current social weight composition \n Basic weight + social weight bonus + social weight bonus of the day", comment: nil) }

      /// en translation: You can view your current TOX balance details   You can also select, recharge, transfer, and consume
      ///
      /// Key: MiningMarkView.steup2
      ///
      /// Locales: en, zh-Hant
      var miningMarkViewSteup2: RswiftResources.StringResource { .init(key: "MiningMarkView.steup2", tableName: "Localizable", source: source, developmentValue: "You can view your current TOX balance details \n You can also select, recharge, transfer, and consume", comment: nil) }

      /// en translation: Click 「Social Earning」 to earn today's income   You can also click 「Do Tasks」 to get social rewards
      ///
      /// Key: MiningMarkView.steup3
      ///
      /// Locales: en, zh-Hant
      var miningMarkViewSteup3: RswiftResources.StringResource { .init(key: "MiningMarkView.steup3", tableName: "Localizable", source: source, developmentValue: "Click 「Social Earning」 to earn today's income \n You can also click 「Do Tasks」 to get social rewards", comment: nil) }

      /// en translation: Click 「Social Nodes」 to participate in 9 different types of staking and earn more TOX
      ///
      /// Key: MiningMarkView.steup4
      ///
      /// Locales: en, zh-Hant
      var miningMarkViewSteup4: RswiftResources.StringResource { .init(key: "MiningMarkView.steup4", tableName: "Localizable", source: source, developmentValue: "Click 「Social Nodes」 to participate in 9 different types of staking and earn more TOX", comment: nil) }

      /// en translation: Check your remaining rewards for Newbie Benefits
      ///
      /// Key: MiningMarkView.steup5
      ///
      /// Locales: en, zh-Hant
      var miningMarkViewSteup5: RswiftResources.StringResource { .init(key: "MiningMarkView.steup5", tableName: "Localizable", source: source, developmentValue: "Check your remaining rewards for Newbie Benefits", comment: nil) }

      /// en translation: More
      ///
      /// Key: More
      ///
      /// Locales: en, zh-Hant
      var more: RswiftResources.StringResource { .init(key: "More", tableName: "Localizable", source: source, developmentValue: "More", comment: nil) }

      /// en translation: More Details
      ///
      /// Key: More Details
      ///
      /// Locales: en, zh-Hant
      var moreDetails: RswiftResources.StringResource { .init(key: "More Details", tableName: "Localizable", source: source, developmentValue: "More Details", comment: nil) }

      /// en translation: Languages
      ///
      /// Key: MultiLanguages
      ///
      /// Locales: en, zh-Hant
      var multiLanguages: RswiftResources.StringResource { .init(key: "MultiLanguages", tableName: "Localizable", source: source, developmentValue: "Languages", comment: nil) }

      /// en translation: My Inviter's Address
      ///
      /// Key: My_Inviter_Address
      ///
      /// Locales: en, zh-Hant
      var my_Inviter_Address: RswiftResources.StringResource { .init(key: "My_Inviter_Address", tableName: "Localizable", source: source, developmentValue: "My Inviter's Address", comment: nil) }

      /// en translation: Name
      ///
      /// Key: Name
      ///
      /// Locales: en, zh-Hant
      var name: RswiftResources.StringResource { .init(key: "Name", tableName: "Localizable", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: New
      ///
      /// Key: New
      ///
      /// Locales: en, zh-Hant
      var new: RswiftResources.StringResource { .init(key: "New", tableName: "Localizable", source: source, developmentValue: "New", comment: nil) }

      /// en translation: New Password
      ///
      /// Key: New_Password
      ///
      /// Locales: en, zh-Hant
      var new_Password: RswiftResources.StringResource { .init(key: "New_Password", tableName: "Localizable", source: source, developmentValue: "New Password", comment: nil) }

      /// en translation: Next
      ///
      /// Key: Next
      ///
      /// Locales: en, zh-Hant
      var next: RswiftResources.StringResource { .init(key: "Next", tableName: "Localizable", source: source, developmentValue: "Next", comment: nil) }

      /// en translation: No one wallet, create one now
      ///
      /// Key: No_wallet_create
      ///
      /// Locales: en, zh-Hant
      var no_wallet_create: RswiftResources.StringResource { .init(key: "No_wallet_create", tableName: "Localizable", source: source, developmentValue: "No one wallet, create one now", comment: nil) }

      /// en translation: OK
      ///
      /// Key: OK
      ///
      /// Locales: en, zh-Hant
      var oK: RswiftResources.StringResource { .init(key: "OK", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Participate in TOX eco-experience to earn 20 TOX
      ///
      /// Key: Participate_eco-experience
      ///
      /// Locales: en, zh-Hant
      var participate_ecoExperience: RswiftResources.StringResource { .init(key: "Participate_eco-experience", tableName: "Localizable", source: source, developmentValue: "Participate in TOX eco-experience to earn 20 TOX", comment: nil) }

      /// en translation: Participate in social nodes to get 20TOX
      ///
      /// Key: Participate_social_nodes
      ///
      /// Locales: en, zh-Hant
      var participate_social_nodes: RswiftResources.StringResource { .init(key: "Participate_social_nodes", tableName: "Localizable", source: source, developmentValue: "Participate in social nodes to get 20TOX", comment: nil) }

      /// en translation: Participate in social nodes and enjoy stable and generous rewards!
      ///
      /// Key: Participate_social_nodes_rewards
      ///
      /// Locales: en, zh-Hant
      var participate_social_nodes_rewards: RswiftResources.StringResource { .init(key: "Participate_social_nodes_rewards", tableName: "Localizable", source: source, developmentValue: "Participate in social nodes and enjoy stable and generous rewards!", comment: nil) }

      /// en translation: Participation in social nodes
      ///
      /// Key: Participation_social_nodes
      ///
      /// Locales: en, zh-Hant
      var participation_social_nodes: RswiftResources.StringResource { .init(key: "Participation_social_nodes", tableName: "Localizable", source: source, developmentValue: "Participation in social nodes", comment: nil) }

      /// en translation: Pending review
      ///
      /// Key: Pending_review
      ///
      /// Locales: en, zh-Hant
      var pending_review: RswiftResources.StringResource { .init(key: "Pending_review", tableName: "Localizable", source: source, developmentValue: "Pending review", comment: nil) }

      /// en translation: Claim
      ///
      /// Key: Pick_up_now
      ///
      /// Locales: en, zh-Hant
      var pick_up_now: RswiftResources.StringResource { .init(key: "Pick_up_now", tableName: "Localizable", source: source, developmentValue: "Claim", comment: nil) }

      /// en translation: Please Associate INID
      ///
      /// Key: Please_Associate_INID
      ///
      /// Locales: en, zh-Hant
      var please_Associate_INID: RswiftResources.StringResource { .init(key: "Please_Associate_INID", tableName: "Localizable", source: source, developmentValue: "Please Associate INID", comment: nil) }

      /// en translation: Private Key
      ///
      /// Key: Private Key
      ///
      /// Locales: en, zh-Hant
      var privateKey: RswiftResources.StringResource { .init(key: "Private Key", tableName: "Localizable", source: source, developmentValue: "Private Key", comment: nil) }

      /// en translation: Private Key Import
      ///
      /// Key: Private_Key_Import
      ///
      /// Locales: en, zh-Hant
      var private_Key_Import: RswiftResources.StringResource { .init(key: "Private_Key_Import", tableName: "Localizable", source: source, developmentValue: "Private Key Import", comment: nil) }

      /// en translation: Read the social node rules to get 20TOX
      ///
      /// Key: Read_social_node_rules
      ///
      /// Locales: en, zh-Hant
      var read_social_node_rules: RswiftResources.StringResource { .init(key: "Read_social_node_rules", tableName: "Localizable", source: source, developmentValue: "Read the social node rules to get 20TOX", comment: nil) }

      /// en translation: Refresh
      ///
      /// Key: Refresh
      ///
      /// Locales: en, zh-Hant
      var refresh: RswiftResources.StringResource { .init(key: "Refresh", tableName: "Localizable", source: source, developmentValue: "Refresh", comment: nil) }

      /// en translation: Registing..
      ///
      /// Key: Registing
      ///
      /// Locales: en, zh-Hant
      var registing: RswiftResources.StringResource { .init(key: "Registing", tableName: "Localizable", source: source, developmentValue: "Registing..", comment: nil) }

      /// en translation: Reload
      ///
      /// Key: Reload
      ///
      /// Locales: en, zh-Hant
      var reload: RswiftResources.StringResource { .init(key: "Reload", tableName: "Localizable", source: source, developmentValue: "Reload", comment: nil) }

      /// en translation: Reset
      ///
      /// Key: Reset
      ///
      /// Locales: en, zh-Hant
      var reset: RswiftResources.StringResource { .init(key: "Reset", tableName: "Localizable", source: source, developmentValue: "Reset", comment: nil) }

      /// en translation: Retry
      ///
      /// Key: Retry
      ///
      /// Locales: en, zh-Hant
      var retry: RswiftResources.StringResource { .init(key: "Retry", tableName: "Localizable", source: source, developmentValue: "Retry", comment: nil) }

      /// en translation: Scan the QR code to download
      ///
      /// Key: Scan_QR_code_download
      ///
      /// Locales: en, zh-Hant
      var scan_QR_code_download: RswiftResources.StringResource { .init(key: "Scan_QR_code_download", tableName: "Localizable", source: source, developmentValue: "Scan the QR code to download", comment: nil) }

      /// en translation: Seed Phrase Import
      ///
      /// Key: Seed_Phrase_Import
      ///
      /// Locales: en, zh-Hant
      var seed_Phrase_Import: RswiftResources.StringResource { .init(key: "Seed_Phrase_Import", tableName: "Localizable", source: source, developmentValue: "Seed Phrase Import", comment: nil) }

      /// en translation: Seed Phrase #15
      ///
      /// Key: Seed_Phrase_fifteen
      ///
      /// Locales: en, zh-Hant
      var seed_Phrase_fifteen: RswiftResources.StringResource { .init(key: "Seed_Phrase_fifteen", tableName: "Localizable", source: source, developmentValue: "Seed Phrase #15", comment: nil) }

      /// en translation: Seed Phrase #1
      ///
      /// Key: Seed_Phrase_one
      ///
      /// Locales: en, zh-Hant
      var seed_Phrase_one: RswiftResources.StringResource { .init(key: "Seed_Phrase_one", tableName: "Localizable", source: source, developmentValue: "Seed Phrase #1", comment: nil) }

      /// en translation: Seed Phrase #12
      ///
      /// Key: Seed_Phrase_twelve
      ///
      /// Locales: en, zh-Hant
      var seed_Phrase_twelve: RswiftResources.StringResource { .init(key: "Seed_Phrase_twelve", tableName: "Localizable", source: source, developmentValue: "Seed Phrase #12", comment: nil) }

      /// en translation: Share
      ///
      /// Key: Share
      ///
      /// Locales: en, zh-Hant
      var share: RswiftResources.StringResource { .init(key: "Share", tableName: "Localizable", source: source, developmentValue: "Share", comment: nil) }

      /// en translation: Skip
      ///
      /// Key: Skip
      ///
      /// Locales: en, zh-Hant
      var skip: RswiftResources.StringResource { .init(key: "Skip", tableName: "Localizable", source: source, developmentValue: "Skip", comment: nil) }

      /// en translation: Start the beginner tasks
      ///
      /// Key: Start_beginner_tasks
      ///
      /// Locales: en, zh-Hant
      var start_beginner_tasks: RswiftResources.StringResource { .init(key: "Start_beginner_tasks", tableName: "Localizable", source: source, developmentValue: "Start the beginner tasks", comment: nil) }

      /// en translation: Complaints and suggestions
      ///
      /// Key: Suggestions
      ///
      /// Locales: en, zh-Hant
      var suggestions: RswiftResources.StringResource { .init(key: "Suggestions", tableName: "Localizable", source: source, developmentValue: "Complaints and suggestions", comment: nil) }

      /// en translation: Complaints and suggestions will be sent to
      ///
      /// Key: SuggestionsPrompt
      ///
      /// Locales: en, zh-Hant
      var suggestionsPrompt: RswiftResources.StringResource { .init(key: "SuggestionsPrompt", tableName: "Localizable", source: source, developmentValue: "Complaints and suggestions will be sent to", comment: nil) }

      /// en translation: Symbol
      ///
      /// Key: Symbol
      ///
      /// Locales: en, zh-Hant
      var symbol: RswiftResources.StringResource { .init(key: "Symbol", tableName: "Localizable", source: source, developmentValue: "Symbol", comment: nil) }

      /// en translation: System Information
      ///
      /// Key: System_Information
      ///
      /// Locales: en, zh-Hant
      var system_Information: RswiftResources.StringResource { .init(key: "System_Information", tableName: "Localizable", source: source, developmentValue: "System Information", comment: nil) }

      /// en translation: Task
      ///
      /// Key: Task
      ///
      /// Locales: en, zh-Hant
      var task: RswiftResources.StringResource { .init(key: "Task", tableName: "Localizable", source: source, developmentValue: "Task", comment: nil) }

      /// en translation: Task Guide
      ///
      /// Key: Task_Guide
      ///
      /// Locales: en, zh-Hant
      var task_Guide: RswiftResources.StringResource { .init(key: "Task_Guide", tableName: "Localizable", source: source, developmentValue: "Task Guide", comment: nil) }

      /// en translation: Task List
      ///
      /// Key: Task_List
      ///
      /// Locales: en, zh-Hant
      var task_List: RswiftResources.StringResource { .init(key: "Task_List", tableName: "Localizable", source: source, developmentValue: "Task List", comment: nil) }

      /// en translation: The recommended method of backup
      ///
      /// Key: The_method_backup
      ///
      /// Locales: en, zh-Hant
      var the_method_backup: RswiftResources.StringResource { .init(key: "The_method_backup", tableName: "Localizable", source: source, developmentValue: "The recommended method of backup", comment: nil) }

      /// en translation: The seed phrase is the credential you use to recover your wallet and is only saved in your device. Please be sure to keep it safe so that you can restore it in the future when needed
      ///
      /// Key: The_seed_phrase_restore_needed
      ///
      /// Locales: en, zh-Hant
      var the_seed_phrase_restore_needed: RswiftResources.StringResource { .init(key: "The_seed_phrase_restore_needed", tableName: "Localizable", source: source, developmentValue: "The seed phrase is the credential you use to recover your wallet and is only saved in your device. Please be sure to keep it safe so that you can restore it in the future when needed", comment: nil) }

      /// en translation: Today
      ///
      /// Key: Today
      ///
      /// Locales: en, zh-Hant
      var today: RswiftResources.StringResource { .init(key: "Today", tableName: "Localizable", source: source, developmentValue: "Today", comment: nil) }

      /// en translation: Click to switch the current chain
      ///
      /// Key: TokenMarkView.steup1
      ///
      /// Locales: en, zh-Hant
      var tokenMarkViewSteup1: RswiftResources.StringResource { .init(key: "TokenMarkView.steup1", tableName: "Localizable", source: source, developmentValue: "Click to switch the current chain", comment: nil) }

      /// en translation: Display current wallet information   Click on the right to switch wallets or open wallet settings
      ///
      /// Key: TokenMarkView.steup2
      ///
      /// Locales: en, zh-Hant
      var tokenMarkViewSteup2: RswiftResources.StringResource { .init(key: "TokenMarkView.steup2", tableName: "Localizable", source: source, developmentValue: "Display current wallet information \n Click on the right to switch wallets or open wallet settings", comment: nil) }

      /// en translation: You can better participate in the TOX ecosystem after completing these operations
      ///
      /// Key: TokenMarkView.steup3
      ///
      /// Locales: en, zh-Hant
      var tokenMarkViewSteup3: RswiftResources.StringResource { .init(key: "TokenMarkView.steup3", tableName: "Localizable", source: source, developmentValue: "You can better participate in the TOX ecosystem after completing these operations", comment: nil) }

      /// en translation: Show errors
      ///
      /// Key: TokenScript.showErrors
      ///
      /// Locales: en, zh-Hant
      var tokenScriptShowErrors: RswiftResources.StringResource { .init(key: "TokenScript.showErrors", tableName: "Localizable", source: source, developmentValue: "Show errors", comment: nil) }

      /// en translation: Verified
      ///
      /// Key: TokenScript.type1.supportedAndSigned
      ///
      /// Locales: en, zh-Hant
      var tokenScriptType1SupportedAndSigned: RswiftResources.StringResource { .init(key: "TokenScript.type1.supportedAndSigned", tableName: "Localizable", source: source, developmentValue: "Verified", comment: nil) }

      /// en translation: Unsigned
      ///
      /// Key: TokenScript.type1.supportedNotCanonicalizedAndUnsigned
      ///
      /// Locales: en, zh-Hant
      var tokenScriptType1SupportedNotCanonicalizedAndUnsigned: RswiftResources.StringResource { .init(key: "TokenScript.type1.supportedNotCanonicalizedAndUnsigned", tableName: "Localizable", source: source, developmentValue: "Unsigned", comment: nil) }

      /// en translation: Conflicting TokenScript Files
      ///
      /// Key: TokenScript.type2.conflictingFiles
      ///
      /// Locales: en, zh-Hant
      var tokenScriptType2ConflictingFiles: RswiftResources.StringResource { .init(key: "TokenScript.type2.conflictingFiles", tableName: "Localizable", source: source, developmentValue: "Conflicting TokenScript Files", comment: nil) }

      /// en translation: Invalid Signature
      ///
      /// Key: TokenScript.type2.invalidSignature
      ///
      /// Locales: en, zh-Hant
      var tokenScriptType2InvalidSignature: RswiftResources.StringResource { .init(key: "TokenScript.type2.invalidSignature", tableName: "Localizable", source: source, developmentValue: "Invalid Signature", comment: nil) }

      /// en translation: Old TokenScript Version
      ///
      /// Key: TokenScript.type2.oldSchemaVersion
      ///
      /// Locales: en, zh-Hant
      var tokenScriptType2OldSchemaVersion: RswiftResources.StringResource { .init(key: "TokenScript.type2.oldSchemaVersion", tableName: "Localizable", source: source, developmentValue: "Old TokenScript Version", comment: nil) }

      /// en translation: Verifying...
      ///
      /// Key: TokenScript.verifying
      ///
      /// Locales: en, zh-Hant
      var tokenScriptVerifying: RswiftResources.StringResource { .init(key: "TokenScript.verifying", tableName: "Localizable", source: source, developmentValue: "Verifying...", comment: nil) }

      /// en translation: Turn on INTO
      ///
      /// Key: Turn_on_INTO
      ///
      /// Locales: en, zh-Hant
      var turn_on_INTO: RswiftResources.StringResource { .init(key: "Turn_on_INTO", tableName: "Localizable", source: source, developmentValue: "Turn on INTO", comment: nil) }

      /// en translation: The Twitter has already been authenticated with its real name
      ///
      /// Key: Twitteraccountverified
      ///
      /// Locales: en, zh-Hant
      var twitteraccountverified: RswiftResources.StringResource { .init(key: "Twitteraccountverified", tableName: "Localizable", source: source, developmentValue: "The Twitter has already been authenticated with its real name", comment: nil) }

      /// en translation: Unbind previous binding
      ///
      /// Key: Unbind_the_old_binding
      ///
      /// Locales: en, zh-Hant
      var unbind_the_old_binding: RswiftResources.StringResource { .init(key: "Unbind_the_old_binding", tableName: "Localizable", source: source, developmentValue: "Unbind previous binding", comment: nil) }

      /// en translation: Unlock successfully! Auto-jumping…
      ///
      /// Key: Unlock_successfully_Auto-jumping
      ///
      /// Locales: en, zh-Hant
      var unlock_successfully_AutoJumping: RswiftResources.StringResource { .init(key: "Unlock_successfully_Auto-jumping", tableName: "Localizable", source: source, developmentValue: "Unlock successfully! Auto-jumping…", comment: nil) }

      /// en translation: Version Update
      ///
      /// Key: UpdateVersion
      ///
      /// Locales: en, zh-Hant
      var updateVersion: RswiftResources.StringResource { .init(key: "UpdateVersion", tableName: "Localizable", source: source, developmentValue: "Version Update", comment: nil) }

      /// en translation:   [Personal Business Card] %@
      ///
      /// Key: UserCarding
      ///
      /// Locales: en, zh-Hant
      var userCarding: RswiftResources.StringResource1<String> { .init(key: "UserCarding", tableName: "Localizable", source: source, developmentValue: "  [Personal Business Card] %@", comment: nil) }

      /// en translation: Using pen and paper, transcribe the seed phrases correctly in order
      ///
      /// Key: Using_pen_transcribe
      ///
      /// Locales: en, zh-Hant
      var using_pen_transcribe: RswiftResources.StringResource { .init(key: "Using_pen_transcribe", tableName: "Localizable", source: source, developmentValue: "Using pen and paper, transcribe the seed phrases correctly in order", comment: nil) }

      /// en translation: Verify Backup
      ///
      /// Key: Verify_Backup
      ///
      /// Locales: en, zh-Hant
      var verify_Backup: RswiftResources.StringResource { .init(key: "Verify_Backup", tableName: "Localizable", source: source, developmentValue: "Verify Backup", comment: nil) }

      /// en translation: Wallet Address:
      ///
      /// Key: Wallet_Address:
      ///
      /// Locales: en, zh-Hant
      var wallet_Address: RswiftResources.StringResource { .init(key: "Wallet_Address:", tableName: "Localizable", source: source, developmentValue: "Wallet Address:", comment: nil) }

      /// en translation: Wallet Backup 
      ///
      /// Key: Wallet_Backup
      ///
      /// Locales: en, zh-Hant
      var wallet_Backup: RswiftResources.StringResource { .init(key: "Wallet_Backup", tableName: "Localizable", source: source, developmentValue: "Wallet Backup ", comment: nil) }

      /// en translation: Wallet generation…
      ///
      /// Key: Wallet_generation
      ///
      /// Locales: en, zh-Hant
      var wallet_generation: RswiftResources.StringResource { .init(key: "Wallet_generation", tableName: "Localizable", source: source, developmentValue: "Wallet generation…", comment: nil) }

      /// en translation: Wallet imported successfully
      ///
      /// Key: Wallet_imported_successfully
      ///
      /// Locales: en, zh-Hant
      var wallet_imported_successfully: RswiftResources.StringResource { .init(key: "Wallet_imported_successfully", tableName: "Localizable", source: source, developmentValue: "Wallet imported successfully", comment: nil) }

      /// en translation: Watch
      ///
      /// Key: Watch
      ///
      /// Locales: en, zh-Hant
      var watch: RswiftResources.StringResource { .init(key: "Watch", tableName: "Localizable", source: source, developmentValue: "Watch", comment: nil) }

      /// en translation: Welcome to INTOverse!
      ///
      /// Key: Welcome_to_INTOverse
      ///
      /// Locales: en, zh-Hant
      var welcome_to_INTOverse: RswiftResources.StringResource { .init(key: "Welcome_to_INTOverse", tableName: "Localizable", source: source, developmentValue: "Welcome to INTOverse!", comment: nil) }

      /// en translation: Yesterday
      ///
      /// Key: Yesterday
      ///
      /// Locales: en, zh-Hant
      var yesterday: RswiftResources.StringResource { .init(key: "Yesterday", tableName: "Localizable", source: source, developmentValue: "Yesterday", comment: nil) }

      /// en translation: [Voice]
      ///
      /// Key: [Audio]
      ///
      /// Locales: en, zh-Hant
      var audio: RswiftResources.StringResource { .init(key: "[Audio]", tableName: "Localizable", source: source, developmentValue: "[Voice]", comment: nil) }

      /// en translation: [Custom message]
      ///
      /// Key: [Customemsg]
      ///
      /// Locales: en, zh-Hant
      var customemsg: RswiftResources.StringResource { .init(key: "[Customemsg]", tableName: "Localizable", source: source, developmentValue: "[Custom message]", comment: nil) }

      /// en translation: [Image]
      ///
      /// Key: [Image]
      ///
      /// Locales: en, zh-Hant
      var image: RswiftResources.StringResource { .init(key: "[Image]", tableName: "Localizable", source: source, developmentValue: "[Image]", comment: nil) }

      /// en translation: [My location]
      ///
      /// Key: [Location]
      ///
      /// Locales: en, zh-Hant
      var location: RswiftResources.StringResource { .init(key: "[Location]", tableName: "Localizable", source: source, developmentValue: "[My location]", comment: nil) }

      /// en translation: [@Mentioning me]
      ///
      /// Key: [someone@me]
      ///
      /// Locales: en, zh-Hant
      var someoneMe: RswiftResources.StringResource { .init(key: "[someone@me]", tableName: "Localizable", source: source, developmentValue: "[@Mentioning me]", comment: nil) }

      /// en translation: Advanced
      ///
      /// Key: a.advanced.settings.navigation.title
      ///
      /// Locales: en, zh-Hant
      var aAdvancedSettingsNavigationTitle: RswiftResources.StringResource { .init(key: "a.advanced.settings.navigation.title", tableName: "Localizable", source: source, developmentValue: "Advanced", comment: nil) }

      /// en translation: EQUIVALENT IN USD
      ///
      /// Key: a.claim.token.dollarCostLabel.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenDollarCostLabelTitle: RswiftResources.StringResource { .init(key: "a.claim.token.dollarCostLabel.title", tableName: "Localizable", source: source, developmentValue: "EQUIVALENT IN USD", comment: nil) }

      /// en translation: Free Import
      ///
      /// Key: a.claim.token.ethCost.free.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenEthCostFreeTitle: RswiftResources.StringResource { .init(key: "a.claim.token.ethCost.free.title", tableName: "Localizable", source: source, developmentValue: "Free Import", comment: nil) }

      /// en translation: Total Cost
      ///
      /// Key: a.claim.token.ethCostLabel.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenEthCostLabelTitle: RswiftResources.StringResource { .init(key: "a.claim.token.ethCostLabel.title", tableName: "Localizable", source: source, developmentValue: "Total Cost", comment: nil) }

      /// en translation: You do not have enough ETH to import this ticket
      ///
      /// Key: a.claim.token.failed.notEnoughEth.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenFailedNotEnoughEthTitle: RswiftResources.StringResource { .init(key: "a.claim.token.failed.notEnoughEth.title", tableName: "Localizable", source: source, developmentValue: "You do not have enough ETH to import this ticket", comment: nil) }

      /// en translation: You do not have enough xDAI to import this ticket
      ///
      /// Key: a.claim.token.failed.notEnoughXDAI.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenFailedNotEnoughXDAITitle: RswiftResources.StringResource { .init(key: "a.claim.token.failed.notEnoughXDAI.title", tableName: "Localizable", source: source, developmentValue: "You do not have enough xDAI to import this ticket", comment: nil) }

      /// en translation: Paymaster server down, please try again later
      ///
      /// Key: a.claim.token.failed.serverDown
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenFailedServerDown: RswiftResources.StringResource { .init(key: "a.claim.token.failed.serverDown", tableName: "Localizable", source: source, developmentValue: "Paymaster server down, please try again later", comment: nil) }

      /// en translation: Invalid ticket link
      ///
      /// Key: a.claim.token.failed.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenFailedTitle: RswiftResources.StringResource { .init(key: "a.claim.token.failed.title", tableName: "Localizable", source: source, developmentValue: "Invalid ticket link", comment: nil) }

      /// en translation: Import
      ///
      /// Key: a.claim.token.import.button.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenImportButtonTitle: RswiftResources.StringResource { .init(key: "a.claim.token.import.button.title", tableName: "Localizable", source: source, developmentValue: "Import", comment: nil) }

      /// en translation: Importing tickets...
      ///
      /// Key: a.claim.token.inProgress.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenInProgressTitle: RswiftResources.StringResource { .init(key: "a.claim.token.inProgress.title", tableName: "Localizable", source: source, developmentValue: "Importing tickets...", comment: nil) }

      /// en translation: Invalid Link, please try again
      ///
      /// Key: a.claim.token.invalidLink.tryAgain
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenInvalidLinkTryAgain: RswiftResources.StringResource { .init(key: "a.claim.token.invalidLink.tryAgain", tableName: "Localizable", source: source, developmentValue: "Invalid Link, please try again", comment: nil) }

      /// en translation: Link has already been redeemed
      ///
      /// Key: a.claim.token.linkAlreadyRedeemed
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenLinkAlreadyRedeemed: RswiftResources.StringResource { .init(key: "a.claim.token.linkAlreadyRedeemed", tableName: "Localizable", source: source, developmentValue: "Link has already been redeemed", comment: nil) }

      /// en translation: Link has expired
      ///
      /// Key: a.claim.token.linkExpired
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenLinkExpired: RswiftResources.StringResource { .init(key: "a.claim.token.linkExpired", tableName: "Localizable", source: source, developmentValue: "Link has expired", comment: nil) }

      /// en translation: Not connected to the internet, please try again
      ///
      /// Key: a.claim.token.noConnectivity.tryAgain
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenNoConnectivityTryAgain: RswiftResources.StringResource { .init(key: "a.claim.token.noConnectivity.tryAgain", tableName: "Localizable", source: source, developmentValue: "Not connected to the internet, please try again", comment: nil) }

      /// en translation: Import Link?
      ///
      /// Key: a.claim.token.prompt
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenPrompt: RswiftResources.StringResource { .init(key: "a.claim.token.prompt", tableName: "Localizable", source: source, developmentValue: "Import Link?", comment: nil) }

      /// en translation: Import?
      ///
      /// Key: a.claim.token.promptImport.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenPromptImportTitle: RswiftResources.StringResource { .init(key: "a.claim.token.promptImport.title", tableName: "Localizable", source: source, developmentValue: "Import?", comment: nil) }

      /// en translation: Purchase
      ///
      /// Key: a.claim.token.purchase.button.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenPurchaseButtonTitle: RswiftResources.StringResource { .init(key: "a.claim.token.purchase.button.title", tableName: "Localizable", source: source, developmentValue: "Purchase", comment: nil) }

      /// en translation: Your ticket has been transferred and the balance will be updated shortly
      ///
      /// Key: a.claim.token.success.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenSuccessTitle: RswiftResources.StringResource { .init(key: "a.claim.token.success.title", tableName: "Localizable", source: source, developmentValue: "Your ticket has been transferred and the balance will be updated shortly", comment: nil) }

      /// en translation: Importing %@
      ///
      /// Key: a.claim.token.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenTitle: RswiftResources.StringResource1<String> { .init(key: "a.claim.token.title", tableName: "Localizable", source: source, developmentValue: "Importing %@", comment: nil) }

      /// en translation: Processing...
      ///
      /// Key: a.claim.token.validating.title
      ///
      /// Locales: en, zh-Hant
      var aClaimTokenValidatingTitle: RswiftResources.StringResource { .init(key: "a.claim.token.validating.title", tableName: "Localizable", source: source, developmentValue: "Processing...", comment: nil) }

      /// en translation: Console
      ///
      /// Key: a.console.title
      ///
      /// Locales: en, zh-Hant
      var aConsoleTitle: RswiftResources.StringResource { .init(key: "a.console.title", tableName: "Localizable", source: source, developmentValue: "Console", comment: nil) }

      /// en translation: TokenScript Overrides
      ///
      /// Key: a.help.assetDefinitionOverrides.title
      ///
      /// Locales: en, zh-Hant
      var aHelpAssetDefinitionOverridesTitle: RswiftResources.StringResource { .init(key: "a.help.assetDefinitionOverrides.title", tableName: "Localizable", source: source, developmentValue: "TokenScript Overrides", comment: nil) }

      /// en translation: App Version: %@
      ///
      /// Key: a.help.contact.email.appVersion
      ///
      /// Locales: en, zh-Hant
      var aHelpContactEmailAppVersion: RswiftResources.StringResource1<String> { .init(key: "a.help.contact.email.appVersion", tableName: "Localizable", source: source, developmentValue: "App Version: %@", comment: nil) }

      /// en translation: Device Model: %@
      ///
      /// Key: a.help.contact.email.deviceModel
      ///
      /// Locales: en, zh-Hant
      var aHelpContactEmailDeviceModel: RswiftResources.StringResource1<String> { .init(key: "a.help.contact.email.deviceModel", tableName: "Localizable", source: source, developmentValue: "Device Model: %@", comment: nil) }

      /// en translation: Helpful information to developers:
      ///
      /// Key: a.help.contact.email.helpfulToDevelopers
      ///
      /// Locales: en, zh-Hant
      var aHelpContactEmailHelpfulToDevelopers: RswiftResources.StringResource { .init(key: "a.help.contact.email.helpfulToDevelopers", tableName: "Localizable", source: source, developmentValue: "Helpful information to developers:", comment: nil) }

      /// en translation: iOS Version: %@
      ///
      /// Key: a.help.contact.email.iosVersion
      ///
      /// Locales: en, zh-Hant
      var aHelpContactEmailIosVersion: RswiftResources.StringResource1<String> { .init(key: "a.help.contact.email.iosVersion", tableName: "Localizable", source: source, developmentValue: "iOS Version: %@", comment: nil) }

      /// en translation: Current locale: %@
      ///
      /// Key: a.help.contact.email.locale
      ///
      /// Locales: en, zh-Hant
      var aHelpContactEmailLocale: RswiftResources.StringResource1<String> { .init(key: "a.help.contact.email.locale", tableName: "Localizable", source: source, developmentValue: "Current locale: %@", comment: nil) }

      /// en translation: Help/Feedback for INTO
      ///
      /// Key: a.help.contact.email.subject
      ///
      /// Locales: en, zh-Hant
      var aHelpContactEmailSubject: RswiftResources.StringResource { .init(key: "a.help.contact.email.subject", tableName: "Localizable", source: source, developmentValue: "Help/Feedback for INTO", comment: nil) }

      /// en translation: Still need help? Contact Us
      ///
      /// Key: a.help.contact.footer.button.title
      ///
      /// Locales: en, zh-Hant
      var aHelpContactFooterButtonTitle: RswiftResources.StringResource { .init(key: "a.help.contact.footer.button.title", tableName: "Localizable", source: source, developmentValue: "Still need help? Contact Us", comment: nil) }

      /// en translation: How do I get my money?
      ///
      /// Key: a.help.contents.howDoIGetMyMoney
      ///
      /// Locales: en, zh-Hant
      var aHelpContentsHowDoIGetMyMoney: RswiftResources.StringResource { .init(key: "a.help.contents.howDoIGetMyMoney", tableName: "Localizable", source: source, developmentValue: "How do I get my money?", comment: nil) }

      /// en translation: How do I transfer ETH into my wallet?
      ///
      /// Key: a.help.contents.howDoITransferETHIntoMyWallet
      ///
      /// Locales: en, zh-Hant
      var aHelpContentsHowDoITransferETHIntoMyWallet: RswiftResources.StringResource { .init(key: "a.help.contents.howDoITransferETHIntoMyWallet", tableName: "Localizable", source: source, developmentValue: "How do I transfer ETH into my wallet?", comment: nil) }

      /// en translation: Privacy Policy
      ///
      /// Key: a.help.contents.privacyPolicy
      ///
      /// Locales: en, zh-Hant
      var aHelpContentsPrivacyPolicy: RswiftResources.StringResource { .init(key: "a.help.contents.privacyPolicy", tableName: "Localizable", source: source, developmentValue: "Privacy Policy", comment: nil) }

      /// en translation: Terms of Service
      ///
      /// Key: a.help.contents.termsOfService
      ///
      /// Locales: en, zh-Hant
      var aHelpContentsTermsOfService: RswiftResources.StringResource { .init(key: "a.help.contents.termsOfService", tableName: "Localizable", source: source, developmentValue: "Terms of Service", comment: nil) }

      /// en translation: What is ETH/Ethereum?
      ///
      /// Key: a.help.contents.whatIsETH
      ///
      /// Locales: en, zh-Hant
      var aHelpContentsWhatIsETH: RswiftResources.StringResource { .init(key: "a.help.contents.whatIsETH", tableName: "Localizable", source: source, developmentValue: "What is ETH/Ethereum?", comment: nil) }

      /// en translation: Help & FAQs
      ///
      /// Key: a.help.navigation.title
      ///
      /// Locales: en, zh-Hant
      var aHelpNavigationTitle: RswiftResources.StringResource { .init(key: "a.help.navigation.title", tableName: "Localizable", source: source, developmentValue: "Help & FAQs", comment: nil) }

      /// en translation: Marketplace
      ///
      /// Key: a.marketplace.tabbar.item.title
      ///
      /// Locales: en, zh-Hant
      var aMarketplaceTabbarItemTitle: RswiftResources.StringResource { .init(key: "a.marketplace.tabbar.item.title", tableName: "Localizable", source: source, developmentValue: "Marketplace", comment: nil) }

      /// en translation: Insufficient balance
      ///
      /// Key: a.send.balance.insufficient
      ///
      /// Locales: en, zh-Hant
      var aSendBalanceInsufficient: RswiftResources.StringResource { .init(key: "a.send.balance.insufficient", tableName: "Localizable", source: source, developmentValue: "Insufficient balance", comment: nil) }

      /// en translation: Send/Receive
      ///
      /// Key: a.send.receive.button.title
      ///
      /// Locales: en, zh-Hant
      var aSendReceiveButtonTitle: RswiftResources.StringResource { .init(key: "a.send.receive.button.title", tableName: "Localizable", source: source, developmentValue: "Send/Receive", comment: nil) }

      /// en translation: ADDRESS
      ///
      /// Key: a.send.recipient.address.title
      ///
      /// Locales: en, zh-Hant
      var aSendRecipientAddressTitle: RswiftResources.StringResource { .init(key: "a.send.recipient.address.title", tableName: "Localizable", source: source, developmentValue: "ADDRESS", comment: nil) }

      /// en translation: Clear Browser cache
      ///
      /// Key: a.settings.contents.clearDappBrowserCache
      ///
      /// Locales: en, zh-Hant
      var aSettingsContentsClearDappBrowserCache: RswiftResources.StringResource { .init(key: "a.settings.contents.clearDappBrowserCache", tableName: "Localizable", source: source, developmentValue: "Clear Browser cache", comment: nil) }

      /// en translation: My Wallet Address
      ///
      /// Key: a.settings.contents.myWalletAddress
      ///
      /// Locales: en, zh-Hant
      var aSettingsContentsMyWalletAddress: RswiftResources.StringResource { .init(key: "a.settings.contents.myWalletAddress", tableName: "Localizable", source: source, developmentValue: "My Wallet Address", comment: nil) }

      /// en translation: Settings
      ///
      /// Key: a.settings.navigation.title
      ///
      /// Locales: en, zh-Hant
      var aSettingsNavigationTitle: RswiftResources.StringResource { .init(key: "a.settings.navigation.title", tableName: "Localizable", source: source, developmentValue: "Settings", comment: nil) }

      /// en translation: Tools
      ///
      /// Key: a.settings.tools
      ///
      /// Locales: en, zh-Hant
      var aSettingsTools: RswiftResources.StringResource { .init(key: "a.settings.tools", tableName: "Localizable", source: source, developmentValue: "Tools", comment: nil) }

      /// en translation: Scan the QR Code or copy the text below:
      ///
      /// Key: a.wallet.address.scan.instructions
      ///
      /// Locales: en, zh-Hant
      var aWalletAddressScanInstructions: RswiftResources.StringResource { .init(key: "a.wallet.address.scan.instructions", tableName: "Localizable", source: source, developmentValue: "Scan the QR Code or copy the text below:", comment: nil) }

      /// en translation: My %@ Wallet Address
      ///
      /// Key: a.wallet.address.title
      ///
      /// Locales: en, zh-Hant
      var aWalletAddressTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.address.title", tableName: "Localizable", source: source, developmentValue: "My %@ Wallet Address", comment: nil) }

      /// en translation: All
      ///
      /// Key: a.wallet.contents.filter.all.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsFilterAllTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.filter.all.title", tableName: "Localizable", source: source, developmentValue: "All", comment: nil) }

      /// en translation: Assets
      ///
      /// Key: a.wallet.contents.filter.assetsOnly.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsFilterAssetsOnlyTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.filter.assetsOnly.title", tableName: "Localizable", source: source, developmentValue: "Assets", comment: nil) }

      /// en translation: Collectibles
      ///
      /// Key: a.wallet.contents.filter.collectiblesOnly.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsFilterCollectiblesOnlyTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.filter.collectiblesOnly.title", tableName: "Localizable", source: source, developmentValue: "Collectibles", comment: nil) }

      /// en translation: Currencies
      ///
      /// Key: a.wallet.contents.filter.currencyOnly.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsFilterCurrencyOnlyTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.filter.currencyOnly.title", tableName: "Localizable", source: source, developmentValue: "Currencies", comment: nil) }

      /// en translation: DeFi
      ///
      /// Key: a.wallet.contents.filter.defi.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsFilterDefiTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.filter.defi.title", tableName: "Localizable", source: source, developmentValue: "DeFi", comment: nil) }

      /// en translation: Governance
      ///
      /// Key: a.wallet.contents.filter.governance.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsFilterGovernanceTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.filter.governance.title", tableName: "Localizable", source: source, developmentValue: "Governance", comment: nil) }

      /// en translation: Issuer
      ///
      /// Key: a.wallet.contents.issuer.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsIssuerTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.issuer.title", tableName: "Localizable", source: source, developmentValue: "Issuer", comment: nil) }

      /// en translation: APPRECIATION
      ///
      /// Key: a.wallet.contents.value.appreciation.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsValueAppreciationTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.value.appreciation.title", tableName: "Localizable", source: source, developmentValue: "APPRECIATION", comment: nil) }

      /// en translation: USD VALUE
      ///
      /// Key: a.wallet.contents.value.dollar.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsValueDollarTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.value.dollar.title", tableName: "Localizable", source: source, developmentValue: "USD VALUE", comment: nil) }

      /// en translation: 24 HOURS
      ///
      /// Key: a.wallet.contents.value.period.title
      ///
      /// Locales: en, zh-Hant
      var aWalletContentsValuePeriodTitle: RswiftResources.StringResource { .init(key: "a.wallet.contents.value.period.title", tableName: "Localizable", source: source, developmentValue: "24 HOURS", comment: nil) }

      /// en translation: Check your Email/SMS for the import link. Tap it and it will automatically import to the app!
      ///
      /// Key: a.wallet.import.wallet.bubble.description
      ///
      /// Locales: en, zh-Hant
      var aWalletImportWalletBubbleDescription: RswiftResources.StringResource { .init(key: "a.wallet.import.wallet.bubble.description", tableName: "Localizable", source: source, developmentValue: "Check your Email/SMS for the import link. Tap it and it will automatically import to the app!", comment: nil) }

      /// en translation: Have a ticket to import?
      ///
      /// Key: a.wallet.import.wallet.bubble.title
      ///
      /// Locales: en, zh-Hant
      var aWalletImportWalletBubbleTitle: RswiftResources.StringResource { .init(key: "a.wallet.import.wallet.bubble.title", tableName: "Localizable", source: source, developmentValue: "Have a ticket to import?", comment: nil) }

      /// en translation: Import
      ///
      /// Key: a.wallet.import.wallet.title
      ///
      /// Locales: en, zh-Hant
      var aWalletImportWalletTitle: RswiftResources.StringResource { .init(key: "a.wallet.import.wallet.title", tableName: "Localizable", source: source, developmentValue: "Import", comment: nil) }

      /// en translation: Next
      ///
      /// Key: a.wallet.next.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletNextButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.next.button.title", tableName: "Localizable", source: source, developmentValue: "Next", comment: nil) }

      /// en translation: You don't have any tokens
      ///
      /// Key: a.wallet.no.tokens
      ///
      /// Locales: en, zh-Hant
      var aWalletNoTokens: RswiftResources.StringResource { .init(key: "a.wallet.no.tokens", tableName: "Localizable", source: source, developmentValue: "You don't have any tokens", comment: nil) }

      /// en translation: Convert to Arbitrum
      ///
      /// Key: a.wallet.token.arbitrumBridge.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenArbitrumBridgeButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.arbitrumBridge.button.title", tableName: "Localizable", source: source, developmentValue: "Convert to Arbitrum", comment: nil) }

      /// en translation: Buy
      ///
      /// Key: a.wallet.token.buy.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBuyTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.buy.title", tableName: "Localizable", source: source, developmentValue: "Buy", comment: nil) }

      /// en translation: Buy xDai
      ///
      /// Key: a.wallet.token.buy.xDai.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBuyXDaiTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.buy.xDai.title", tableName: "Localizable", source: source, developmentValue: "Buy xDai", comment: nil) }

      /// en translation: Buy with Coinbase Pay
      ///
      /// Key: a.wallet.token.buyOnCoinbase.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBuyOnCoinbaseTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.buyOnCoinbase.title", tableName: "Localizable", source: source, developmentValue: "Buy with Coinbase Pay", comment: nil) }

      /// en translation: Buy with Ramp
      ///
      /// Key: a.wallet.token.buyOnRamp.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBuyOnRampTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.buyOnRamp.title", tableName: "Localizable", source: source, developmentValue: "Buy with Ramp", comment: nil) }

      /// en translation: DEBUG
      ///
      /// Key: a.wallet.token.debugContract
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenDebugContract: RswiftResources.StringResource { .init(key: "a.wallet.token.debugContract", tableName: "Localizable", source: source, developmentValue: "DEBUG", comment: nil) }

      /// en translation: Swap using Carthage
      ///
      /// Key: a.wallet.token.erc20ExchangeCarthage.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenErc20ExchangeCarthageButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.erc20ExchangeCarthage.button.title", tableName: "Localizable", source: source, developmentValue: "Swap using Carthage", comment: nil) }

      /// en translation: Swap using Honeyswap
      ///
      /// Key: a.wallet.token.erc20ExchangeHoneyswap.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenErc20ExchangeHoneyswapButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.erc20ExchangeHoneyswap.button.title", tableName: "Localizable", source: source, developmentValue: "Swap using Honeyswap", comment: nil) }

      /// en translation: Swap using 1inch
      ///
      /// Key: a.wallet.token.erc20ExchangeOn1inch.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenErc20ExchangeOn1inchButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.erc20ExchangeOn1inch.button.title", tableName: "Localizable", source: source, developmentValue: "Swap using 1inch", comment: nil) }

      /// en translation: Swap using QuickSwap
      ///
      /// Key: a.wallet.token.erc20ExchangeOnQuickSwap.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenErc20ExchangeOnQuickSwapButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.erc20ExchangeOnQuickSwap.button.title", tableName: "Localizable", source: source, developmentValue: "Swap using QuickSwap", comment: nil) }

      /// en translation: Swap using Uniswap
      ///
      /// Key: a.wallet.token.erc20ExchangeOnUniswap.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenErc20ExchangeOnUniswapButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.erc20ExchangeOnUniswap.button.title", tableName: "Localizable", source: source, developmentValue: "Swap using Uniswap", comment: nil) }

      /// en translation: Market Price: %@ %@
      ///
      /// Key: a.wallet.token.marketPrice
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenMarketPrice: RswiftResources.StringResource2<String, String> { .init(key: "a.wallet.token.marketPrice", tableName: "Localizable", source: source, developmentValue: "Market Price: %@ %@", comment: nil) }

      /// en translation: %@-%@
      ///
      /// Key: a.wallet.token.match.vs
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenMatchVs: RswiftResources.StringResource2<String, String> { .init(key: "a.wallet.token.match.vs", tableName: "Localizable", source: source, developmentValue: "%@-%@", comment: nil) }

      /// en translation: Redeem
      ///
      /// Key: a.wallet.token.redeem.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.redeem.button.title", tableName: "Localizable", source: source, developmentValue: "Redeem", comment: nil) }

      /// en translation: QUANTITY OF %@
      ///
      /// Key: a.wallet.token.redeem.quantity.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemQuantityTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.redeem.quantity.title", tableName: "Localizable", source: source, developmentValue: "QUANTITY OF %@", comment: nil) }

      /// en translation: Select Quantity of %@
      ///
      /// Key: a.wallet.token.redeem.selectQuantity.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemSelectQuantityTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.redeem.selectQuantity.title", tableName: "Localizable", source: source, developmentValue: "Select Quantity of %@", comment: nil) }

      /// en translation: Please select quantity of %@
      ///
      /// Key: a.wallet.token.redeem.selectTokenQuantity.atLeastOne.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemSelectTokenQuantityAtLeastOneTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.redeem.selectTokenQuantity.atLeastOne.title", tableName: "Localizable", source: source, developmentValue: "Please select quantity of %@", comment: nil) }

      /// en translation: Please select a %@ to redeem
      ///
      /// Key: a.wallet.token.redeem.selectTokens.atLeastOne.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemSelectTokensAtLeastOneTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.redeem.selectTokens.atLeastOne.title", tableName: "Localizable", source: source, developmentValue: "Please select a %@ to redeem", comment: nil) }

      /// en translation: Select %@ To Redeem:
      ///
      /// Key: a.wallet.token.redeem.selectTokens.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemSelectTokensTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.redeem.selectTokens.title", tableName: "Localizable", source: source, developmentValue: "Select %@ To Redeem:", comment: nil) }

      /// en translation: Show QR Code to Redemption Booth
      ///
      /// Key: a.wallet.token.redeem.showQRCode.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemShowQRCodeTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.redeem.showQRCode.title", tableName: "Localizable", source: source, developmentValue: "Show QR Code to Redemption Booth", comment: nil) }

      /// en translation: You have successfully redeemed your %@
      ///
      /// Key: a.wallet.token.redeem.successful.description
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemSuccessfulDescription: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.redeem.successful.description", tableName: "Localizable", source: source, developmentValue: "You have successfully redeemed your %@", comment: nil) }

      /// en translation: Congrats
      ///
      /// Key: a.wallet.token.redeem.successful.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenRedeemSuccessfulTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.redeem.successful.title", tableName: "Localizable", source: source, developmentValue: "Congrats", comment: nil) }

      /// en translation: Select
      ///
      /// Key: a.wallet.token.selectTokens
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSelectTokens: RswiftResources.StringResource { .init(key: "a.wallet.token.selectTokens", tableName: "Localizable", source: source, developmentValue: "Select", comment: nil) }

      /// en translation: Sell
      ///
      /// Key: a.wallet.token.sell.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.button.title", tableName: "Localizable", source: source, developmentValue: "Sell", comment: nil) }

      /// en translation: Share MagicLink
      ///
      /// Key: a.wallet.token.sell.confirm.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellConfirmButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.confirm.button.title", tableName: "Localizable", source: source, developmentValue: "Share MagicLink", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: a.wallet.token.sell.confirm.cancel.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellConfirmCancelButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.confirm.cancel.button.title", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: MagicLink expires on: %@
      ///
      /// Key: a.wallet.token.sell.confirm.expiryDateDescription
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellConfirmExpiryDateDescription: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.confirm.expiryDateDescription", tableName: "Localizable", source: source, developmentValue: "MagicLink expires on: %@", comment: nil) }

      /// en translation: %d %@
      ///
      /// Key: a.wallet.token.sell.confirm.multipleTokenSelected.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellConfirmMultipleTokenSelectedTitle: RswiftResources.StringResource2<Int, String> { .init(key: "a.wallet.token.sell.confirm.multipleTokenSelected.title", tableName: "Localizable", source: source, developmentValue: "%d %@", comment: nil) }

      /// en translation: 1 %@
      ///
      /// Key: a.wallet.token.sell.confirm.singleTokenSelected.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellConfirmSingleTokenSelectedTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.confirm.singleTokenSelected.title", tableName: "Localizable", source: source, developmentValue: "1 %@", comment: nil) }

      /// en translation: Generate Sale Link
      ///
      /// Key: a.wallet.token.sell.confirm.subtitle
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellConfirmSubtitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.confirm.subtitle", tableName: "Localizable", source: source, developmentValue: "Generate Sale Link", comment: nil) }

      /// en translation: Confirm Sale?
      ///
      /// Key: a.wallet.token.sell.confirm.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellConfirmTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.confirm.title", tableName: "Localizable", source: source, developmentValue: "Confirm Sale?", comment: nil) }

      /// en translation: EQUIVALENT IN USD
      ///
      /// Key: a.wallet.token.sell.dollarCostLabel.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellDollarCostLabelTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.dollarCostLabel.title", tableName: "Localizable", source: source, developmentValue: "EQUIVALENT IN USD", comment: nil) }

      /// en translation: Set MagicLink Expiry
      ///
      /// Key: a.wallet.token.sell.enterLinkExpiryDate.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellEnterLinkExpiryDateTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.enterLinkExpiryDate.title", tableName: "Localizable", source: source, developmentValue: "Set MagicLink Expiry", comment: nil) }

      /// en translation: LINK EXPIRY DATE
      ///
      /// Key: a.wallet.token.sell.linkExpiryDate.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellLinkExpiryDateTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.linkExpiryDate.title", tableName: "Localizable", source: source, developmentValue: "LINK EXPIRY DATE", comment: nil) }

      /// en translation: Please select a date in the future
      ///
      /// Key: a.wallet.token.sell.linkExpiryTime.atLeastNow.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellLinkExpiryTimeAtLeastNowTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.linkExpiryTime.atLeastNow.title", tableName: "Localizable", source: source, developmentValue: "Please select a date in the future", comment: nil) }

      /// en translation: LINK EXPIRY TIME
      ///
      /// Key: a.wallet.token.sell.linkExpiryTime.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellLinkExpiryTimeTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.linkExpiryTime.title", tableName: "Localizable", source: source, developmentValue: "LINK EXPIRY TIME", comment: nil) }

      /// en translation: A MagicLink will be created to allow buyers to purchase your %@.
      ///
      /// Key: a.wallet.token.sell.magicLinkDescription.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellMagicLinkDescriptionTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.magicLinkDescription.title", tableName: "Localizable", source: source, developmentValue: "A MagicLink will be created to allow buyers to purchase your %@.", comment: nil) }

      /// en translation: %d %@ Selected
      ///
      /// Key: a.wallet.token.sell.multipleTokenSelected.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellMultipleTokenSelectedTitle: RswiftResources.StringResource2<Int, String> { .init(key: "a.wallet.token.sell.multipleTokenSelected.title", tableName: "Localizable", source: source, developmentValue: "%d %@ Selected", comment: nil) }

      /// en translation: Before the link expires, anyone with the MagicLink can purchase your %@ with one click
      ///
      /// Key: a.wallet.token.sell.noteLabel.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellNoteLabelTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.noteLabel.title", tableName: "Localizable", source: source, developmentValue: "Before the link expires, anyone with the MagicLink can purchase your %@ with one click", comment: nil) }

      /// en translation: IMPORTANT
      ///
      /// Key: a.wallet.token.sell.noteTitleLabel.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellNoteTitleLabelTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.noteTitleLabel.title", tableName: "Localizable", source: source, developmentValue: "IMPORTANT", comment: nil) }

      /// en translation: %@ %@/%@
      ///
      /// Key: a.wallet.token.sell.perTokenEthPrice.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellPerTokenEthPriceTitle: RswiftResources.StringResource3<String, String, String> { .init(key: "a.wallet.token.sell.perTokenEthPrice.title", tableName: "Localizable", source: source, developmentValue: "%@ %@/%@", comment: nil) }

      /// en translation: Please enter price of %@
      ///
      /// Key: a.wallet.token.sell.price.provide.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellPriceProvideTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.price.provide.title", tableName: "Localizable", source: source, developmentValue: "Please enter price of %@", comment: nil) }

      /// en translation: PRICE PER %@
      ///
      /// Key: a.wallet.token.sell.pricePerToken.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellPricePerTokenTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.pricePerToken.title", tableName: "Localizable", source: source, developmentValue: "PRICE PER %@", comment: nil) }

      /// en translation: QUANTITY OF %@
      ///
      /// Key: a.wallet.token.sell.quantity.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellQuantityTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.quantity.title", tableName: "Localizable", source: source, developmentValue: "QUANTITY OF %@", comment: nil) }

      /// en translation: Set a Price
      ///
      /// Key: a.wallet.token.sell.selectQuantity.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellSelectQuantityTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.selectQuantity.title", tableName: "Localizable", source: source, developmentValue: "Set a Price", comment: nil) }

      /// en translation: Please select quantity of %@
      ///
      /// Key: a.wallet.token.sell.selectTokenQuantity.atLeastOne.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellSelectTokenQuantityAtLeastOneTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.selectTokenQuantity.atLeastOne.title", tableName: "Localizable", source: source, developmentValue: "Please select quantity of %@", comment: nil) }

      /// en translation: Please select a %@ to sell
      ///
      /// Key: a.wallet.token.sell.selectTokens.atLeastOne.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellSelectTokensAtLeastOneTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.selectTokens.atLeastOne.title", tableName: "Localizable", source: source, developmentValue: "Please select a %@ to sell", comment: nil) }

      /// en translation: Select %@ To Sell:
      ///
      /// Key: a.wallet.token.sell.selectTokens.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellSelectTokensTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.selectTokens.title", tableName: "Localizable", source: source, developmentValue: "Select %@ To Sell:", comment: nil) }

      /// en translation: 1 %@ Selected
      ///
      /// Key: a.wallet.token.sell.singleTokenSelected.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellSingleTokenSelectedTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.sell.singleTokenSelected.title", tableName: "Localizable", source: source, developmentValue: "1 %@ Selected", comment: nil) }

      /// en translation: Total Cost:
      ///
      /// Key: a.wallet.token.sell.totalCost.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellTotalCostTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.sell.totalCost.title", tableName: "Localizable", source: source, developmentValue: "Total Cost:", comment: nil) }

      /// en translation: Total: %@ %@
      ///
      /// Key: a.wallet.token.sell.totalEthPrice.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSellTotalEthPriceTitle: RswiftResources.StringResource2<String, String> { .init(key: "a.wallet.token.sell.totalEthPrice.title", tableName: "Localizable", source: source, developmentValue: "Total: %@ %@", comment: nil) }

      /// en translation: Swap
      ///
      /// Key: a.wallet.token.swap.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenSwapButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.swap.button.title", tableName: "Localizable", source: source, developmentValue: "Swap", comment: nil) }

      /// en translation: OK, great!
      ///
      /// Key: a.wallet.token.transaction.inProgress.confirm
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransactionInProgressConfirm: RswiftResources.StringResource { .init(key: "a.wallet.token.transaction.inProgress.confirm", tableName: "Localizable", source: source, developmentValue: "OK, great!", comment: nil) }

      /// en translation: The transaction is sent to the Ethereum blockchain. It might take few minutes to be confirmed by miners.
      ///
      /// Key: a.wallet.token.transaction.inProgress.subtitle
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransactionInProgressSubtitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transaction.inProgress.subtitle", tableName: "Localizable", source: source, developmentValue: "The transaction is sent to the Ethereum\nblockchain. It might take few minutes\nto be confirmed by miners.", comment: nil) }

      /// en translation: Transaction in Progress
      ///
      /// Key: a.wallet.token.transaction.inProgress.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransactionInProgressTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transaction.inProgress.title", tableName: "Localizable", source: source, developmentValue: "Transaction in Progress", comment: nil) }

      /// en translation: Transactions in progress
      ///
      /// Key: a.wallet.token.transaction.inProgress.title.ing
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransactionInProgressTitleIng: RswiftResources.StringResource { .init(key: "a.wallet.token.transaction.inProgress.title.ing", tableName: "Localizable", source: source, developmentValue: "Transactions in progress", comment: nil) }

      /// en translation: The transaction is sent to %@ and may take a few minutes to be confirmed by miners.
      ///
      /// Key: a.wallet.token.transaction.subtitle
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransactionSubtitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transaction.subtitle", tableName: "Localizable", source: source, developmentValue: "The transaction is sent to %@ and may take a few minutes to be confirmed by miners.", comment: nil) }

      /// en translation: PHONE NUMBER
      ///
      /// Key: a.wallet.token.transfer
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransfer: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer", tableName: "Localizable", source: source, developmentValue: "PHONE NUMBER", comment: nil) }

      /// en translation: Send
      ///
      /// Key: a.wallet.token.transfer.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.button.title", tableName: "Localizable", source: source, developmentValue: "Send", comment: nil) }

      /// en translation: Generate Free Transfer Link
      ///
      /// Key: a.wallet.token.transfer.confirm.subtitle
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferConfirmSubtitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.confirm.subtitle", tableName: "Localizable", source: source, developmentValue: "Generate Free Transfer Link", comment: nil) }

      /// en translation: Generate MagicLink
      ///
      /// Key: a.wallet.token.transfer.confirm.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferConfirmTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.confirm.title", tableName: "Localizable", source: source, developmentValue: "Generate MagicLink", comment: nil) }

      /// en translation: Your %@ was not transferred
      ///
      /// Key: a.wallet.token.transfer.failed.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferFailedTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.failed.title", tableName: "Localizable", source: source, developmentValue: "Your %@ was not transferred", comment: nil) }

      /// en translation: Transferring %@...
      ///
      /// Key: a.wallet.token.transfer.inProgress.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferInProgressTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.inProgress.title", tableName: "Localizable", source: source, developmentValue: "Transferring %@...", comment: nil) }

      /// en translation: Please select a date in the future
      ///
      /// Key: a.wallet.token.transfer.linkExpiryTime.atLeastNow.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferLinkExpiryTimeAtLeastNowTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.linkExpiryTime.atLeastNow.title", tableName: "Localizable", source: source, developmentValue: "Please select a date in the future", comment: nil) }

      /// en translation: The MagicLink will be valid until:
      ///
      /// Key: a.wallet.token.transfer.magicLinkDescription.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferMagicLinkDescriptionTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.magicLinkDescription.title", tableName: "Localizable", source: source, developmentValue: "The MagicLink will be valid until:", comment: nil) }

      /// en translation: MagicLink for Picking Up
      ///
      /// Key: a.wallet.token.transfer.mode.magicLink.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferModeMagicLinkButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.mode.magicLink.button.title", tableName: "Localizable", source: source, developmentValue: "MagicLink for Picking Up", comment: nil) }

      /// en translation: Transfer now
      ///
      /// Key: a.wallet.token.transfer.mode.now.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferModeNowButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.mode.now.button.title", tableName: "Localizable", source: source, developmentValue: "Transfer now", comment: nil) }

      /// en translation: Transfer to wallet address %@?
      ///
      /// Key: a.wallet.token.transfer.mode.walletAddress.confirmation
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferModeWalletAddressConfirmation: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.mode.walletAddress.confirmation", tableName: "Localizable", source: source, developmentValue: "Transfer to wallet address %@?", comment: nil) }

      /// en translation: Before the link expires, anyone with the MagicLink can claim your tickets with one click
      ///
      /// Key: a.wallet.token.transfer.noteLabel.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferNoteLabelTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.transfer.noteLabel.title", tableName: "Localizable", source: source, developmentValue: "Before the link expires, anyone with the MagicLink can claim your tickets with one click", comment: nil) }

      /// en translation: QUANTITY OF %@
      ///
      /// Key: a.wallet.token.transfer.quantity.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferQuantityTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.quantity.title", tableName: "Localizable", source: source, developmentValue: "QUANTITY OF %@", comment: nil) }

      /// en translation: Transfer %@
      ///
      /// Key: a.wallet.token.transfer.selectQuantity.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferSelectQuantityTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.selectQuantity.title", tableName: "Localizable", source: source, developmentValue: "Transfer %@", comment: nil) }

      /// en translation: Please select quantity of %@
      ///
      /// Key: a.wallet.token.transfer.selectTokenQuantity.atLeastOne.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferSelectTokenQuantityAtLeastOneTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.selectTokenQuantity.atLeastOne.title", tableName: "Localizable", source: source, developmentValue: "Please select quantity of %@", comment: nil) }

      /// en translation: Please select a %@ to transfer
      ///
      /// Key: a.wallet.token.transfer.selectTokens.atLeastOne.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferSelectTokensAtLeastOneTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.selectTokens.atLeastOne.title", tableName: "Localizable", source: source, developmentValue: "Please select a %@ to transfer", comment: nil) }

      /// en translation: Select %@ To Transfer:
      ///
      /// Key: a.wallet.token.transfer.selectTokens.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferSelectTokensTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.selectTokens.title", tableName: "Localizable", source: source, developmentValue: "Select %@ To Transfer:", comment: nil) }

      /// en translation: Your %@ has been transferred
      ///
      /// Key: a.wallet.token.transfer.success.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenTransferSuccessTitle: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.transfer.success.title", tableName: "Localizable", source: source, developmentValue: "Your %@ has been transferred", comment: nil) }

      /// en translation: UNVERIFIED
      ///
      /// Key: a.wallet.token.unverifiedContract
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenUnverifiedContract: RswiftResources.StringResource { .init(key: "a.wallet.token.unverifiedContract", tableName: "Localizable", source: source, developmentValue: "UNVERIFIED", comment: nil) }

      /// en translation: Value: %@
      ///
      /// Key: a.wallet.token.value
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenValue: RswiftResources.StringResource1<String> { .init(key: "a.wallet.token.value", tableName: "Localizable", source: source, developmentValue: "Value: %@", comment: nil) }

      /// en translation: VERIFIED
      ///
      /// Key: a.wallet.token.verifiedContract
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenVerifiedContract: RswiftResources.StringResource { .init(key: "a.wallet.token.verifiedContract", tableName: "Localizable", source: source, developmentValue: "VERIFIED", comment: nil) }

      /// en translation: Convert to DAI
      ///
      /// Key: a.wallet.token.xDaiBridge.button.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenXDaiBridgeButtonTitle: RswiftResources.StringResource { .init(key: "a.wallet.token.xDaiBridge.button.title", tableName: "Localizable", source: source, developmentValue: "Convert to DAI", comment: nil) }

      /// en translation: For Sale
      ///
      /// Key: a.wallet.tokenBundle.status.forSale.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBundleStatusForSaleTitle: RswiftResources.StringResource { .init(key: "a.wallet.tokenBundle.status.forSale.title", tableName: "Localizable", source: source, developmentValue: "For Sale", comment: nil) }

      /// en translation: Redeemed
      ///
      /// Key: a.wallet.tokenBundle.status.redeemed.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBundleStatusRedeemedTitle: RswiftResources.StringResource { .init(key: "a.wallet.tokenBundle.status.redeemed.title", tableName: "Localizable", source: source, developmentValue: "Redeemed", comment: nil) }

      /// en translation: Sold
      ///
      /// Key: a.wallet.tokenBundle.status.sold.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBundleStatusSoldTitle: RswiftResources.StringResource { .init(key: "a.wallet.tokenBundle.status.sold.title", tableName: "Localizable", source: source, developmentValue: "Sold", comment: nil) }

      /// en translation: Transferred
      ///
      /// Key: a.wallet.tokenBundle.status.transferred.title
      ///
      /// Locales: en, zh-Hant
      var aWalletTokenBundleStatusTransferredTitle: RswiftResources.StringResource { .init(key: "a.wallet.tokenBundle.status.transferred.title", tableName: "Localizable", source: source, developmentValue: "Transferred", comment: nil) }

      /// en translation: Welcome
      ///
      /// Key: a.welcome.navigation.title
      ///
      /// Locales: en, zh-Hant
      var aWelcomeNavigationTitle: RswiftResources.StringResource { .init(key: "a.welcome.navigation.title", tableName: "Localizable", source: source, developmentValue: "Welcome", comment: nil) }

      /// en translation: Hold all your Crypto assets in one place
      ///
      /// Key: a.welcome.onboarding.1
      ///
      /// Locales: en, zh-Hant
      var aWelcomeOnboarding1: RswiftResources.StringResource { .init(key: "a.welcome.onboarding.1", tableName: "Localizable", source: source, developmentValue: "Hold all your Crypto assets in one place", comment: nil) }

      /// en translation: Powered by blockchain technology, smart tickets, fraud free
      ///
      /// Key: a.welcome.onboarding.2
      ///
      /// Locales: en, zh-Hant
      var aWelcomeOnboarding2: RswiftResources.StringResource { .init(key: "a.welcome.onboarding.2", tableName: "Localizable", source: source, developmentValue: "Powered by blockchain technology, smart tickets, fraud free", comment: nil) }

      /// en translation: Buy, sell and transfer your favourite tokens
      ///
      /// Key: a.welcome.onboarding.3
      ///
      /// Locales: en, zh-Hant
      var aWelcomeOnboarding3: RswiftResources.StringResource { .init(key: "a.welcome.onboarding.3", tableName: "Localizable", source: source, developmentValue: "Buy, sell and transfer your favourite tokens", comment: nil) }

      /// en translation: GET STARTED
      ///
      /// Key: a.welcome.onboarding.createwallet.button.title
      ///
      /// Locales: en, zh-Hant
      var aWelcomeOnboardingCreatewalletButtonTitle: RswiftResources.StringResource { .init(key: "a.welcome.onboarding.createwallet.button.title", tableName: "Localizable", source: source, developmentValue: "GET STARTED", comment: nil) }

      /// en translation: About INTO
      ///
      /// Key: about
      ///
      /// Locales: en, zh-Hant
      var about: RswiftResources.StringResource { .init(key: "about", tableName: "Localizable", source: source, developmentValue: "About INTO", comment: nil) }

      /// en translation: This will inform them your wallet address is %@
      ///
      /// Key: accept.deepLink.field.note
      ///
      /// Locales: en, zh-Hant
      var acceptDeepLinkFieldNote: RswiftResources.StringResource1<String> { .init(key: "accept.deepLink.field.note", tableName: "Localizable", source: source, developmentValue: "This will inform them your wallet address is %@", comment: nil) }

      /// en translation: Note
      ///
      /// Key: accept.deepLink.field.note.title
      ///
      /// Locales: en, zh-Hant
      var acceptDeepLinkFieldNoteTitle: RswiftResources.StringResource { .init(key: "accept.deepLink.field.note.title", tableName: "Localizable", source: source, developmentValue: "Note", comment: nil) }

      /// en translation: URL
      ///
      /// Key: accept.deepLink.field.url.title
      ///
      /// Locales: en, zh-Hant
      var acceptDeepLinkFieldUrlTitle: RswiftResources.StringResource { .init(key: "accept.deepLink.field.url.title", tableName: "Localizable", source: source, developmentValue: "URL", comment: nil) }

      /// en translation: Connect to
      ///
      /// Key: accept.deepLink.navigationTitle
      ///
      /// Locales: en, zh-Hant
      var acceptDeepLinkNavigationTitle: RswiftResources.StringResource { .init(key: "accept.deepLink.navigationTitle", tableName: "Localizable", source: source, developmentValue: "Connect to", comment: nil) }

      /// en translation: Methods
      ///
      /// Key: accept.walletConnect.field.methods.title
      ///
      /// Locales: en, zh-Hant
      var acceptWalletConnectFieldMethodsTitle: RswiftResources.StringResource { .init(key: "accept.walletConnect.field.methods.title", tableName: "Localizable", source: source, developmentValue: "Methods", comment: nil) }

      /// en translation: You've accepted  %@’s friend request.
      ///
      /// Key: acceptPrompt
      ///
      /// Locales: en, zh-Hant
      var acceptPrompt: RswiftResources.StringResource1<String> { .init(key: "acceptPrompt", tableName: "Localizable", source: source, developmentValue: "You've accepted  %@’s friend request.", comment: nil) }

      /// en translation: Account and security
      ///
      /// Key: accountAndSecurity
      ///
      /// Locales: en, zh-Hant
      var accountAndSecurity: RswiftResources.StringResource { .init(key: "accountAndSecurity", tableName: "Localizable", source: source, developmentValue: "Account and security", comment: nil) }

      /// en translation: Account disabled
      ///
      /// Key: accountForbiddenPrompt
      ///
      /// Locales: en, zh-Hant
      var accountForbiddenPrompt: RswiftResources.StringResource { .init(key: "accountForbiddenPrompt", tableName: "Localizable", source: source, developmentValue: "Account disabled", comment: nil) }

      /// en translation: Lose this Wallet
      ///
      /// Key: accounts.confirm.delete.action
      ///
      /// Locales: en, zh-Hant
      var accountsConfirmDeleteAction: RswiftResources.StringResource { .init(key: "accounts.confirm.delete.action", tableName: "Localizable", source: source, developmentValue: "Lose this Wallet", comment: nil) }

      /// en translation: Make sure you have backup of your wallet.
      ///
      /// Key: accounts.confirm.delete.message
      ///
      /// Locales: en, zh-Hant
      var accountsConfirmDeleteMessage: RswiftResources.StringResource { .init(key: "accounts.confirm.delete.message", tableName: "Localizable", source: source, developmentValue: "Make sure you have backup of your wallet.", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: accounts.confirm.delete.okTitle
      ///
      /// Locales: en, zh-Hant
      var accountsConfirmDeleteOkTitle: RswiftResources.StringResource { .init(key: "accounts.confirm.delete.okTitle", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Are you sure you would like to delete this wallet?
      ///
      /// Key: accounts.confirm.delete.title
      ///
      /// Locales: en, zh-Hant
      var accountsConfirmDeleteTitle: RswiftResources.StringResource { .init(key: "accounts.confirm.delete.title", tableName: "Localizable", source: source, developmentValue: "Are you sure you would like to delete this wallet?", comment: nil) }

      /// en translation: Failed to delete account
      ///
      /// Key: accounts.delete.error.failedToDeleteAccount
      ///
      /// Locales: en, zh-Hant
      var accountsDeleteErrorFailedToDeleteAccount: RswiftResources.StringResource { .init(key: "accounts.delete.error.failedToDeleteAccount", tableName: "Localizable", source: source, developmentValue: "Failed to delete account", comment: nil) }

      /// en translation: Account not found
      ///
      /// Key: accounts.error.accountNotFound
      ///
      /// Locales: en, zh-Hant
      var accountsErrorAccountNotFound: RswiftResources.StringResource { .init(key: "accounts.error.accountNotFound", tableName: "Localizable", source: source, developmentValue: "Account not found", comment: nil) }

      /// en translation: You already added this address to wallets
      ///
      /// Key: accounts.error.duplicateAccount
      ///
      /// Locales: en, zh-Hant
      var accountsErrorDuplicateAccount: RswiftResources.StringResource { .init(key: "accounts.error.duplicateAccount", tableName: "Localizable", source: source, developmentValue: "You already added this address to wallets", comment: nil) }

      /// en translation: Failed to create wallet
      ///
      /// Key: accounts.error.failedToCreateWallet
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToCreateWallet: RswiftResources.StringResource { .init(key: "accounts.error.failedToCreateWallet", tableName: "Localizable", source: source, developmentValue: "Failed to create wallet", comment: nil) }

      /// en translation: Could not decrypt key with given passphrase
      ///
      /// Key: accounts.error.failedToDecryptKey
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToDecryptKey: RswiftResources.StringResource { .init(key: "accounts.error.failedToDecryptKey", tableName: "Localizable", source: source, developmentValue: "Could not decrypt key with given passphrase", comment: nil) }

      /// en translation: Failed to export private key
      ///
      /// Key: accounts.error.failedToExportPrivateKey
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToExportPrivateKey: RswiftResources.StringResource { .init(key: "accounts.error.failedToExportPrivateKey", tableName: "Localizable", source: source, developmentValue: "Failed to export private key", comment: nil) }

      /// en translation: Failed to export wallet seed. If you have migrated to a new phone or restored your device, you need to import your wallet again
      ///
      /// Key: accounts.error.failedToExportSeed
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToExportSeed: RswiftResources.StringResource { .init(key: "accounts.error.failedToExportSeed", tableName: "Localizable", source: source, developmentValue: "Failed to export wallet seed. If you have migrated to a new phone or restored your device, you need to import your wallet again", comment: nil) }

      /// en translation: Failed to import private key
      ///
      /// Key: accounts.error.failedToImportPrivateKey
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToImportPrivateKey: RswiftResources.StringResource { .init(key: "accounts.error.failedToImportPrivateKey", tableName: "Localizable", source: source, developmentValue: "Failed to import private key", comment: nil) }

      /// en translation: Failed to parse key JSON
      ///
      /// Key: accounts.error.failedToParseJSON
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToParseJSON: RswiftResources.StringResource { .init(key: "accounts.error.failedToParseJSON", tableName: "Localizable", source: source, developmentValue: "Failed to parse key JSON", comment: nil) }

      /// en translation: Failed to sign an empty message
      ///
      /// Key: accounts.error.failedToSignEmptyMessage
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToSignEmptyMessage: RswiftResources.StringResource { .init(key: "accounts.error.failedToSignEmptyMessage", tableName: "Localizable", source: source, developmentValue: "Failed to sign an empty message", comment: nil) }

      /// en translation: Failed to sign message
      ///
      /// Key: accounts.error.failedToSignMessage
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToSignMessage: RswiftResources.StringResource { .init(key: "accounts.error.failedToSignMessage", tableName: "Localizable", source: source, developmentValue: "Failed to sign message", comment: nil) }

      /// en translation: Failed to sign transaction
      ///
      /// Key: accounts.error.failedToSignTransaction
      ///
      /// Locales: en, zh-Hant
      var accountsErrorFailedToSignTransaction: RswiftResources.StringResource { .init(key: "accounts.error.failedToSignTransaction", tableName: "Localizable", source: source, developmentValue: "Failed to sign transaction", comment: nil) }

      /// en translation: The current account is already bound to the main wallet
      ///
      /// Key: accounttietomainwallet
      ///
      /// Locales: en, zh-Hant
      var accounttietomainwallet: RswiftResources.StringResource { .init(key: "accounttietomainwallet", tableName: "Localizable", source: source, developmentValue: "The current account is already bound to the main wallet", comment: nil) }

      /// en translation: Scan QR Code
      ///
      /// Key: action.scan.dapp
      ///
      /// Locales: en, zh-Hant
      var actionScanDapp: RswiftResources.StringResource { .init(key: "action.scan.dapp", tableName: "Localizable", source: source, developmentValue: "Scan QR Code", comment: nil) }

      /// en translation: active value
      ///
      /// Key: active_value
      ///
      /// Locales: en, zh-Hant
      var active_value: RswiftResources.StringResource { .init(key: "active_value", tableName: "Localizable", source: source, developmentValue: "active value", comment: nil) }

      /// en translation: Gave approval to move %@
      ///
      /// Key: activity.approvalObtained
      ///
      /// Locales: en, zh-Hant
      var activityApprovalObtained: RswiftResources.StringResource1<String> { .init(key: "activity.approvalObtained", tableName: "Localizable", source: source, developmentValue: "Gave approval to move %@", comment: nil) }

      /// en translation: All %@
      ///
      /// Key: activity.approve.amount.all
      ///
      /// Locales: en, zh-Hant
      var activityApproveAmountAll: RswiftResources.StringResource1<String> { .init(key: "activity.approve.amount.all", tableName: "Localizable", source: source, developmentValue: "All %@", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: activity.cancel
      ///
      /// Locales: en, zh-Hant
      var activityCancel: RswiftResources.StringResource { .init(key: "activity.cancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: Note that speeding up this transaction does not guarantee your original transaction will be cancelled. If your attempt is successful, you will be charged the miner fee as above.
      ///
      /// Key: activity.cancel.description
      ///
      /// Locales: en, zh-Hant
      var activityCancelDescription: RswiftResources.StringResource { .init(key: "activity.cancel.description", tableName: "Localizable", source: source, developmentValue: "Note that speeding up this transaction does not guarantee your original transaction will be cancelled. If your attempt is successful, you will be charged the miner fee as above.", comment: nil) }

      /// en translation: Activities will appear here
      ///
      /// Key: activity.empty
      ///
      /// Locales: en, zh-Hant
      var activityEmpty: RswiftResources.StringResource { .init(key: "activity.empty", tableName: "Localizable", source: source, developmentValue: "Activities will appear here", comment: nil) }

      /// en translation: from %@
      ///
      /// Key: activity.from
      ///
      /// Locales: en, zh-Hant
      var activityFrom: RswiftResources.StringResource1<String> { .init(key: "activity.from", tableName: "Localizable", source: source, developmentValue: "from %@", comment: nil) }

      /// en translation: Go to Token
      ///
      /// Key: activity.goToToken
      ///
      /// Locales: en, zh-Hant
      var activityGoToToken: RswiftResources.StringResource { .init(key: "activity.goToToken", tableName: "Localizable", source: source, developmentValue: "Go to Token", comment: nil) }

      /// en translation: Swap
      ///
      /// Key: activity.groupTransaction.swap
      ///
      /// Locales: en, zh-Hant
      var activityGroupTransactionSwap: RswiftResources.StringResource { .init(key: "activity.groupTransaction.swap", tableName: "Localizable", source: source, developmentValue: "Swap", comment: nil) }

      /// en translation: Contract Execution
      ///
      /// Key: activity.groupTransaction.unknown
      ///
      /// Locales: en, zh-Hant
      var activityGroupTransactionUnknown: RswiftResources.StringResource { .init(key: "activity.groupTransaction.unknown", tableName: "Localizable", source: source, developmentValue: "Contract Execution", comment: nil) }

      /// en translation: Approved to move %@
      ///
      /// Key: activity.ownerApproved
      ///
      /// Locales: en, zh-Hant
      var activityOwnerApproved: RswiftResources.StringResource1<String> { .init(key: "activity.ownerApproved", tableName: "Localizable", source: source, developmentValue: "Approved to move %@", comment: nil) }

      /// en translation: Failed to Approve to move %@
      ///
      /// Key: activity.ownerApproved.failed
      ///
      /// Locales: en, zh-Hant
      var activityOwnerApprovedFailed: RswiftResources.StringResource1<String> { .init(key: "activity.ownerApproved.failed", tableName: "Localizable", source: source, developmentValue: "Failed to Approve to move %@", comment: nil) }

      /// en translation: Approving to move %@
      ///
      /// Key: activity.ownerApproved.pending
      ///
      /// Locales: en, zh-Hant
      var activityOwnerApprovedPending: RswiftResources.StringResource1<String> { .init(key: "activity.ownerApproved.pending", tableName: "Localizable", source: source, developmentValue: "Approving to move %@", comment: nil) }

      /// en translation: Failed to Send %@
      ///
      /// Key: activity.send.failed
      ///
      /// Locales: en, zh-Hant
      var activitySendFailed: RswiftResources.StringResource1<String> { .init(key: "activity.send.failed", tableName: "Localizable", source: source, developmentValue: "Failed to Send %@", comment: nil) }

      /// en translation: Sending %@
      ///
      /// Key: activity.send.pending
      ///
      /// Locales: en, zh-Hant
      var activitySendPending: RswiftResources.StringResource1<String> { .init(key: "activity.send.pending", tableName: "Localizable", source: source, developmentValue: "Sending %@", comment: nil) }

      /// en translation: Speed up
      ///
      /// Key: activity.speedup
      ///
      /// Locales: en, zh-Hant
      var activitySpeedup: RswiftResources.StringResource { .init(key: "activity.speedup", tableName: "Localizable", source: source, developmentValue: "Speed up", comment: nil) }

      /// en translation: Note that speeding up this transaction does not guarantee your original transaction will be accelerated. If your attempt is successful, you will be charged the miner fee as above.
      ///
      /// Key: activity.speedup.description
      ///
      /// Locales: en, zh-Hant
      var activitySpeedupDescription: RswiftResources.StringResource { .init(key: "activity.speedup.description", tableName: "Localizable", source: source, developmentValue: "Note that speeding up this transaction does not guarantee your original transaction will be accelerated. If your attempt is successful, you will be charged the miner fee as above.", comment: nil) }

      /// en translation: Activity
      ///
      /// Key: activity.tabbar.item.title
      ///
      /// Locales: en, zh-Hant
      var activityTabbarItemTitle: RswiftResources.StringResource { .init(key: "activity.tabbar.item.title", tableName: "Localizable", source: source, developmentValue: "Activity", comment: nil) }

      /// en translation: to %@
      ///
      /// Key: activity.to
      ///
      /// Locales: en, zh-Hant
      var activityTo: RswiftResources.StringResource1<String> { .init(key: "activity.to", tableName: "Localizable", source: source, developmentValue: "to %@", comment: nil) }

      /// en translation: Add Friends
      ///
      /// Key: add.friend
      ///
      /// Locales: en, zh-Hant
      var addFriend: RswiftResources.StringResource { .init(key: "add.friend", tableName: "Localizable", source: source, developmentValue: "Add Friends", comment: nil) }

      /// en translation: %@ entries added. 
      ///
      /// Key: add.multiple.customRpc.added
      ///
      /// Locales: en, zh-Hant
      var addMultipleCustomRpcAdded: RswiftResources.StringResource1<String> { .init(key: "add.multiple.customRpc.added", tableName: "Localizable", source: source, developmentValue: "%@ entries added. ", comment: nil) }

      /// en translation: %@ duplicate entries not added. 
      ///
      /// Key: add.multiple.customRpc.duplicates
      ///
      /// Locales: en, zh-Hant
      var addMultipleCustomRpcDuplicates: RswiftResources.StringResource1<String> { .init(key: "add.multiple.customRpc.duplicates", tableName: "Localizable", source: source, developmentValue: "%@ duplicate entries not added. ", comment: nil) }

      /// en translation: Failed to add chains
      ///
      /// Key: add.multiple.customRpc.error
      ///
      /// Locales: en, zh-Hant
      var addMultipleCustomRpcError: RswiftResources.StringResource { .init(key: "add.multiple.customRpc.error", tableName: "Localizable", source: source, developmentValue: "Failed to add chains", comment: nil) }

      /// en translation: %@ entries failed to add. 
      ///
      /// Key: add.multiple.customRpc.failed
      ///
      /// Locales: en, zh-Hant
      var addMultipleCustomRpcFailed: RswiftResources.StringResource1<String> { .init(key: "add.multiple.customRpc.failed", tableName: "Localizable", source: source, developmentValue: "%@ entries failed to add. ", comment: nil) }

      /// en translation: These entries have been temporarily removed. 
      ///
      /// Key: add.multiple.customRpc.removed
      ///
      /// Locales: en, zh-Hant
      var addMultipleCustomRpcRemoved: RswiftResources.StringResource { .init(key: "add.multiple.customRpc.removed", tableName: "Localizable", source: source, developmentValue: "These entries have been temporarily removed. ", comment: nil) }

      /// en translation: Saving
      ///
      /// Key: add.multiple.customRpc.title
      ///
      /// Locales: en, zh-Hant
      var addMultipleCustomRpcTitle: RswiftResources.StringResource { .init(key: "add.multiple.customRpc.title", tableName: "Localizable", source: source, developmentValue: "Saving", comment: nil) }

      /// en translation: Add to blocklist
      ///
      /// Key: addBlacklist
      ///
      /// Locales: en, zh-Hant
      var addBlacklist: RswiftResources.StringResource { .init(key: "addBlacklist", tableName: "Localizable", source: source, developmentValue: "Add to blocklist", comment: nil) }

      /// en translation: Add
      ///
      /// Key: addButton.title
      ///
      /// Locales: en, zh-Hant
      var addButtonTitle: RswiftResources.StringResource { .init(key: "addButton.title", tableName: "Localizable", source: source, developmentValue: "Add", comment: nil) }

      /// en translation: Add to contacts
      ///
      /// Key: addContact
      ///
      /// Locales: en, zh-Hant
      var addContact: RswiftResources.StringResource { .init(key: "addContact", tableName: "Localizable", source: source, developmentValue: "Add to contacts", comment: nil) }

      /// en translation: This site is requesting you to add and switch to the %@ chain with chain ID: %ld. This will reload the page.
      ///
      /// Key: addCustomChain.addAndSwitch
      ///
      /// Locales: en, zh-Hant
      var addCustomChainAddAndSwitch: RswiftResources.StringResource2<String, Int> { .init(key: "addCustomChain.addAndSwitch", tableName: "Localizable", source: source, developmentValue: "This site is requesting you to add and switch to the %@ chain with chain ID: %ld. This will reload the page.", comment: nil) }

      /// en translation: This site is requesting you to enable and switch to the %@ chain with chain ID: %ld. This will reload the page.
      ///
      /// Key: addCustomChain.enableExisting
      ///
      /// Locales: en, zh-Hant
      var addCustomChainEnableExisting: RswiftResources.StringResource2<String, Int> { .init(key: "addCustomChain.enableExisting", tableName: "Localizable", source: source, developmentValue: "This site is requesting you to enable and switch to the %@ chain with chain ID: %ld. This will reload the page.", comment: nil) }

      /// en translation: Chain IDs returned by the RPC server do not match: %@ vs. %@
      ///
      /// Key: addCustomChain.error.chainIdNotMatch
      ///
      /// Locales: en, zh-Hant
      var addCustomChainErrorChainIdNotMatch: RswiftResources.StringResource2<String, String> { .init(key: "addCustomChain.error.chainIdNotMatch", tableName: "Localizable", source: source, developmentValue: "Chain IDs returned by the RPC server do not match: %@ vs. %@", comment: nil) }

      /// en translation: Invalid blockchain explorer URL
      ///
      /// Key: addCustomChain.error.invalidBlockchainExplorerUrl
      ///
      /// Locales: en, zh-Hant
      var addCustomChainErrorInvalidBlockchainExplorerUrl: RswiftResources.StringResource { .init(key: "addCustomChain.error.invalidBlockchainExplorerUrl", tableName: "Localizable", source: source, developmentValue: "Invalid blockchain explorer URL", comment: nil) }

      /// en translation: Invalid chain ID provided: %@
      ///
      /// Key: addCustomChain.error.invalidChainId
      ///
      /// Locales: en, zh-Hant
      var addCustomChainErrorInvalidChainId: RswiftResources.StringResource1<String> { .init(key: "addCustomChain.error.invalidChainId", tableName: "Localizable", source: source, developmentValue: "Invalid chain ID provided: %@", comment: nil) }

      /// en translation: No blockchain explorer URL provided
      ///
      /// Key: addCustomChain.error.noBlockchainExplorerUrl
      ///
      /// Locales: en, zh-Hant
      var addCustomChainErrorNoBlockchainExplorerUrl: RswiftResources.StringResource { .init(key: "addCustomChain.error.noBlockchainExplorerUrl", tableName: "Localizable", source: source, developmentValue: "No blockchain explorer URL provided", comment: nil) }

      /// en translation: No RPC node URL provided
      ///
      /// Key: addCustomChain.error.noRpcNodeUrl
      ///
      /// Locales: en, zh-Hant
      var addCustomChainErrorNoRpcNodeUrl: RswiftResources.StringResource { .init(key: "addCustomChain.error.noRpcNodeUrl", tableName: "Localizable", source: source, developmentValue: "No RPC node URL provided", comment: nil) }

      /// en translation: Unknown Error
      ///
      /// Key: addCustomChain.error.unknown
      ///
      /// Locales: en, zh-Hant
      var addCustomChainErrorUnknown: RswiftResources.StringResource { .init(key: "addCustomChain.error.unknown", tableName: "Localizable", source: source, developmentValue: "Unknown Error", comment: nil) }

      /// en translation: This site is requesting you to switch to the %@ chain with chain ID: %ld. This will reload the page.
      ///
      /// Key: addCustomChain.switchToExisting
      ///
      /// Locales: en, zh-Hant
      var addCustomChainSwitchToExisting: RswiftResources.StringResource2<String, Int> { .init(key: "addCustomChain.switchToExisting", tableName: "Localizable", source: source, developmentValue: "This site is requesting you to switch to the %@ chain with chain ID: %ld. This will reload the page.", comment: nil) }

      /// en translation: Unnamed
      ///
      /// Key: addCustomChain.unnamed
      ///
      /// Locales: en, zh-Hant
      var addCustomChainUnnamed: RswiftResources.StringResource { .init(key: "addCustomChain.unnamed", tableName: "Localizable", source: source, developmentValue: "Unnamed", comment: nil) }

      /// en translation: Blockchain explorer URL can't be resolved. Would you like to continue without it? Transaction history will not be fetched
      ///
      /// Key: addCustomChain.warning.noBlockchainExplorerUrl
      ///
      /// Locales: en, zh-Hant
      var addCustomChainWarningNoBlockchainExplorerUrl: RswiftResources.StringResource { .init(key: "addCustomChain.warning.noBlockchainExplorerUrl", tableName: "Localizable", source: source, developmentValue: "Blockchain explorer URL can't be resolved. Would you like to continue without it? Transaction history will not be fetched", comment: nil) }

      /// en translation: Add Custom Token
      ///
      /// Key: addCustomToken.title
      ///
      /// Locales: en, zh-Hant
      var addCustomTokenTitle: RswiftResources.StringResource { .init(key: "addCustomToken.title", tableName: "Localizable", source: source, developmentValue: "Add Custom Token", comment: nil) }

      /// en translation: Displayed Tokens
      ///
      /// Key: addHideTokens.section.displayedTokens
      ///
      /// Locales: en, zh-Hant
      var addHideTokensSectionDisplayedTokens: RswiftResources.StringResource { .init(key: "addHideTokens.section.displayedTokens", tableName: "Localizable", source: source, developmentValue: "Displayed Tokens", comment: nil) }

      /// en translation: Hidden Tokens
      ///
      /// Key: addHideTokens.section.hiddenTokens
      ///
      /// Locales: en, zh-Hant
      var addHideTokensSectionHiddenTokens: RswiftResources.StringResource { .init(key: "addHideTokens.section.hiddenTokens", tableName: "Localizable", source: source, developmentValue: "Hidden Tokens", comment: nil) }

      /// en translation: New Token Found
      ///
      /// Key: addHideTokens.section.newTokens
      ///
      /// Locales: en, zh-Hant
      var addHideTokensSectionNewTokens: RswiftResources.StringResource { .init(key: "addHideTokens.section.newTokens", tableName: "Localizable", source: source, developmentValue: "New Token Found", comment: nil) }

      /// en translation: Popular Tokens
      ///
      /// Key: addHideTokens.section.popularTokens
      ///
      /// Locales: en, zh-Hant
      var addHideTokensSectionPopularTokens: RswiftResources.StringResource { .init(key: "addHideTokens.section.popularTokens", tableName: "Localizable", source: source, developmentValue: "Popular Tokens", comment: nil) }

      /// en translation: Add / Hide Tokens
      ///
      /// Key: addHideTokens.title
      ///
      /// Locales: en, zh-Hant
      var addHideTokensTitle: RswiftResources.StringResource { .init(key: "addHideTokens.title", tableName: "Localizable", source: source, developmentValue: "Add / Hide Tokens", comment: nil) }

      /// en translation: Add members...
      ///
      /// Key: addMember
      ///
      /// Locales: en, zh-Hant
      var addMember: RswiftResources.StringResource { .init(key: "addMember", tableName: "Localizable", source: source, developmentValue: "Add members...", comment: nil) }

      /// en translation: Add to blocklist
      ///
      /// Key: addToBlackList
      ///
      /// Locales: en, zh-Hant
      var addToBlackList: RswiftResources.StringResource { .init(key: "addToBlackList", tableName: "Localizable", source: source, developmentValue: "Add to blocklist", comment: nil) }

      /// en translation: Go add friends to chat
      ///
      /// Key: add_friends_chat
      ///
      /// Locales: en, zh-Hant
      var add_friends_chat: RswiftResources.StringResource { .init(key: "add_friends_chat", tableName: "Localizable", source: source, developmentValue: "Go add friends to chat", comment: nil) }

      /// en translation: You can add or register a new account in the following ways
      ///
      /// Key: add_register_account_ways
      ///
      /// Locales: en, zh-Hant
      var add_register_account_ways: RswiftResources.StringResource { .init(key: "add_register_account_ways", tableName: "Localizable", source: source, developmentValue: "You can add or register a new account in the following ways", comment: nil) }

      /// en translation: Add/Register new account
      ///
      /// Key: add_register_new_account
      ///
      /// Locales: en, zh-Hant
      var add_register_new_account: RswiftResources.StringResource { .init(key: "add_register_new_account", tableName: "Localizable", source: source, developmentValue: "Add/Register new account", comment: nil) }

      /// en translation: Add custom APPKey
      ///
      /// Key: addcustomAppkey
      ///
      /// Locales: en, zh-Hant
      var addcustomAppkey: RswiftResources.StringResource { .init(key: "addcustomAppkey", tableName: "Localizable", source: source, developmentValue: "Add custom APPKey", comment: nil) }

      /// en translation: Added
      ///
      /// Key: added
      ///
      /// Locales: en, zh-Hant
      var added: RswiftResources.StringResource { .init(key: "added", tableName: "Localizable", source: source, developmentValue: "Added", comment: nil) }

      /// en translation: Address
      ///
      /// Key: address
      ///
      /// Locales: en, zh-Hant
      var address: RswiftResources.StringResource { .init(key: "address", tableName: "Localizable", source: source, developmentValue: "Address", comment: nil) }

      /// en translation: Enter or paste the receiving address
      ///
      /// Key: address.ens.labelMessage
      ///
      /// Locales: en, zh-Hant
      var addressEnsLabelMessage: RswiftResources.StringResource { .init(key: "address.ens.labelMessage", tableName: "Localizable", source: source, developmentValue: "Enter or paste the receiving address", comment: nil) }

      /// en translation: Block Explorer URL is invalid
      ///
      /// Key: addrpcServer.blockExplorerUrl.error
      ///
      /// Locales: en, zh-Hant
      var addrpcServerBlockExplorerUrlError: RswiftResources.StringResource { .init(key: "addrpcServer.blockExplorerUrl.error", tableName: "Localizable", source: source, developmentValue: "Block Explorer URL is invalid", comment: nil) }

      /// en translation: Block Explorer
      ///
      /// Key: addrpcServer.blockExplorerUrl.placeholder
      ///
      /// Locales: en, zh-Hant
      var addrpcServerBlockExplorerUrlPlaceholder: RswiftResources.StringResource { .init(key: "addrpcServer.blockExplorerUrl.placeholder", tableName: "Localizable", source: source, developmentValue: "Block Explorer", comment: nil) }

      /// en translation: Block Explorer URL
      ///
      /// Key: addrpcServer.blockExplorerUrl.title
      ///
      /// Locales: en, zh-Hant
      var addrpcServerBlockExplorerUrlTitle: RswiftResources.StringResource { .init(key: "addrpcServer.blockExplorerUrl.title", tableName: "Localizable", source: source, developmentValue: "Block Explorer URL", comment: nil) }

      /// en translation: Chain ID is invalid
      ///
      /// Key: addrpcServer.chainID.error
      ///
      /// Locales: en, zh-Hant
      var addrpcServerChainIDError: RswiftResources.StringResource { .init(key: "addrpcServer.chainID.error", tableName: "Localizable", source: source, developmentValue: "Chain ID is invalid", comment: nil) }

      /// en translation: Already supported. Enable this server instead
      ///
      /// Key: addrpcServer.chainIdAlreadySupported
      ///
      /// Locales: en, zh-Hant
      var addrpcServerChainIdAlreadySupported: RswiftResources.StringResource { .init(key: "addrpcServer.chainIdAlreadySupported", tableName: "Localizable", source: source, developmentValue: "Already supported. Enable this server instead", comment: nil) }

      /// en translation: This is Testnet Network
      ///
      /// Key: addrpcServer.isTestnet.title
      ///
      /// Locales: en, zh-Hant
      var addrpcServerIsTestnetTitle: RswiftResources.StringResource { .init(key: "addrpcServer.isTestnet.title", tableName: "Localizable", source: source, developmentValue: "This is Testnet Network", comment: nil) }

      /// en translation: Add Custom RPC Network
      ///
      /// Key: addrpcServer.navigation.title
      ///
      /// Locales: en, zh-Hant
      var addrpcServerNavigationTitle: RswiftResources.StringResource { .init(key: "addrpcServer.navigation.title", tableName: "Localizable", source: source, developmentValue: "Add Custom RPC Network", comment: nil) }

      /// en translation: Network Name is invalid
      ///
      /// Key: addrpcServer.networkName.error
      ///
      /// Locales: en, zh-Hant
      var addrpcServerNetworkNameError: RswiftResources.StringResource { .init(key: "addrpcServer.networkName.error", tableName: "Localizable", source: source, developmentValue: "Network Name is invalid", comment: nil) }

      /// en translation: Network Name
      ///
      /// Key: addrpcServer.networkName.title
      ///
      /// Locales: en, zh-Hant
      var addrpcServerNetworkNameTitle: RswiftResources.StringResource { .init(key: "addrpcServer.networkName.title", tableName: "Localizable", source: source, developmentValue: "Network Name", comment: nil) }

      /// en translation: RPC URL is invalid
      ///
      /// Key: addrpcServer.rpcUrl.error
      ///
      /// Locales: en, zh-Hant
      var addrpcServerRpcUrlError: RswiftResources.StringResource { .init(key: "addrpcServer.rpcUrl.error", tableName: "Localizable", source: source, developmentValue: "RPC URL is invalid", comment: nil) }

      /// en translation: New RPC Network
      ///
      /// Key: addrpcServer.rpcUrl.placeholder
      ///
      /// Locales: en, zh-Hant
      var addrpcServerRpcUrlPlaceholder: RswiftResources.StringResource { .init(key: "addrpcServer.rpcUrl.placeholder", tableName: "Localizable", source: source, developmentValue: "New RPC Network", comment: nil) }

      /// en translation: RPC URL
      ///
      /// Key: addrpcServer.rpcUrl.title
      ///
      /// Locales: en, zh-Hant
      var addrpcServerRpcUrlTitle: RswiftResources.StringResource { .init(key: "addrpcServer.rpcUrl.title", tableName: "Localizable", source: source, developmentValue: "RPC URL", comment: nil) }

      /// en translation: Add Network
      ///
      /// Key: addrpcServer.saveButton.title
      ///
      /// Locales: en, zh-Hant
      var addrpcServerSaveButtonTitle: RswiftResources.StringResource { .init(key: "addrpcServer.saveButton.title", tableName: "Localizable", source: source, developmentValue: "Add Network", comment: nil) }

      /// en translation: Symbol is invalid
      ///
      /// Key: addrpcServer.symbol.error
      ///
      /// Locales: en, zh-Hant
      var addrpcServerSymbolError: RswiftResources.StringResource { .init(key: "addrpcServer.symbol.error", tableName: "Localizable", source: source, developmentValue: "Symbol is invalid", comment: nil) }

      /// en translation: You have been added to the allowlist of group %@
      ///
      /// Key: addtowhitelistPrompt
      ///
      /// Locales: en, zh-Hant
      var addtowhitelistPrompt: RswiftResources.StringResource1<String> { .init(key: "addtowhitelistPrompt", tableName: "Localizable", source: source, developmentValue: "You have been added to the allowlist of group %@", comment: nil) }

      /// en translation: Recalled a message from
      ///
      /// Key: admingRecall
      ///
      /// Locales: en, zh-Hant
      var admingRecall: RswiftResources.StringResource { .init(key: "admingRecall", tableName: "Localizable", source: source, developmentValue: "Recalled a message from", comment: nil) }

      /// en translation: Features
      ///
      /// Key: advanced.settings.features.title
      ///
      /// Locales: en, zh-Hant
      var advancedSettingsFeaturesTitle: RswiftResources.StringResource { .init(key: "advanced.settings.features.title", tableName: "Localizable", source: source, developmentValue: "Features", comment: nil) }

      /// en translation: Feedback
      ///
      /// Key: advices
      ///
      /// Locales: en, zh-Hant
      var advices: RswiftResources.StringResource { .init(key: "advices", tableName: "Localizable", source: source, developmentValue: "Feedback", comment: nil) }

      /// en translation: Agree
      ///
      /// Key: agree
      ///
      /// Locales: en, zh-Hant
      var agree: RswiftResources.StringResource { .init(key: "agree", tableName: "Localizable", source: source, developmentValue: "Agree", comment: nil) }

      /// en translation: '%@'has accepted your friend request.
      ///
      /// Key: agreeContactPrompt
      ///
      /// Locales: en, zh-Hant
      var agreeContactPrompt: RswiftResources.StringResource1<String> { .init(key: "agreeContactPrompt", tableName: "Localizable", source: source, developmentValue: "'%@'has accepted your friend request.", comment: nil) }

      /// en translation: You have joined group %@
      ///
      /// Key: agreeJoinGroup
      ///
      /// Locales: en, zh-Hant
      var agreeJoinGroup: RswiftResources.StringResource1<String> { .init(key: "agreeJoinGroup", tableName: "Localizable", source: source, developmentValue: "You have joined group %@", comment: nil) }

      /// en translation: Your invitation to join the group [%@] has been accepted by %@.
      ///
      /// Key: agreeJoinPrompt
      ///
      /// Locales: en, zh-Hant
      var agreeJoinPrompt: RswiftResources.StringResource2<String, String> { .init(key: "agreeJoinPrompt", tableName: "Localizable", source: source, developmentValue: "Your invitation to join the group [%@] has been accepted by %@.", comment: nil) }

      /// en translation: By joining,you agree to our Terms of Service and Privacy Policy
      ///
      /// Key: agreePrompt
      ///
      /// Locales: en, zh-Hant
      var agreePrompt: RswiftResources.StringResource { .init(key: "agreePrompt", tableName: "Localizable", source: source, developmentValue: "By joining,you agree to our Terms of Service and Privacy Policy", comment: nil) }

      /// en translation: Accepted
      ///
      /// Key: agreed
      ///
      /// Locales: en, zh-Hant
      var agreed: RswiftResources.StringResource { .init(key: "agreed", tableName: "Localizable", source: source, developmentValue: "Accepted", comment: nil) }

      /// en translation: The group owner have approved your request %@
      ///
      /// Key: agreedJoinGroup
      ///
      /// Locales: en, zh-Hant
      var agreedJoinGroup: RswiftResources.StringResource1<String> { .init(key: "agreedJoinGroup", tableName: "Localizable", source: source, developmentValue: "The group owner have approved your request %@", comment: nil) }

      /// en translation: Intelligent batch group files
      ///
      /// Key: aiBatchGroupFiles
      ///
      /// Locales: en, zh-Hant
      var aiBatchGroupFiles: RswiftResources.StringResource { .init(key: "aiBatchGroupFiles", tableName: "Localizable", source: source, developmentValue: "Intelligent batch group files", comment: nil) }

      /// en translation: Smart broadcast assistant
      ///
      /// Key: aiBroadcast
      ///
      /// Locales: en, zh-Hant
      var aiBroadcast: RswiftResources.StringResource { .init(key: "aiBroadcast", tableName: "Localizable", source: source, developmentValue: "Smart broadcast assistant", comment: nil) }

      /// en translation: Broadcast group
      ///
      /// Key: aiBroadcastGroup.title
      ///
      /// Locales: en, zh-Hant
      var aiBroadcastGroupTitle: RswiftResources.StringResource { .init(key: "aiBroadcastGroup.title", tableName: "Localizable", source: source, developmentValue: "Broadcast group", comment: nil) }

      /// en translation: Intelligent AI group assistant
      ///
      /// Key: aiGroupAssistant
      ///
      /// Locales: en, zh-Hant
      var aiGroupAssistant: RswiftResources.StringResource { .init(key: "aiGroupAssistant", tableName: "Localizable", source: source, developmentValue: "Intelligent AI group assistant", comment: nil) }

      /// en translation: Are you sure to delete this file?
      ///
      /// Key: aiGroupFilesDelete
      ///
      /// Locales: en, zh-Hant
      var aiGroupFilesDelete: RswiftResources.StringResource { .init(key: "aiGroupFilesDelete", tableName: "Localizable", source: source, developmentValue: "Are you sure to delete this file?", comment: nil) }

      /// en translation: After deletion, the file will disappear from group sharing
      ///
      /// Key: aiGroupFilesDelete.text
      ///
      /// Locales: en, zh-Hant
      var aiGroupFilesDeleteText: RswiftResources.StringResource { .init(key: "aiGroupFilesDelete.text", tableName: "Localizable", source: source, developmentValue: "After deletion, the file will disappear from group sharing", comment: nil) }

      /// en translation: There's nothing here
      ///
      /// Key: aiGroupFilesEmptyInbox
      ///
      /// Locales: en, zh-Hant
      var aiGroupFilesEmptyInbox: RswiftResources.StringResource { .init(key: "aiGroupFilesEmptyInbox", tableName: "Localizable", source: source, developmentValue: "There's nothing here", comment: nil) }

      /// en translation: Click the button below to upload group files in bulk
      ///
      /// Key: aiGroupFilesEmptyInbox.text
      ///
      /// Locales: en, zh-Hant
      var aiGroupFilesEmptyInboxText: RswiftResources.StringResource { .init(key: "aiGroupFilesEmptyInbox.text", tableName: "Localizable", source: source, developmentValue: "Click the button below to upload group files in bulk", comment: nil) }

      /// en translation: Intelligent group sending function
      ///
      /// Key: aiGroupSend
      ///
      /// Locales: en, zh-Hant
      var aiGroupSend: RswiftResources.StringResource { .init(key: "aiGroupSend", tableName: "Localizable", source: source, developmentValue: "Intelligent group sending function", comment: nil) }

      /// en translation: Smart group welcome
      ///
      /// Key: aiGroupWelcomeMessage
      ///
      /// Locales: en, zh-Hant
      var aiGroupWelcomeMessage: RswiftResources.StringResource { .init(key: "aiGroupWelcomeMessage", tableName: "Localizable", source: source, developmentValue: "Smart group welcome", comment: nil) }

      /// en translation: Intelligent broadcast robot
      ///
      /// Key: aiRelayRobot
      ///
      /// Locales: en, zh-Hant
      var aiRelayRobot: RswiftResources.StringResource { .init(key: "aiRelayRobot", tableName: "Localizable", source: source, developmentValue: "Intelligent broadcast robot", comment: nil) }

      /// en translation: Smart reply bot
      ///
      /// Key: aiReplyRobot
      ///
      /// Locales: en, zh-Hant
      var aiReplyRobot: RswiftResources.StringResource { .init(key: "aiReplyRobot", tableName: "Localizable", source: source, developmentValue: "Smart reply bot", comment: nil) }

      /// en translation: AI assistant
      ///
      /// Key: ai_helper
      ///
      /// Locales: en, zh-Hant
      var ai_helper: RswiftResources.StringResource { .init(key: "ai_helper", tableName: "Localizable", source: source, developmentValue: "AI assistant", comment: nil) }

      /// en translation: Album
      ///
      /// Key: album
      ///
      /// Locales: en, zh-Hant
      var album: RswiftResources.StringResource { .init(key: "album", tableName: "Localizable", source: source, developmentValue: "Album", comment: nil) }

      /// en translation: No permission to access this album
      ///
      /// Key: albumnotaccessible
      ///
      /// Locales: en, zh-Hant
      var albumnotaccessible: RswiftResources.StringResource { .init(key: "albumnotaccessible", tableName: "Localizable", source: source, developmentValue: "No permission to access this album", comment: nil) }

      /// en translation: Tips
      ///
      /// Key: alert.note
      ///
      /// Locales: en, zh-Hant
      var alertNote: RswiftResources.StringResource { .init(key: "alert.note", tableName: "Localizable", source: source, developmentValue: "Tips", comment: nil) }

      /// en translation: Full day
      ///
      /// Key: allDay
      ///
      /// Locales: en, zh-Hant
      var allDay: RswiftResources.StringResource { .init(key: "allDay", tableName: "Localizable", source: source, developmentValue: "Full day", comment: nil) }

      /// en translation: Mute all members has been %@
      ///
      /// Key: allMute
      ///
      /// Locales: en, zh-Hant
      var allMute: RswiftResources.StringResource1<String> { .init(key: "allMute", tableName: "Localizable", source: source, developmentValue: "Mute all members has been %@", comment: nil) }

      /// en translation: The owner of group %@ has muted all members of group %@
      ///
      /// Key: allMutedPrompt
      ///
      /// Locales: en, zh-Hant
      var allMutedPrompt: RswiftResources.StringResource2<String, String> { .init(key: "allMutedPrompt", tableName: "Localizable", source: source, developmentValue: "The owner of group %@ has muted all members of group %@", comment: nil) }

      /// en translation: Allow group members to invite new members
      ///
      /// Key: allowMembersInvite
      ///
      /// Locales: en, zh-Hant
      var allowMembersInvite: RswiftResources.StringResource { .init(key: "allowMembersInvite", tableName: "Localizable", source: source, developmentValue: "Allow group members to invite new members", comment: nil) }

      /// en translation: Red envelope amount %@ %@
      ///
      /// Key: amountofredpacket
      ///
      /// Locales: en, zh-Hant
      var amountofredpacket: RswiftResources.StringResource2<String, String> { .init(key: "amountofredpacket", tableName: "Localizable", source: source, developmentValue: "Red envelope amount %@ %@", comment: nil) }

      /// en translation: HH:mm
      ///
      /// Key: amtime
      ///
      /// Locales: en, zh-Hant
      var amtime: RswiftResources.StringResource { .init(key: "amtime", tableName: "Localizable", source: source, developmentValue: "HH:mm", comment: nil) }

      /// en translation: Help us to improve INTO by sharing anonymous data with us. This does not include any financial information.
      ///
      /// Key: analytics.description
      ///
      /// Locales: en, zh-Hant
      var analyticsDescription: RswiftResources.StringResource { .init(key: "analytics.description", tableName: "Localizable", source: source, developmentValue: "Help us to improve INTO by sharing anonymous data with us. This does not include any financial information.", comment: nil) }

      /// en translation: Analytics
      ///
      /// Key: analytics.navigationTitle
      ///
      /// Locales: en, zh-Hant
      var analyticsNavigationTitle: RswiftResources.StringResource { .init(key: "analytics.navigationTitle", tableName: "Localizable", source: source, developmentValue: "Analytics", comment: nil) }

      /// en translation: Share Anonymous Data?
      ///
      /// Key: analytics.shareAnonymousData
      ///
      /// Locales: en, zh-Hant
      var analyticsShareAnonymousData: RswiftResources.StringResource { .init(key: "analytics.shareAnonymousData", tableName: "Localizable", source: source, developmentValue: "Share Anonymous Data?", comment: nil) }

      /// en translation: The announcement of group「%@」has been updated.
      ///
      /// Key: annoumentUpdate
      ///
      /// Locales: en, zh-Hant
      var annoumentUpdate: RswiftResources.StringResource1<String> { .init(key: "annoumentUpdate", tableName: "Localizable", source: source, developmentValue: "The announcement of group「%@」has been updated.", comment: nil) }

      /// en translation: Chat room announcement has been updated.
      ///
      /// Key: annupdated
      ///
      /// Locales: en, zh-Hant
      var annupdated: RswiftResources.StringResource { .init(key: "annupdated", tableName: "Localizable", source: source, developmentValue: "Chat room announcement has been updated.", comment: nil) }

      /// en translation: APNS push
      ///
      /// Key: apnspush
      ///
      /// Locales: en, zh-Hant
      var apnspush: RswiftResources.StringResource { .init(key: "apnspush", tableName: "Localizable", source: source, developmentValue: "APNS push", comment: nil) }

      /// en translation: Any 'jailbreak' app can access INTO's keychain data and steal your wallet! Wipe this wallet immediately and restore on a secure device.
      ///
      /// Key: app.device.jailbreak.description
      ///
      /// Locales: en, zh-Hant
      var appDeviceJailbreakDescription: RswiftResources.StringResource { .init(key: "app.device.jailbreak.description", tableName: "Localizable", source: source, developmentValue: "Any 'jailbreak' app can access INTO's keychain data and steal your wallet! Wipe this wallet immediately and restore on a secure device.", comment: nil) }

      /// en translation: DEVICE SECURITY COMPROMISED
      ///
      /// Key: app.device.jailbreak.title
      ///
      /// Locales: en, zh-Hant
      var appDeviceJailbreakTitle: RswiftResources.StringResource { .init(key: "app.device.jailbreak.title", tableName: "Localizable", source: source, developmentValue: "DEVICE SECURITY COMPROMISED", comment: nil) }

      /// en translation: An application to join the group chat has been sent and is waiting for review by the administrator.
      ///
      /// Key: application_join_sent_review
      ///
      /// Locales: en, zh-Hant
      var application_join_sent_review: RswiftResources.StringResource { .init(key: "application_join_sent_review", tableName: "Localizable", source: source, developmentValue: "An application to join the group chat has been sent and is waiting for review by the administrator.", comment: nil) }

      /// en translation: Submitted
      ///
      /// Key: applied
      ///
      /// Locales: en, zh-Hant
      var applied: RswiftResources.StringResource { .init(key: "applied", tableName: "Localizable", source: source, developmentValue: "Submitted", comment: nil) }

      /// en translation: You can’t add yourself as a friend
      ///
      /// Key: apply.ownprompt
      ///
      /// Locales: en, zh-Hant
      var applyOwnprompt: RswiftResources.StringResource { .init(key: "apply.ownprompt", tableName: "Localizable", source: source, developmentValue: "You can’t add yourself as a friend", comment: nil) }

      /// en translation: You have sent too many requests. Please try again later.
      ///
      /// Key: applyBusy
      ///
      /// Locales: en, zh-Hant
      var applyBusy: RswiftResources.StringResource { .init(key: "applyBusy", tableName: "Localizable", source: source, developmentValue: "You have sent too many requests. Please try again later.", comment: nil) }

      /// en translation: The current appkey and environment configuration have taken effect. If you need to change it, you need to restart the client
      ///
      /// Key: applyConfigPrompt
      ///
      /// Locales: en, zh-Hant
      var applyConfigPrompt: RswiftResources.StringResource { .init(key: "applyConfigPrompt", tableName: "Localizable", source: source, developmentValue: "The current appkey and environment configuration have taken effect. If you need to change it, you need to restart the client", comment: nil) }

      /// en translation: Add
      ///
      /// Key: applyContact
      ///
      /// Locales: en, zh-Hant
      var applyContact: RswiftResources.StringResource { .init(key: "applyContact", tableName: "Localizable", source: source, developmentValue: "Add", comment: nil) }

      /// en translation: Failed to add
      ///
      /// Key: applyfail
      ///
      /// Locales: en, zh-Hant
      var applyfail: RswiftResources.StringResource { .init(key: "applyfail", tableName: "Localizable", source: source, developmentValue: "Failed to add", comment: nil) }

      /// en translation: Failed to add: Your contact list is full.
      ///
      /// Key: applyfail.ContactReachLimit
      ///
      /// Locales: en, zh-Hant
      var applyfailContactReachLimit: RswiftResources.StringResource { .init(key: "applyfail.ContactReachLimit", tableName: "Localizable", source: source, developmentValue: "Failed to add: Your contact list is full.", comment: nil) }

      /// en translation: Failed to add: The contact list of the other party is full.
      ///
      /// Key: applyfail.ContactReachLimitPeer
      ///
      /// Locales: en, zh-Hant
      var applyfailContactReachLimitPeer: RswiftResources.StringResource { .init(key: "applyfail.ContactReachLimitPeer", tableName: "Localizable", source: source, developmentValue: "Failed to add: The contact list of the other party is full.", comment: nil) }

      /// en translation: Assessment failed
      ///
      /// Key: assessment_fail
      ///
      /// Locales: en, zh-Hant
      var assessment_fail: RswiftResources.StringResource { .init(key: "assessment_fail", tableName: "Localizable", source: source, developmentValue: "Assessment failed", comment: nil) }

      /// en translation: Assessment successful
      ///
      /// Key: assessment_successful
      ///
      /// Locales: en, zh-Hant
      var assessment_successful: RswiftResources.StringResource { .init(key: "assessment_successful", tableName: "Localizable", source: source, developmentValue: "Assessment successful", comment: nil) }

      /// en translation: Select Asset
      ///
      /// Key: assets.selectAsset.title
      ///
      /// Locales: en, zh-Hant
      var assetsSelectAssetTitle: RswiftResources.StringResource { .init(key: "assets.selectAsset.title", tableName: "Localizable", source: source, developmentValue: "Select Asset", comment: nil) }

      /// en translation: Voice call
      ///
      /// Key: audioCall
      ///
      /// Locales: en, zh-Hant
      var audioCall: RswiftResources.StringResource { .init(key: "audioCall", tableName: "Localizable", source: source, developmentValue: "Voice call", comment: nil) }

      /// en translation: Audio and video conferencing
      ///
      /// Key: audioconference
      ///
      /// Locales: en, zh-Hant
      var audioconference: RswiftResources.StringResource { .init(key: "audioconference", tableName: "Localizable", source: source, developmentValue: "Audio and video conferencing", comment: nil) }

      /// en translation: Please authorize access to the address book
      ///
      /// Key: authorizeaddressbook
      ///
      /// Locales: en, zh-Hant
      var authorizeaddressbook: RswiftResources.StringResource { .init(key: "authorizeaddressbook", tableName: "Localizable", source: source, developmentValue: "Please authorize access to the address book", comment: nil) }

      /// en translation: Auto download image thumbnails
      ///
      /// Key: autoDownloadImageThuinail
      ///
      /// Locales: en, zh-Hant
      var autoDownloadImageThuinail: RswiftResources.StringResource { .init(key: "autoDownloadImageThuinail", tableName: "Localizable", source: source, developmentValue: "Auto download image thumbnails", comment: nil) }

      /// en translation: Automatically accept group invitations
      ///
      /// Key: autoJoin
      ///
      /// Locales: en, zh-Hant
      var autoJoin: RswiftResources.StringResource { .init(key: "autoJoin", tableName: "Localizable", source: source, developmentValue: "Automatically accept group invitations", comment: nil) }

      /// en translation: Can be claimed
      ///
      /// Key: available
      ///
      /// Locales: en, zh-Hant
      var available: RswiftResources.StringResource { .init(key: "available", tableName: "Localizable", source: source, developmentValue: "Can be claimed", comment: nil) }

      /// en translation: Avatar
      ///
      /// Key: avatar
      ///
      /// Locales: en, zh-Hant
      var avatar: RswiftResources.StringResource { .init(key: "avatar", tableName: "Localizable", source: source, developmentValue: "Avatar", comment: nil) }

      /// en translation: Back up now
      ///
      /// Key: back.up.now
      ///
      /// Locales: en, zh-Hant
      var backUpNow: RswiftResources.StringResource { .init(key: "back.up.now", tableName: "Localizable", source: source, developmentValue: "Back up now", comment: nil) }

      /// en translation: Please back up the seed phrase below
      ///
      /// Key: back_up_seed_phrase
      ///
      /// Locales: en, zh-Hant
      var back_up_seed_phrase: RswiftResources.StringResource { .init(key: "back_up_seed_phrase", tableName: "Localizable", source: source, developmentValue: "Please back up the seed phrase below", comment: nil) }

      /// en translation: Backing up your wallet is the safest guarantee. You only need to write down 12 seed phrases in sequence and save them in a secret place offline.
      ///
      /// Key: backing_up_place_offline.
      ///
      /// Locales: en, zh-Hant
      var backing_up_place_offline: RswiftResources.StringResource { .init(key: "backing_up_place_offline.", tableName: "Localizable", source: source, developmentValue: "Backing up your wallet is the safest guarantee. You only need to write down 12 seed phrases in sequence and save them in a secret place offline.", comment: nil) }

      /// en translation: The cloud decryption is successful, and the mnemonic is being imported
      ///
      /// Key: backup.importmnemonic
      ///
      /// Locales: en, zh-Hant
      var backupImportmnemonic: RswiftResources.StringResource { .init(key: "backup.importmnemonic", tableName: "Localizable", source: source, developmentValue: "The cloud decryption is successful, and the mnemonic is being imported", comment: nil) }

      /// en translation: Cloud Decryption succeeded, and the private key is being imported
      ///
      /// Key: backup.importprivatekey
      ///
      /// Locales: en, zh-Hant
      var backupImportprivatekey: RswiftResources.StringResource { .init(key: "backup.importprivatekey", tableName: "Localizable", source: source, developmentValue: "Cloud Decryption succeeded, and the private key is being imported", comment: nil) }

      /// en translation: Enter cloud backup password
      ///
      /// Key: backup.inputpassword
      ///
      /// Locales: en, zh-Hant
      var backupInputpassword: RswiftResources.StringResource { .init(key: "backup.inputpassword", tableName: "Localizable", source: source, developmentValue: "Enter cloud backup password", comment: nil) }

      /// en translation: Decryption failed, please confirm whether the password is correct
      ///
      /// Key: backup.iscorrectpassword
      ///
      /// Locales: en, zh-Hant
      var backupIscorrectpassword: RswiftResources.StringResource { .init(key: "backup.iscorrectpassword", tableName: "Localizable", source: source, developmentValue: "Decryption failed, please confirm whether the password is correct", comment: nil) }

      /// en translation: Normal backup
      ///
      /// Key: backup.normalbtntitle
      ///
      /// Locales: en, zh-Hant
      var backupNormalbtntitle: RswiftResources.StringResource { .init(key: "backup.normalbtntitle", tableName: "Localizable", source: source, developmentValue: "Normal backup", comment: nil) }

      /// en translation: Cloud backup password
      ///
      /// Key: backup.password
      ///
      /// Locales: en, zh-Hant
      var backupPassword: RswiftResources.StringResource { .init(key: "backup.password", tableName: "Localizable", source: source, developmentValue: "Cloud backup password", comment: nil) }

      /// en translation: The private key is not encrypted. Please export it carefully and make a secure backup! When making a private key backup, please ensure that there are no other people around!
      ///
      /// Key: backup.privatekey.tips
      ///
      /// Locales: en, zh-Hant
      var backupPrivatekeyTips: RswiftResources.StringResource { .init(key: "backup.privatekey.tips", tableName: "Localizable", source: source, developmentValue: "The private key is not encrypted. Please export it carefully and make a secure backup! When making a private key backup, please ensure that there are no other people around!", comment: nil) }

      /// en translation: You have not backed up your wallet yet. You have %@ net. Act now. 
      ///
      /// Key: backup.prompt.afterHittingThreshold.description
      ///
      /// Locales: en, zh-Hant
      var backupPromptAfterHittingThresholdDescription: RswiftResources.StringResource1<String> { .init(key: "backup.prompt.afterHittingThreshold.description", tableName: "Localizable", source: source, developmentValue: "You have not backed up your wallet yet. You have %@ net. Act now. ", comment: nil) }

      /// en translation: Your Wallet is at risk!
      ///
      /// Key: backup.prompt.afterHittingThreshold.title
      ///
      /// Locales: en, zh-Hant
      var backupPromptAfterHittingThresholdTitle: RswiftResources.StringResource { .init(key: "backup.prompt.afterHittingThreshold.title", tableName: "Localizable", source: source, developmentValue: "Your Wallet is at risk!", comment: nil) }

      /// en translation: We highly recommend to back up your wallet
      ///
      /// Key: backup.prompt.afterInterval.description
      ///
      /// Locales: en, zh-Hant
      var backupPromptAfterIntervalDescription: RswiftResources.StringResource { .init(key: "backup.prompt.afterInterval.description", tableName: "Localizable", source: source, developmentValue: "We highly recommend to back up your wallet", comment: nil) }

      /// en translation: Time to back up your Wallet
      ///
      /// Key: backup.prompt.afterInterval.title
      ///
      /// Locales: en, zh-Hant
      var backupPromptAfterIntervalTitle: RswiftResources.StringResource { .init(key: "backup.prompt.afterInterval.title", tableName: "Localizable", source: source, developmentValue: "Time to back up your Wallet", comment: nil) }

      /// en translation: Just received %@ ETH?
      ///
      /// Key: backup.prompt.afterReceivingEther.title
      ///
      /// Locales: en, zh-Hant
      var backupPromptAfterReceivingEtherTitle: RswiftResources.StringResource1<String> { .init(key: "backup.prompt.afterReceivingEther.title", tableName: "Localizable", source: source, developmentValue: "Just received %@ ETH?", comment: nil) }

      /// en translation: Remind me to back up later?
      ///
      /// Key: backup.prompt.backup.remindLater
      ///
      /// Locales: en, zh-Hant
      var backupPromptBackupRemindLater: RswiftResources.StringResource { .init(key: "backup.prompt.backup.remindLater", tableName: "Localizable", source: source, developmentValue: "Remind me to back up later?", comment: nil) }

      /// en translation: Back up Wallet
      ///
      /// Key: backup.prompt.backupButton.title
      ///
      /// Locales: en, zh-Hant
      var backupPromptBackupButtonTitle: RswiftResources.StringResource { .init(key: "backup.prompt.backupButton.title", tableName: "Localizable", source: source, developmentValue: "Back up Wallet", comment: nil) }

      /// en translation: You have not backed up your wallet yet. You have %@ USD net. Act now.
      ///
      /// Key: backup.prompt.description.withAmount
      ///
      /// Locales: en, zh-Hant
      var backupPromptDescriptionWithAmount: RswiftResources.StringResource1<String> { .init(key: "backup.prompt.description.withAmount", tableName: "Localizable", source: source, developmentValue: "You have not backed up your wallet yet. You have %@ USD net. Act now.", comment: nil) }

      /// en translation: Remember to back up your wallet by a secure seed phrase.
      ///
      /// Key: backup.prompt.description.withoutAmount
      ///
      /// Locales: en, zh-Hant
      var backupPromptDescriptionWithoutAmount: RswiftResources.StringResource { .init(key: "backup.prompt.description.withoutAmount", tableName: "Localizable", source: source, developmentValue: "Remember to back up your wallet by a secure seed phrase.", comment: nil) }

      /// en translation: Your Wallet is not backed up!
      ///
      /// Key: backup.prompt.title
      ///
      /// Locales: en, zh-Hant
      var backupPromptTitle: RswiftResources.StringResource { .init(key: "backup.prompt.title", tableName: "Localizable", source: source, developmentValue: "Your Wallet is not backed up!", comment: nil) }

      /// en translation: You must enter the same passsword in Password and Confirm Password
      ///
      /// Key: backupPassword.confirmation.mustMatch
      ///
      /// Locales: en, zh-Hant
      var backupPasswordConfirmationMustMatch: RswiftResources.StringResource { .init(key: "backupPassword.confirmation.mustMatch", tableName: "Localizable", source: source, developmentValue: "You must enter the same passsword in Password and Confirm Password", comment: nil) }

      /// en translation: Please complete cloud backup and SBT certification as soon as possible to protect the security of your account funds.
      ///
      /// Key: backup_certification_security_funds
      ///
      /// Locales: en, zh-Hant
      var backup_certification_security_funds: RswiftResources.StringResource { .init(key: "backup_certification_security_funds", tableName: "Localizable", source: source, developmentValue: "Please complete cloud backup and SBT certification as soon as possible to protect the security of your account funds.", comment: nil) }

      /// en translation: Cloud backup successful
      ///
      /// Key: backup_cloud_success
      ///
      /// Locales: en, zh-Hant
      var backup_cloud_success: RswiftResources.StringResource { .init(key: "backup_cloud_success", tableName: "Localizable", source: source, developmentValue: "Cloud backup successful", comment: nil) }

      /// en translation: In order to protect the safety of your funds, be sure to back up your wallet, if you find that your device is lost, the app is uninstalled, etc., this is the only way to find your wallet.
      ///
      /// Key: backup_find_wallet
      ///
      /// Locales: en, zh-Hant
      var backup_find_wallet: RswiftResources.StringResource { .init(key: "backup_find_wallet", tableName: "Localizable", source: source, developmentValue: "In order to protect the safety of your funds, be sure to back up your wallet, if you find that your device is lost, the app is uninstalled, etc., this is the only way to find your wallet.", comment: nil) }

      /// en translation: Cloud backup list
      ///
      /// Key: backuplist
      ///
      /// Locales: en, zh-Hant
      var backuplist: RswiftResources.StringResource { .init(key: "backuplist", tableName: "Localizable", source: source, developmentValue: "Cloud backup list", comment: nil) }

      /// en translation: Done
      ///
      /// Key: backuplist.complete
      ///
      /// Locales: en, zh-Hant
      var backuplistComplete: RswiftResources.StringResource { .init(key: "backuplist.complete", tableName: "Localizable", source: source, developmentValue: "Done", comment: nil) }

      /// en translation: No need to unlock, enter directly
      ///
      /// Key: backuplist.enter
      ///
      /// Locales: en, zh-Hant
      var backuplistEnter: RswiftResources.StringResource { .init(key: "backuplist.enter", tableName: "Localizable", source: source, developmentValue: "No need to unlock, enter directly", comment: nil) }

      /// en translation: Backup mnemonics
      ///
      /// Key: backupmnemonic
      ///
      /// Locales: en, zh-Hant
      var backupmnemonic: RswiftResources.StringResource { .init(key: "backupmnemonic", tableName: "Localizable", source: source, developmentValue: "Backup mnemonics", comment: nil) }

      /// en translation: hundred
      ///
      /// Key: bai
      ///
      /// Locales: en, zh-Hant
      var bai: RswiftResources.StringResource { .init(key: "bai", tableName: "Localizable", source: source, developmentValue: "hundred", comment: nil) }

      /// en translation: Hundred
      ///
      /// Key: bai_traditional
      ///
      /// Locales: en, zh-Hant
      var bai_traditional: RswiftResources.StringResource { .init(key: "bai_traditional", tableName: "Localizable", source: source, developmentValue: "Hundred", comment: nil) }

      /// en translation: Insufficient balance to pay gas fees
      ///
      /// Key: balance.unable.pay.gas
      ///
      /// Locales: en, zh-Hant
      var balanceUnablePayGas: RswiftResources.StringResource { .init(key: "balance.unable.pay.gas", tableName: "Localizable", source: source, developmentValue: "Insufficient balance to pay gas fees", comment: nil) }

      /// en translation: Node balances can be claimed immediately to participate in social node sessions, or later on in beginner tasks.
      ///
      /// Key: balances_claimed_social_node
      ///
      /// Locales: en, zh-Hant
      var balances_claimed_social_node: RswiftResources.StringResource { .init(key: "balances_claimed_social_node", tableName: "Localizable", source: source, developmentValue: "Node balances can be claimed immediately to participate in social node sessions, or later on in beginner tasks.", comment: nil) }

      /// en translation: %@ elevated to administrato
      ///
      /// Key: beComeAdmin
      ///
      /// Locales: en, zh-Hant
      var beComeAdmin: RswiftResources.StringResource1<String> { .init(key: "beComeAdmin", tableName: "Localizable", source: source, developmentValue: "%@ elevated to administrato", comment: nil) }

      /// en translation: %@ is now an ordinary member.
      ///
      /// Key: beMember
      ///
      /// Locales: en, zh-Hant
      var beMember: RswiftResources.StringResource1<String> { .init(key: "beMember", tableName: "Localizable", source: source, developmentValue: "%@ is now an ordinary member.", comment: nil) }

      /// en translation: Failed to downgrade to ordinary member
      ///
      /// Key: beMemberFail
      ///
      /// Locales: en, zh-Hant
      var beMemberFail: RswiftResources.StringResource { .init(key: "beMemberFail", tableName: "Localizable", source: source, developmentValue: "Failed to downgrade to ordinary member", comment: nil) }

      /// en translation: Downgraded to ordinary member
      ///
      /// Key: beMemberSuccess
      ///
      /// Locales: en, zh-Hant
      var beMemberSuccess: RswiftResources.StringResource { .init(key: "beMemberSuccess", tableName: "Localizable", source: source, developmentValue: "Downgraded to ordinary member", comment: nil) }

      /// en translation: %@ is now an administrator
      ///
      /// Key: becomeAdmin
      ///
      /// Locales: en, zh-Hant
      var becomeAdmin: RswiftResources.StringResource1<String> { .init(key: "becomeAdmin", tableName: "Localizable", source: source, developmentValue: "%@ is now an administrator", comment: nil) }

      /// en translation: %@ is now only an ordinary member.
      ///
      /// Key: becomeMember
      ///
      /// Locales: en, zh-Hant
      var becomeMember: RswiftResources.StringResource1<String> { .init(key: "becomeMember", tableName: "Localizable", source: source, developmentValue: "%@ is now only an ordinary member.", comment: nil) }

      /// en translation: Start
      ///
      /// Key: begin
      ///
      /// Locales: en, zh-Hant
      var begin: RswiftResources.StringResource { .init(key: "begin", tableName: "Localizable", source: source, developmentValue: "Start", comment: nil) }

      /// en translation: Start editing
      ///
      /// Key: beginEdit
      ///
      /// Locales: en, zh-Hant
      var beginEdit: RswiftResources.StringResource { .init(key: "beginEdit", tableName: "Localizable", source: source, developmentValue: "Start editing", comment: nil) }

      /// en translation: Unlock beginner tasks and earn additional TOX rewards
      ///
      /// Key: beginner_tasks_rewards
      ///
      /// Locales: en, zh-Hant
      var beginner_tasks_rewards: RswiftResources.StringResource { .init(key: "beginner_tasks_rewards", tableName: "Localizable", source: source, developmentValue: "Unlock beginner tasks and earn additional TOX rewards", comment: nil) }

      /// en translation: Redraw in progress
      ///
      /// Key: beingrefreshed
      ///
      /// Locales: en, zh-Hant
      var beingrefreshed: RswiftResources.StringResource { .init(key: "beingrefreshed", tableName: "Localizable", source: source, developmentValue: "Redraw in progress", comment: nil) }

      /// en translation: In order to better participate in the platform ecology, using the platform functions such as receiving group red packets, sending on-chain messages, and building project groups, it is recommended that you first complete the operation of binding the main wallet
      ///
      /// Key: bind.description
      ///
      /// Locales: en, zh-Hant
      var bindDescription: RswiftResources.StringResource { .init(key: "bind.description", tableName: "Localizable", source: source, developmentValue: "In order to better participate in the platform ecology, using the platform functions such as receiving group red packets, sending on-chain messages, and building project groups, it is recommended that you first complete the operation of binding the main wallet", comment: nil) }

      /// en translation: Bind Inviter
      ///
      /// Key: bind.inviter
      ///
      /// Locales: en, zh-Hant
      var bindInviter: RswiftResources.StringResource { .init(key: "bind.inviter", tableName: "Localizable", source: source, developmentValue: "Bind Inviter", comment: nil) }

      /// en translation: Please carefully check your inviter. Once the binding is confirmed, the binding relationship will take effect immediately and cannot be modified.
      ///
      /// Key: bind.inviter.confirm
      ///
      /// Locales: en, zh-Hant
      var bindInviterConfirm: RswiftResources.StringResource { .init(key: "bind.inviter.confirm", tableName: "Localizable", source: source, developmentValue: "Please carefully check your inviter. Once the binding is confirmed, the binding relationship will take effect immediately and cannot be modified.", comment: nil) }

      /// en translation: Establish a binding relationship with your inviter, and you can bind it using either the wallet address or invitation code
      ///
      /// Key: bind.inviter.rule
      ///
      /// Locales: en, zh-Hant
      var bindInviterRule: RswiftResources.StringResource { .init(key: "bind.inviter.rule", tableName: "Localizable", source: source, developmentValue: "Establish a binding relationship with your inviter, and you can bind it using either the wallet address or invitation code", comment: nil) }

      /// en translation: The number of bound inviters has reached the maximum limit
      ///
      /// Key: bind.limit
      ///
      /// Locales: en, zh-Hant
      var bindLimit: RswiftResources.StringResource { .init(key: "bind.limit", tableName: "Localizable", source: source, developmentValue: "The number of bound inviters has reached the maximum limit", comment: nil) }

      /// en translation: Normal Bind
      ///
      /// Key: bind.normalbind
      ///
      /// Locales: en, zh-Hant
      var bindNormalbind: RswiftResources.StringResource { .init(key: "bind.normalbind", tableName: "Localizable", source: source, developmentValue: "Normal Bind", comment: nil) }

      /// en translation: Bind Now
      ///
      /// Key: bind.now
      ///
      /// Locales: en, zh-Hant
      var bindNow: RswiftResources.StringResource { .init(key: "bind.now", tableName: "Localizable", source: source, developmentValue: "Bind Now", comment: nil) }

      /// en translation: Set MainWallet
      ///
      /// Key: bind.setmainwallet
      ///
      /// Locales: en, zh-Hant
      var bindSetmainwallet: RswiftResources.StringResource { .init(key: "bind.setmainwallet", tableName: "Localizable", source: source, developmentValue: "Set MainWallet", comment: nil) }

      /// en translation: Unbind
      ///
      /// Key: bind.unbindwallet
      ///
      /// Locales: en, zh-Hant
      var bindUnbindwallet: RswiftResources.StringResource { .init(key: "bind.unbindwallet", tableName: "Localizable", source: source, developmentValue: "Unbind", comment: nil) }

      /// en translation: Bind Wallet
      ///
      /// Key: bind.wallet
      ///
      /// Locales: en, zh-Hant
      var bindWallet: RswiftResources.StringResource { .init(key: "bind.wallet", tableName: "Localizable", source: source, developmentValue: "Bind Wallet", comment: nil) }

      /// en translation: You have established a binding relationship with your inviter
      ///
      /// Key: binded.inviter
      ///
      /// Locales: en, zh-Hant
      var bindedInviter: RswiftResources.StringResource { .init(key: "binded.inviter", tableName: "Localizable", source: source, developmentValue: "You have established a binding relationship with your inviter", comment: nil) }

      /// en translation: Bind
      ///
      /// Key: bindmainwallet
      ///
      /// Locales: en, zh-Hant
      var bindmainwallet: RswiftResources.StringResource { .init(key: "bindmainwallet", tableName: "Localizable", source: source, developmentValue: "Bind", comment: nil) }

      /// en translation: Binding successful
      ///
      /// Key: bindsuccess
      ///
      /// Locales: en, zh-Hant
      var bindsuccess: RswiftResources.StringResource { .init(key: "bindsuccess", tableName: "Localizable", source: source, developmentValue: "Binding successful", comment: nil) }

      /// en translation: Blocklist management
      ///
      /// Key: blManger
      ///
      /// Locales: en, zh-Hant
      var blManger: RswiftResources.StringResource { .init(key: "blManger", tableName: "Localizable", source: source, developmentValue: "Blocklist management", comment: nil) }

      /// en translation: Block user...
      ///
      /// Key: blUsering
      ///
      /// Locales: en, zh-Hant
      var blUsering: RswiftResources.StringResource { .init(key: "blUsering", tableName: "Localizable", source: source, developmentValue: "Block user...", comment: nil) }

      /// en translation: Failed to block the user
      ///
      /// Key: blackFail
      ///
      /// Locales: en, zh-Hant
      var blackFail: RswiftResources.StringResource { .init(key: "blackFail", tableName: "Localizable", source: source, developmentValue: "Failed to block the user", comment: nil) }

      /// en translation: User blocked
      ///
      /// Key: blackSucess
      ///
      /// Locales: en, zh-Hant
      var blackSucess: RswiftResources.StringResource { .init(key: "blackSucess", tableName: "Localizable", source: source, developmentValue: "User blocked", comment: nil) }

      /// en translation: Blocked
      ///
      /// Key: blacked
      ///
      /// Locales: en, zh-Hant
      var blacked: RswiftResources.StringResource { .init(key: "blacked", tableName: "Localizable", source: source, developmentValue: "Blocked", comment: nil) }

      /// en translation: Block user
      ///
      /// Key: blackedUser
      ///
      /// Locales: en, zh-Hant
      var blackedUser: RswiftResources.StringResource { .init(key: "blackedUser", tableName: "Localizable", source: source, developmentValue: "Block user", comment: nil) }

      /// en translation: Blocklist
      ///
      /// Key: blacklist
      ///
      /// Locales: en, zh-Hant
      var blacklist: RswiftResources.StringResource { .init(key: "blacklist", tableName: "Localizable", source: source, developmentValue: "Blocklist", comment: nil) }

      /// en translation: Greetings
      ///
      /// Key: bless
      ///
      /// Locales: en, zh-Hant
      var bless: RswiftResources.StringResource { .init(key: "bless", tableName: "Localizable", source: source, developmentValue: "Greetings", comment: nil) }

      /// en translation: ARTIS sigma1 Network
      ///
      /// Key: blockchain.ARTIS.sigma1
      ///
      /// Locales: en, zh-Hant
      var blockchainARTISSigma1: RswiftResources.StringResource { .init(key: "blockchain.ARTIS.sigma1", tableName: "Localizable", source: source, developmentValue: "ARTIS sigma1 Network", comment: nil) }

      /// en translation: ARTIS tau1 Network
      ///
      /// Key: blockchain.ARTIS.tau1
      ///
      /// Locales: en, zh-Hant
      var blockchainARTISTau1: RswiftResources.StringResource { .init(key: "blockchain.ARTIS.tau1", tableName: "Localizable", source: source, developmentValue: "ARTIS tau1 Network", comment: nil) }

      /// en translation: Avalanche Mainnet C-Chain
      ///
      /// Key: blockchain.Avalanche
      ///
      /// Locales: en, zh-Hant
      var blockchainAvalanche: RswiftResources.StringResource { .init(key: "blockchain.Avalanche", tableName: "Localizable", source: source, developmentValue: "Avalanche Mainnet C-Chain", comment: nil) }

      /// en translation: Avalanche FUJI C-Chain
      ///
      /// Key: blockchain.Avalanche.test
      ///
      /// Locales: en, zh-Hant
      var blockchainAvalancheTest: RswiftResources.StringResource { .init(key: "blockchain.Avalanche.test", tableName: "Localizable", source: source, developmentValue: "Avalanche FUJI C-Chain", comment: nil) }

      /// en translation: Binance (BSC) Network
      ///
      /// Key: blockchain.Binance
      ///
      /// Locales: en, zh-Hant
      var blockchainBinance: RswiftResources.StringResource { .init(key: "blockchain.Binance", tableName: "Localizable", source: source, developmentValue: "Binance (BSC) Network", comment: nil) }

      /// en translation: Binance (BSC) Testnet Network
      ///
      /// Key: blockchain.Binance.test
      ///
      /// Locales: en, zh-Hant
      var blockchainBinanceTest: RswiftResources.StringResource { .init(key: "blockchain.Binance.test", tableName: "Localizable", source: source, developmentValue: "Binance (BSC) Testnet Network", comment: nil) }

      /// en translation: Cronos
      ///
      /// Key: blockchain.Cronos.Mainnet
      ///
      /// Locales: en, zh-Hant
      var blockchainCronosMainnet: RswiftResources.StringResource { .init(key: "blockchain.Cronos.Mainnet", tableName: "Localizable", source: source, developmentValue: "Cronos", comment: nil) }

      /// en translation: Cronos Testnet
      ///
      /// Key: blockchain.Cronos.Testnet
      ///
      /// Locales: en, zh-Hant
      var blockchainCronosTestnet: RswiftResources.StringResource { .init(key: "blockchain.Cronos.Testnet", tableName: "Localizable", source: source, developmentValue: "Cronos Testnet", comment: nil) }

      /// en translation: Heco Network
      ///
      /// Key: blockchain.Heco
      ///
      /// Locales: en, zh-Hant
      var blockchainHeco: RswiftResources.StringResource { .init(key: "blockchain.Heco", tableName: "Localizable", source: source, developmentValue: "Heco Network", comment: nil) }

      /// en translation: Heco Testnet Network
      ///
      /// Key: blockchain.Heco.test
      ///
      /// Locales: en, zh-Hant
      var blockchainHecoTest: RswiftResources.StringResource { .init(key: "blockchain.Heco.test", tableName: "Localizable", source: source, developmentValue: "Heco Testnet Network", comment: nil) }

      /// en translation: Mumbai Testnet
      ///
      /// Key: blockchain.Mumbai
      ///
      /// Locales: en, zh-Hant
      var blockchainMumbai: RswiftResources.StringResource { .init(key: "blockchain.Mumbai", tableName: "Localizable", source: source, developmentValue: "Mumbai Testnet", comment: nil) }

      /// en translation: Optimistic Testnet
      ///
      /// Key: blockchain.Optimistic
      ///
      /// Locales: en, zh-Hant
      var blockchainOptimistic: RswiftResources.StringResource { .init(key: "blockchain.Optimistic", tableName: "Localizable", source: source, developmentValue: "Optimistic Testnet", comment: nil) }

      /// en translation: Optimistic Kovan Testnet
      ///
      /// Key: blockchain.Optimistic.Kovan
      ///
      /// Locales: en, zh-Hant
      var blockchainOptimisticKovan: RswiftResources.StringResource { .init(key: "blockchain.Optimistic.Kovan", tableName: "Localizable", source: source, developmentValue: "Optimistic Kovan Testnet", comment: nil) }

      /// en translation: Polygon Mainnet
      ///
      /// Key: blockchain.Polygon
      ///
      /// Locales: en, zh-Hant
      var blockchainPolygon: RswiftResources.StringResource { .init(key: "blockchain.Polygon", tableName: "Localizable", source: source, developmentValue: "Polygon Mainnet", comment: nil) }

      /// en translation: xDAI Chain
      ///
      /// Key: blockchain.XDAI
      ///
      /// Locales: en, zh-Hant
      var blockchainXDAI: RswiftResources.StringResource { .init(key: "blockchain.XDAI", tableName: "Localizable", source: source, developmentValue: "xDAI Chain", comment: nil) }

      /// en translation: Arbitrum
      ///
      /// Key: blockchain.arbitrum
      ///
      /// Locales: en, zh-Hant
      var blockchainArbitrum: RswiftResources.StringResource { .init(key: "blockchain.arbitrum", tableName: "Localizable", source: source, developmentValue: "Arbitrum", comment: nil) }

      /// en translation: Arbitrum Rinkeby
      ///
      /// Key: blockchain.arbitrum.rinkeby
      ///
      /// Locales: en, zh-Hant
      var blockchainArbitrumRinkeby: RswiftResources.StringResource { .init(key: "blockchain.arbitrum.rinkeby", tableName: "Localizable", source: source, developmentValue: "Arbitrum Rinkeby", comment: nil) }

      /// en translation: Ethereum Blockchain
      ///
      /// Key: blockchain.ethereum
      ///
      /// Locales: en, zh-Hant
      var blockchainEthereum: RswiftResources.StringResource { .init(key: "blockchain.ethereum", tableName: "Localizable", source: source, developmentValue: "Ethereum Blockchain", comment: nil) }

      /// en translation: Fantom Blockchain
      ///
      /// Key: blockchain.fantom
      ///
      /// Locales: en, zh-Hant
      var blockchainFantom: RswiftResources.StringResource { .init(key: "blockchain.fantom", tableName: "Localizable", source: source, developmentValue: "Fantom Blockchain", comment: nil) }

      /// en translation: Fantom Testnet Network
      ///
      /// Key: blockchain.fantom.test
      ///
      /// Locales: en, zh-Hant
      var blockchainFantomTest: RswiftResources.StringResource { .init(key: "blockchain.fantom.test", tableName: "Localizable", source: source, developmentValue: "Fantom Testnet Network", comment: nil) }

      /// en translation: Palm
      ///
      /// Key: blockchain.palm
      ///
      /// Locales: en, zh-Hant
      var blockchainPalm: RswiftResources.StringResource { .init(key: "blockchain.palm", tableName: "Localizable", source: source, developmentValue: "Palm", comment: nil) }

      /// en translation: Palm (Testnet)
      ///
      /// Key: blockchain.palm.Testnet
      ///
      /// Locales: en, zh-Hant
      var blockchainPalmTestnet: RswiftResources.StringResource { .init(key: "blockchain.palm.Testnet", tableName: "Localizable", source: source, developmentValue: "Palm (Testnet)", comment: nil) }

      /// en translation: PHI
      ///
      /// Key: blockchain.phi
      ///
      /// Locales: en, zh-Hant
      var blockchainPhi: RswiftResources.StringResource { .init(key: "blockchain.phi", tableName: "Localizable", source: source, developmentValue: "PHI", comment: nil) }

      /// en translation: Block
      ///
      /// Key: bringtobl
      ///
      /// Locales: en, zh-Hant
      var bringtobl: RswiftResources.StringResource { .init(key: "bringtobl", tableName: "Localizable", source: source, developmentValue: "Block", comment: nil) }

      /// en translation: Broadcast archives
      ///
      /// Key: broadcastFile
      ///
      /// Locales: en, zh-Hant
      var broadcastFile: RswiftResources.StringResource { .init(key: "broadcastFile", tableName: "Localizable", source: source, developmentValue: "Broadcast archives", comment: nil) }

      /// en translation: Broadcast message
      ///
      /// Key: broadcastMsg
      ///
      /// Locales: en, zh-Hant
      var broadcastMsg: RswiftResources.StringResource { .init(key: "broadcastMsg", tableName: "Localizable", source: source, developmentValue: "Broadcast message", comment: nil) }

      /// en translation: Broadcast content
      ///
      /// Key: broadcastMsgContent
      ///
      /// Locales: en, zh-Hant
      var broadcastMsgContent: RswiftResources.StringResource { .init(key: "broadcastMsgContent", tableName: "Localizable", source: source, developmentValue: "Broadcast content", comment: nil) }

      /// en translation: Broadcast photo
      ///
      /// Key: broadcastPhoto
      ///
      /// Locales: en, zh-Hant
      var broadcastPhoto: RswiftResources.StringResource { .init(key: "broadcastPhoto", tableName: "Localizable", source: source, developmentValue: "Broadcast photo", comment: nil) }

      /// en translation: Click 'Select Receiving Group' to select the group you need to rebroadcast
      ///
      /// Key: broadcastRobotReadyTip
      ///
      /// Locales: en, zh-Hant
      var broadcastRobotReadyTip: RswiftResources.StringResource { .init(key: "broadcastRobotReadyTip", tableName: "Localizable", source: source, developmentValue: "Click 'Select Receiving Group' to select the group you need to rebroadcast", comment: nil) }

      /// en translation: Click 'Start Rebroadcasting', and the robot will automatically forward the latest news in the group to the group it belongs to
      ///
      /// Key: broadcastRobotStartTip
      ///
      /// Locales: en, zh-Hant
      var broadcastRobotStartTip: RswiftResources.StringResource { .init(key: "broadcastRobotStartTip", tableName: "Localizable", source: source, developmentValue: "Click 'Start Rebroadcasting', and the robot will automatically forward the latest news in the group to the group it belongs to", comment: nil) }

      /// en translation: Click 'Stop Rebroadcasting', the robot will no longer synchronize the latest news in the group
      ///
      /// Key: broadcastRobotStopTip
      ///
      /// Locales: en, zh-Hant
      var broadcastRobotStopTip: RswiftResources.StringResource { .init(key: "broadcastRobotStopTip", tableName: "Localizable", source: source, developmentValue: "Click 'Stop Rebroadcasting', the robot will no longer synchronize the latest news in the group", comment: nil) }

      /// en translation: Broadcast video
      ///
      /// Key: broadcastVideo
      ///
      /// Locales: en, zh-Hant
      var broadcastVideo: RswiftResources.StringResource { .init(key: "broadcastVideo", tableName: "Localizable", source: source, developmentValue: "Broadcast video", comment: nil) }

      /// en translation: Radio voice
      ///
      /// Key: broadcastVoice
      ///
      /// Locales: en, zh-Hant
      var broadcastVoice: RswiftResources.StringResource { .init(key: "broadcastVoice", tableName: "Localizable", source: source, developmentValue: "Radio voice", comment: nil) }

      /// en translation: Add to My Bookmarks
      ///
      /// Key: browser.addbookmark.button.title
      ///
      /// Locales: en, zh-Hant
      var browserAddbookmarkButtonTitle: RswiftResources.StringResource { .init(key: "browser.addbookmark.button.title", tableName: "Localizable", source: source, developmentValue: "Add to My Bookmarks", comment: nil) }

      /// en translation: Are you sure you would like to delete this bookmark?
      ///
      /// Key: browser.bookmarks.confirm.delete.title
      ///
      /// Locales: en, zh-Hant
      var browserBookmarksConfirmDeleteTitle: RswiftResources.StringResource { .init(key: "browser.bookmarks.confirm.delete.title", tableName: "Localizable", source: source, developmentValue: "Are you sure you would like to delete this bookmark?", comment: nil) }

      /// en translation: Remove History?
      ///
      /// Key: browser.history.confirm.delete.title
      ///
      /// Locales: en, zh-Hant
      var browserHistoryConfirmDeleteTitle: RswiftResources.StringResource { .init(key: "browser.history.confirm.delete.title", tableName: "Localizable", source: source, developmentValue: "Remove History?", comment: nil) }

      /// en translation: Home
      ///
      /// Key: browser.home.button.title
      ///
      /// Locales: en, zh-Hant
      var browserHomeButtonTitle: RswiftResources.StringResource { .init(key: "browser.home.button.title", tableName: "Localizable", source: source, developmentValue: "Home", comment: nil) }

      /// en translation: No bookmarks yet!
      ///
      /// Key: browser.noBookmarks.label.title
      ///
      /// Locales: en, zh-Hant
      var browserNoBookmarksLabelTitle: RswiftResources.StringResource { .init(key: "browser.noBookmarks.label.title", tableName: "Localizable", source: source, developmentValue: "No bookmarks yet!", comment: nil) }

      /// en translation: Your browser history appears here.
      ///
      /// Key: browser.noHistory.label.title
      ///
      /// Locales: en, zh-Hant
      var browserNoHistoryLabelTitle: RswiftResources.StringResource { .init(key: "browser.noHistory.label.title", tableName: "Localizable", source: source, developmentValue: "Your browser history appears here.", comment: nil) }

      /// en translation: Reload
      ///
      /// Key: browser.reload.button.title
      ///
      /// Locales: en, zh-Hant
      var browserReloadButtonTitle: RswiftResources.StringResource { .init(key: "browser.reload.button.title", tableName: "Localizable", source: source, developmentValue: "Reload", comment: nil) }

      /// en translation: Scan QR Code for URL
      ///
      /// Key: browser.scanQRCode.button.title
      ///
      /// Locales: en, zh-Hant
      var browserScanQRCodeButtonTitle: RswiftResources.StringResource { .init(key: "browser.scanQRCode.button.title", tableName: "Localizable", source: source, developmentValue: "Scan QR Code for URL", comment: nil) }

      /// en translation: Scan QR Code
      ///
      /// Key: browser.scanQRCode.title
      ///
      /// Locales: en, zh-Hant
      var browserScanQRCodeTitle: RswiftResources.StringResource { .init(key: "browser.scanQRCode.title", tableName: "Localizable", source: source, developmentValue: "Scan QR Code", comment: nil) }

      /// en translation: More networks will be available when they are enabled in the Settings tab
      ///
      /// Key: browser.settings.network.description.title
      ///
      /// Locales: en, zh-Hant
      var browserSettingsNetworkDescriptionTitle: RswiftResources.StringResource { .init(key: "browser.settings.network.description.title", tableName: "Localizable", source: source, developmentValue: "More networks will be available when they are enabled in the Settings tab", comment: nil) }

      /// en translation: Discover
      ///
      /// Key: browser.tabbar.item.title
      ///
      /// Locales: en, zh-Hant
      var browserTabbarItemTitle: RswiftResources.StringResource { .init(key: "browser.tabbar.item.title", tableName: "Localizable", source: source, developmentValue: "Discover", comment: nil) }

      /// en translation: Search or type URL
      ///
      /// Key: browser.url.textfield.placeholder
      ///
      /// Locales: en, zh-Hant
      var browserUrlTextfieldPlaceholder: RswiftResources.StringResource { .init(key: "browser.url.textfield.placeholder", tableName: "Localizable", source: source, developmentValue: "Search or type URL", comment: nil) }

      /// en translation: History
      ///
      /// Key: browserHistory
      ///
      /// Locales: en, zh-Hant
      var browserHistory: RswiftResources.StringResource { .init(key: "browserHistory", tableName: "Localizable", source: source, developmentValue: "History", comment: nil) }

      /// en translation: Report a bug
      ///
      /// Key: bug
      ///
      /// Locales: en, zh-Hant
      var bug: RswiftResources.StringResource { .init(key: "bug", tableName: "Localizable", source: source, developmentValue: "Report a bug", comment: nil) }

      /// en translation: Quickly recommend and establish your team
      ///
      /// Key: buildyourteam
      ///
      /// Locales: en, zh-Hant
      var buildyourteam: RswiftResources.StringResource { .init(key: "buildyourteam", tableName: "Localizable", source: source, developmentValue: "Quickly recommend and establish your team", comment: nil) }

      /// en translation: Business card
      ///
      /// Key: businesscard
      ///
      /// Locales: en, zh-Hant
      var businesscard: RswiftResources.StringResource { .init(key: "businesscard", tableName: "Localizable", source: source, developmentValue: "Business card", comment: nil) }

      /// en translation: Buy Crypto
      ///
      /// Key: buyCrypto.title
      ///
      /// Locales: en, zh-Hant
      var buyCryptoTitle: RswiftResources.StringResource { .init(key: "buyCrypto.title", tableName: "Localizable", source: source, developmentValue: "Buy Crypto", comment: nil) }

      /// en translation: Purchase quantity
      ///
      /// Key: buy_amount
      ///
      /// Locales: en, zh-Hant
      var buy_amount: RswiftResources.StringResource { .init(key: "buy_amount", tableName: "Localizable", source: source, developmentValue: "Purchase quantity", comment: nil) }

      /// en translation: Buy MAT
      ///
      /// Key: buy_mat
      ///
      /// Locales: en, zh-Hant
      var buy_mat: RswiftResources.StringResource { .init(key: "buy_mat", tableName: "Localizable", source: source, developmentValue: "Buy MAT", comment: nil) }

      /// en translation: You have purchased up to the maximum limit of 1MAT.
      ///
      /// Key: buy_mat_amount_invalid
      ///
      /// Locales: en, zh-Hant
      var buy_mat_amount_invalid: RswiftResources.StringResource { .init(key: "buy_mat_amount_invalid", tableName: "Localizable", source: source, developmentValue: "You have purchased up to the maximum limit of 1MAT.", comment: nil) }

      /// en translation: You can purchase MAT quantity %@
      ///
      /// Key: buy_mat_amount_purchase
      ///
      /// Locales: en, zh-Hant
      var buy_mat_amount_purchase: RswiftResources.StringResource1<String> { .init(key: "buy_mat_amount_purchase", tableName: "Localizable", source: source, developmentValue: "You can purchase MAT quantity %@", comment: nil) }

      /// en translation: The quantity of MAT you can purchase: %@ MAT, the minimum purchase is 0.1 MAT
      ///
      /// Key: buy_mat_subtitle
      ///
      /// Locales: en, zh-Hant
      var buy_mat_subtitle: RswiftResources.StringResource1<String> { .init(key: "buy_mat_subtitle", tableName: "Localizable", source: source, developmentValue: "The quantity of MAT you can purchase: %@ MAT, the minimum purchase is 0.1 MAT", comment: nil) }

      /// en translation: Please enter the purchase quantity
      ///
      /// Key: buyamount
      ///
      /// Locales: en, zh-Hant
      var buyamount: RswiftResources.StringResource { .init(key: "buyamount", tableName: "Localizable", source: source, developmentValue: "Please enter the purchase quantity", comment: nil) }

      /// en translation: Purchase quantity: %@
      ///
      /// Key: buymadelamount
      ///
      /// Locales: en, zh-Hant
      var buymadelamount: RswiftResources.StringResource1<String> { .init(key: "buymadelamount", tableName: "Localizable", source: source, developmentValue: "Purchase quantity: %@", comment: nil) }

      /// en translation: Purchase Price: %@ TOX
      ///
      /// Key: buymadeltox
      ///
      /// Locales: en, zh-Hant
      var buymadeltox: RswiftResources.StringResource1<String> { .init(key: "buymadeltox", tableName: "Localizable", source: source, developmentValue: "Purchase Price: %@ TOX", comment: nil) }

      /// en translation: You have purchased %@ medals and are about to consume %@ TOX
      ///
      /// Key: buymodelfromtox
      ///
      /// Locales: en, zh-Hant
      var buymodelfromtox: RswiftResources.StringResource2<String, String> { .init(key: "buymodelfromtox", tableName: "Localizable", source: source, developmentValue: "You have purchased %@ medals and are about to consume %@ TOX", comment: nil) }

      /// en translation: You have purchased %@ medals and are about to consume %@ TX
      ///
      /// Key: buymodelfromtx
      ///
      /// Locales: en, zh-Hant
      var buymodelfromtx: RswiftResources.StringResource2<String, String> { .init(key: "buymodelfromtx", tableName: "Localizable", source: source, developmentValue: "You have purchased %@ medals and are about to consume %@ TX", comment: nil) }

      /// en translation: Buy Now
      ///
      /// Key: buynow
      ///
      /// Locales: en, zh-Hant
      var buynow: RswiftResources.StringResource { .init(key: "buynow", tableName: "Localizable", source: source, developmentValue: "Buy Now", comment: nil) }

      /// en translation: Purchase successful
      ///
      /// Key: buysuccess
      ///
      /// Locales: en, zh-Hant
      var buysuccess: RswiftResources.StringResource { .init(key: "buysuccess", tableName: "Localizable", source: source, developmentValue: "Purchase successful", comment: nil) }

      /// en translation: Purchase time: %@
      ///
      /// Key: buytime
      ///
      /// Locales: en, zh-Hant
      var buytime: RswiftResources.StringResource1<String> { .init(key: "buytime", tableName: "Localizable", source: source, developmentValue: "Purchase time: %@", comment: nil) }

      /// en translation: Description: Deduct the consumable balance first, and deduct the TOX balance when it is insufficient
      ///
      /// Key: buytoxdesc
      ///
      /// Locales: en, zh-Hant
      var buytoxdesc: RswiftResources.StringResource { .init(key: "buytoxdesc", tableName: "Localizable", source: source, developmentValue: "Description: Deduct the consumable balance first, and deduct the TOX balance when it is insufficient", comment: nil) }

      /// en translation: Call canceled
      ///
      /// Key: callCancel
      ///
      /// Locales: en, zh-Hant
      var callCancel: RswiftResources.StringResource { .init(key: "callCancel", tableName: "Localizable", source: source, developmentValue: "Call canceled", comment: nil) }

      /// en translation: The call has ended. Call duration: %d sec.
      ///
      /// Key: callendPrompt
      ///
      /// Locales: en, zh-Hant
      var callendPrompt: RswiftResources.StringResource1<Int> { .init(key: "callendPrompt", tableName: "Localizable", source: source, developmentValue: "The call has ended. Call duration: %d sec.", comment: nil) }

      /// en translation: Camera
      ///
      /// Key: camera
      ///
      /// Locales: en, zh-Hant
      var camera: RswiftResources.StringResource { .init(key: "camera", tableName: "Localizable", source: source, developmentValue: "Camera", comment: nil) }

      /// en translation: Open Settings
      ///
      /// Key: camera.qrCode.denied.prompt.button
      ///
      /// Locales: en, zh-Hant
      var cameraQrCodeDeniedPromptButton: RswiftResources.StringResource { .init(key: "camera.qrCode.denied.prompt.button", tableName: "Localizable", source: source, developmentValue: "Open Settings", comment: nil) }

      /// en translation: Your privacy settings are preventing us from accessing your camera for QR code scanning. Fix this by:  1. Tap the Open Settings button below to open the Settings app.  2. Tap to enable the Camera on.  3. Launch this app again.
      ///
      /// Key: camera.qrCode.denied.prompt.message
      ///
      /// Locales: en, zh-Hant
      var cameraQrCodeDeniedPromptMessage: RswiftResources.StringResource { .init(key: "camera.qrCode.denied.prompt.message", tableName: "Localizable", source: source, developmentValue: "Your privacy settings are preventing us from accessing your camera for QR code scanning. Fix this by:\n\n1. Tap the Open Settings button below to open the Settings app.\n\n2. Tap to enable the Camera on.\n\n3. Launch this app again.", comment: nil) }

      /// en translation: Camera Access Required to Scan QR Code
      ///
      /// Key: camera.qrCode.denied.prompt.title
      ///
      /// Locales: en, zh-Hant
      var cameraQrCodeDeniedPromptTitle: RswiftResources.StringResource { .init(key: "camera.qrCode.denied.prompt.title", tableName: "Localizable", source: source, developmentValue: "Camera Access Required to Scan QR Code", comment: nil) }

      /// en translation: The camera access permission has not been enabled, please go to the system settings to enable it, otherwise it will affect the use of the scanning function
      ///
      /// Key: cameratoscan
      ///
      /// Locales: en, zh-Hant
      var cameratoscan: RswiftResources.StringResource { .init(key: "cameratoscan", tableName: "Localizable", source: source, developmentValue: "The camera access permission has not been enabled, please go to the system settings to enable it, otherwise it will affect the use of the scanning function", comment: nil) }

      /// en translation: Device camera not available
      ///
      /// Key: cameraunavailable
      ///
      /// Locales: en, zh-Hant
      var cameraunavailable: RswiftResources.StringResource { .init(key: "cameraunavailable", tableName: "Localizable", source: source, developmentValue: "Device camera not available", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: cancel
      ///
      /// Locales: en, zh-Hant
      var cancel: RswiftResources.StringResource { .init(key: "cancel", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: You have canceled the call
      ///
      /// Key: cancelCall
      ///
      /// Locales: en, zh-Hant
      var cancelCall: RswiftResources.StringResource { .init(key: "cancelCall", tableName: "Localizable", source: source, developmentValue: "You have canceled the call", comment: nil) }

      /// en translation: Canceled
      ///
      /// Key: canceled
      ///
      /// Locales: en, zh-Hant
      var canceled: RswiftResources.StringResource { .init(key: "canceled", tableName: "Localizable", source: source, developmentValue: "Canceled", comment: nil) }

      /// en translation: Remove from Top
      ///
      /// Key: canceltop
      ///
      /// Locales: en, zh-Hant
      var canceltop: RswiftResources.StringResource { .init(key: "canceltop", tableName: "Localizable", source: source, developmentValue: "Remove from Top", comment: nil) }

      /// en translation: Seed phrase cannot be stored or transmitted over the network
      ///
      /// Key: cannot_stored_transmitted
      ///
      /// Locales: en, zh-Hant
      var cannot_stored_transmitted: RswiftResources.StringResource { .init(key: "cannot_stored_transmitted", tableName: "Localizable", source: source, developmentValue: "Seed phrase cannot be stored or transmitted over the network", comment: nil) }

      /// en translation: Non removable appkey
      ///
      /// Key: cannotremoveLastAppkey
      ///
      /// Locales: en, zh-Hant
      var cannotremoveLastAppkey: RswiftResources.StringResource { .init(key: "cannotremoveLastAppkey", tableName: "Localizable", source: source, developmentValue: "Non removable appkey", comment: nil) }

      /// en translation: Lag
      ///
      /// Key: caton
      ///
      /// Locales: en, zh-Hant
      var caton: RswiftResources.StringResource { .init(key: "caton", tableName: "Localizable", source: source, developmentValue: "Lag", comment: nil) }

      /// en translation: SBT Certification Medal
      ///
      /// Key: certificationmedal
      ///
      /// Locales: en, zh-Hant
      var certificationmedal: RswiftResources.StringResource { .init(key: "certificationmedal", tableName: "Localizable", source: source, developmentValue: "SBT Certification Medal", comment: nil) }

      /// en translation: Certified
      ///
      /// Key: certified
      ///
      /// Locales: en, zh-Hant
      var certified: RswiftResources.StringResource { .init(key: "certified", tableName: "Localizable", source: source, developmentValue: "Certified", comment: nil) }

      /// en translation: On-chain news
      ///
      /// Key: chainmesage
      ///
      /// Locales: en, zh-Hant
      var chainmesage: RswiftResources.StringResource { .init(key: "chainmesage", tableName: "Localizable", source: source, developmentValue: "On-chain news", comment: nil) }

      /// en translation: Uplink message byte limit %lu/%lu
      ///
      /// Key: chainmessagelengthlimit
      ///
      /// Locales: en, zh-Hant
      var chainmessagelengthlimit: RswiftResources.StringResource2<UInt, UInt> { .init(key: "chainmessagelengthlimit", tableName: "Localizable", source: source, developmentValue: "Uplink message byte limit %lu/%lu", comment: nil) }

      /// en translation: On-chain message byte limit
      ///
      /// Key: chainmessagelimit
      ///
      /// Locales: en, zh-Hant
      var chainmessagelimit: RswiftResources.StringResource { .init(key: "chainmessagelimit", tableName: "Localizable", source: source, developmentValue: "On-chain message byte limit", comment: nil) }

      /// en translation: Transfer chatroom owner
      ///
      /// Key: changeChatroomOwner
      ///
      /// Locales: en, zh-Hant
      var changeChatroomOwner: RswiftResources.StringResource { .init(key: "changeChatroomOwner", tableName: "Localizable", source: source, developmentValue: "Transfer chatroom owner", comment: nil) }

      /// en translation: Failed to transfer the chat room ownership
      ///
      /// Key: changeChatroomOwnerFail
      ///
      /// Locales: en, zh-Hant
      var changeChatroomOwnerFail: RswiftResources.StringResource { .init(key: "changeChatroomOwnerFail", tableName: "Localizable", source: source, developmentValue: "Failed to transfer the chat room ownership", comment: nil) }

      /// en translation: Transfer chatroom ownership to %@?
      ///
      /// Key: changeChatroomOwnerPrompt
      ///
      /// Locales: en, zh-Hant
      var changeChatroomOwnerPrompt: RswiftResources.StringResource1<String> { .init(key: "changeChatroomOwnerPrompt", tableName: "Localizable", source: source, developmentValue: "Transfer chatroom ownership to %@?", comment: nil) }

      /// en translation: %@ has transferred chat room to %@
      ///
      /// Key: changeChatroomOwnerPromptEx
      ///
      /// Locales: en, zh-Hant
      var changeChatroomOwnerPromptEx: RswiftResources.StringResource2<String, String> { .init(key: "changeChatroomOwnerPromptEx", tableName: "Localizable", source: source, developmentValue: "%@ has transferred chat room to %@", comment: nil) }

      /// en translation: Chat room ownership transferred
      ///
      /// Key: changeChatroomOwnerSuccess
      ///
      /// Locales: en, zh-Hant
      var changeChatroomOwnerSuccess: RswiftResources.StringResource { .init(key: "changeChatroomOwnerSuccess", tableName: "Localizable", source: source, developmentValue: "Chat room ownership transferred", comment: nil) }

      /// en translation: Transfer chatroom ownership %@
      ///
      /// Key: changeChatroomToing
      ///
      /// Locales: en, zh-Hant
      var changeChatroomToing: RswiftResources.StringResource1<String> { .init(key: "changeChatroomToing", tableName: "Localizable", source: source, developmentValue: "Transfer chatroom ownership %@", comment: nil) }

      /// en translation: Transfer group ownership
      ///
      /// Key: changeOwner
      ///
      /// Locales: en, zh-Hant
      var changeOwner: RswiftResources.StringResource { .init(key: "changeOwner", tableName: "Localizable", source: source, developmentValue: "Transfer group ownership", comment: nil) }

      /// en translation: Group ownership transfer failed
      ///
      /// Key: changeOwnerFail
      ///
      /// Locales: en, zh-Hant
      var changeOwnerFail: RswiftResources.StringResource { .init(key: "changeOwnerFail", tableName: "Localizable", source: source, developmentValue: "Group ownership transfer failed", comment: nil) }

      /// en translation: Make this member the group owner?
      ///
      /// Key: changeOwnerPrompt
      ///
      /// Locales: en, zh-Hant
      var changeOwnerPrompt: RswiftResources.StringResource { .init(key: "changeOwnerPrompt", tableName: "Localizable", source: source, developmentValue: "Make this member the group owner?", comment: nil) }

      /// en translation: Group ownership transferred
      ///
      /// Key: changeOwnerSuccess
      ///
      /// Locales: en, zh-Hant
      var changeOwnerSuccess: RswiftResources.StringResource { .init(key: "changeOwnerSuccess", tableName: "Localizable", source: source, developmentValue: "Group ownership transferred", comment: nil) }

      /// en translation: Transfer Owner...
      ///
      /// Key: changeOwnering
      ///
      /// Locales: en, zh-Hant
      var changeOwnering: RswiftResources.StringResource { .init(key: "changeOwnering", tableName: "Localizable", source: source, developmentValue: "Transfer Owner...", comment: nil) }

      /// en translation: transfer group ownership...
      ///
      /// Key: changingGroupOwnering
      ///
      /// Locales: en, zh-Hant
      var changingGroupOwnering: RswiftResources.StringResource { .init(key: "changingGroupOwnering", tableName: "Localizable", source: source, developmentValue: "transfer group ownership...", comment: nil) }

      /// en translation: Chat
      ///
      /// Key: chat.to.ta
      ///
      /// Locales: en, zh-Hant
      var chatToTa: RswiftResources.StringResource { .init(key: "chat.to.ta", tableName: "Localizable", source: source, developmentValue: "Chat", comment: nil) }

      /// en translation: Chat details
      ///
      /// Key: chatInfo
      ///
      /// Locales: en, zh-Hant
      var chatInfo: RswiftResources.StringResource { .init(key: "chatInfo", tableName: "Localizable", source: source, developmentValue: "Chat details", comment: nil) }

      /// en translation: Chat room administrator
      ///
      /// Key: chatroomAdmins
      ///
      /// Locales: en, zh-Hant
      var chatroomAdmins: RswiftResources.StringResource { .init(key: "chatroomAdmins", tableName: "Localizable", source: source, developmentValue: "Chat room administrator", comment: nil) }

      /// en translation: Chat room announcement
      ///
      /// Key: chatroomAnnounment
      ///
      /// Locales: en, zh-Hant
      var chatroomAnnounment: RswiftResources.StringResource { .init(key: "chatroomAnnounment", tableName: "Localizable", source: source, developmentValue: "Chat room announcement", comment: nil) }

      /// en translation: Chat room blocklist
      ///
      /// Key: chatroomBlacklist
      ///
      /// Locales: en, zh-Hant
      var chatroomBlacklist: RswiftResources.StringResource { .init(key: "chatroomBlacklist", tableName: "Localizable", source: source, developmentValue: "Chat room blocklist", comment: nil) }

      /// en translation: Chat room intro
      ///
      /// Key: chatroomDescription
      ///
      /// Locales: en, zh-Hant
      var chatroomDescription: RswiftResources.StringResource { .init(key: "chatroomDescription", tableName: "Localizable", source: source, developmentValue: "Chat room intro", comment: nil) }

      /// en translation: Chat room %@ was disbanded.
      ///
      /// Key: chatroomDestroed
      ///
      /// Locales: en, zh-Hant
      var chatroomDestroed: RswiftResources.StringResource1<String> { .init(key: "chatroomDestroed", tableName: "Localizable", source: source, developmentValue: "Chat room %@ was disbanded.", comment: nil) }

      /// en translation: ChatroomID
      ///
      /// Key: chatroomIding
      ///
      /// Locales: en, zh-Hant
      var chatroomIding: RswiftResources.StringResource { .init(key: "chatroomIding", tableName: "Localizable", source: source, developmentValue: "ChatroomID", comment: nil) }

      /// en translation: Chat room members
      ///
      /// Key: chatroomMembers
      ///
      /// Locales: en, zh-Hant
      var chatroomMembers: RswiftResources.StringResource { .init(key: "chatroomMembers", tableName: "Localizable", source: source, developmentValue: "Chat room members", comment: nil) }

      /// en translation: Input member quantity 3-1000
      ///
      /// Key: chatroomMembrCounts
      ///
      /// Locales: en, zh-Hant
      var chatroomMembrCounts: RswiftResources.StringResource { .init(key: "chatroomMembrCounts", tableName: "Localizable", source: source, developmentValue: "Input member quantity 3-1000", comment: nil) }

      /// en translation: Chat room mute list
      ///
      /// Key: chatroomMutes
      ///
      /// Locales: en, zh-Hant
      var chatroomMutes: RswiftResources.StringResource { .init(key: "chatroomMutes", tableName: "Localizable", source: source, developmentValue: "Chat room mute list", comment: nil) }

      /// en translation: Chat room name
      ///
      /// Key: chatroomSubject
      ///
      /// Locales: en, zh-Hant
      var chatroomSubject: RswiftResources.StringResource { .init(key: "chatroomSubject", tableName: "Localizable", source: source, developmentValue: "Chat room name", comment: nil) }

      /// en translation: Chatroom change callback: %@
      ///
      /// Key: chatroomchange
      ///
      /// Locales: en, zh-Hant
      var chatroomchange: RswiftResources.StringResource1<String> { .init(key: "chatroomchange", tableName: "Localizable", source: source, developmentValue: "Chatroom change callback: %@", comment: nil) }

      /// en translation: Diagnostics
      ///
      /// Key: check
      ///
      /// Locales: en, zh-Hant
      var check: RswiftResources.StringResource { .init(key: "check", tableName: "Localizable", source: source, developmentValue: "Diagnostics", comment: nil) }

      /// en translation: Check
      ///
      /// Key: checkTransactionState.actionButton.title
      ///
      /// Locales: en, zh-Hant
      var checkTransactionStateActionButtonTitle: RswiftResources.StringResource { .init(key: "checkTransactionState.actionButton.title", tableName: "Localizable", source: source, developmentValue: "Check", comment: nil) }

      /// en translation: Transactions status: %@
      ///
      /// Key: checkTransactionState.complete
      ///
      /// Locales: en, zh-Hant
      var checkTransactionStateComplete: RswiftResources.StringResource1<String> { .init(key: "checkTransactionState.complete", tableName: "Localizable", source: source, developmentValue: "Transactions status: %@", comment: nil) }

      /// en translation: Failure with error: %@
      ///
      /// Key: checkTransactionState.error
      ///
      /// Locales: en, zh-Hant
      var checkTransactionStateError: RswiftResources.StringResource1<String> { .init(key: "checkTransactionState.error", tableName: "Localizable", source: source, developmentValue: "Failure with error: %@", comment: nil) }

      /// en translation: Transaction Hash
      ///
      /// Key: checkTransactionState.field.hash.placeholder
      ///
      /// Locales: en, zh-Hant
      var checkTransactionStateFieldHashPlaceholder: RswiftResources.StringResource { .init(key: "checkTransactionState.field.hash.placeholder", tableName: "Localizable", source: source, developmentValue: "Transaction Hash", comment: nil) }

      /// en translation: Server
      ///
      /// Key: checkTransactionState.field.server.title
      ///
      /// Locales: en, zh-Hant
      var checkTransactionStateFieldServerTitle: RswiftResources.StringResource { .init(key: "checkTransactionState.field.server.title", tableName: "Localizable", source: source, developmentValue: "Server", comment: nil) }

      /// en translation: Transaction hash is invalid
      ///
      /// Key: checkTransactionState.invalidHash
      ///
      /// Locales: en, zh-Hant
      var checkTransactionStateInvalidHash: RswiftResources.StringResource { .init(key: "checkTransactionState.invalidHash", tableName: "Localizable", source: source, developmentValue: "Transaction hash is invalid", comment: nil) }

      /// en translation: Check transaction hash
      ///
      /// Key: checkTransactionState.title
      ///
      /// Locales: en, zh-Hant
      var checkTransactionStateTitle: RswiftResources.StringResource { .init(key: "checkTransactionState.title", tableName: "Localizable", source: source, developmentValue: "Check transaction hash", comment: nil) }

      /// en translation: User does not exist
      ///
      /// Key: checkUserIdFail
      ///
      /// Locales: en, zh-Hant
      var checkUserIdFail: RswiftResources.StringResource { .init(key: "checkUserIdFail", tableName: "Localizable", source: source, developmentValue: "User does not exist", comment: nil) }

      /// en translation: Details
      ///
      /// Key: check_details
      ///
      /// Locales: en, zh-Hant
      var check_details: RswiftResources.StringResource { .init(key: "check_details", tableName: "Localizable", source: source, developmentValue: "Details", comment: nil) }

      /// en translation: Please check the network and try again
      ///
      /// Key: check_network
      ///
      /// Locales: en, zh-Hant
      var check_network: RswiftResources.StringResource { .init(key: "check_network", tableName: "Localizable", source: source, developmentValue: "Please check the network and try again", comment: nil) }

      /// en translation: Please check the network and rebind
      ///
      /// Key: check_network_rebind
      ///
      /// Locales: en, zh-Hant
      var check_network_rebind: RswiftResources.StringResource { .init(key: "check_network_rebind", tableName: "Localizable", source: source, developmentValue: "Please check the network and rebind", comment: nil) }

      /// en translation: Select contact
      ///
      /// Key: chooseContact
      ///
      /// Locales: en, zh-Hant
      var chooseContact: RswiftResources.StringResource { .init(key: "chooseContact", tableName: "Localizable", source: source, developmentValue: "Select contact", comment: nil) }

      /// en translation: Choose SBT
      ///
      /// Key: chooseDID
      ///
      /// Locales: en, zh-Hant
      var chooseDID: RswiftResources.StringResource { .init(key: "chooseDID", tableName: "Localizable", source: source, developmentValue: "Choose SBT", comment: nil) }

      /// en translation: Select group members
      ///
      /// Key: chooseGroupMembers
      ///
      /// Locales: en, zh-Hant
      var chooseGroupMembers: RswiftResources.StringResource { .init(key: "chooseGroupMembers", tableName: "Localizable", source: source, developmentValue: "Select group members", comment: nil) }

      /// en translation: You can choose the following wallets to unlock
      ///
      /// Key: choose_wallets_unlock
      ///
      /// Locales: en, zh-Hant
      var choose_wallets_unlock: RswiftResources.StringResource { .init(key: "choose_wallets_unlock", tableName: "Localizable", source: source, developmentValue: "You can choose the following wallets to unlock", comment: nil) }

      /// en translation: The current chain is a mandatory chain. In addition to the current chain, other chains can be selected to synchronize SBT data. However, after the current chain initiates a SBT authentication, it cannot be initiated again, that is, it cannot be synchronized to other chains or change the identity information of the SBT.
      ///
      /// Key: choosechaindescription
      ///
      /// Locales: en, zh-Hant
      var choosechaindescription: RswiftResources.StringResource { .init(key: "choosechaindescription", tableName: "Localizable", source: source, developmentValue: "The current chain is a mandatory chain. In addition to the current chain, other chains can be selected to synchronize SBT data. However, after the current chain initiates a SBT authentication, it cannot be initiated again, that is, it cannot be synchronized to other chains or change the identity information of the SBT.", comment: nil) }

      /// en translation: Please choose a friend to send the link message
      ///
      /// Key: choosefriendtochain
      ///
      /// Locales: en, zh-Hant
      var choosefriendtochain: RswiftResources.StringResource { .init(key: "choosefriendtochain", tableName: "Localizable", source: source, developmentValue: "Please choose a friend to send the link message", comment: nil) }

      /// en translation: Select a group project
      ///
      /// Key: choosegroupproject
      ///
      /// Locales: en, zh-Hant
      var choosegroupproject: RswiftResources.StringResource { .init(key: "choosegroupproject", tableName: "Localizable", source: source, developmentValue: "Select a group project", comment: nil) }

      /// en translation: Select items with a hierarchical relationship
      ///
      /// Key: chooserelationshipgroup
      ///
      /// Locales: en, zh-Hant
      var chooserelationshipgroup: RswiftResources.StringResource { .init(key: "chooserelationshipgroup", tableName: "Localizable", source: source, developmentValue: "Select items with a hierarchical relationship", comment: nil) }

      /// en translation: Select token
      ///
      /// Key: choosetoken
      ///
      /// Locales: en, zh-Hant
      var choosetoken: RswiftResources.StringResource { .init(key: "choosetoken", tableName: "Localizable", source: source, developmentValue: "Select token", comment: nil) }

      /// en translation: My participation 
      ///
      /// Key: city_my_join
      ///
      /// Locales: en, zh-Hant
      var city_my_join: RswiftResources.StringResource { .init(key: "city_my_join", tableName: "Localizable", source: source, developmentValue: "My participation ", comment: nil) }

      /// en translation: You have obtained a pioneer allocation, please pay the deposit as soon as possible
      ///
      /// Key: city_payment
      ///
      /// Locales: en, zh-Hant
      var city_payment: RswiftResources.StringResource { .init(key: "city_payment", tableName: "Localizable", source: source, developmentValue: "You have obtained a pioneer allocation, please pay the deposit as soon as possible", comment: nil) }

      /// en translation: Available for collection tomorrow
      ///
      /// Key: claimed_tomorrow
      ///
      /// Locales: en, zh-Hant
      var claimed_tomorrow: RswiftResources.StringResource { .init(key: "claimed_tomorrow", tableName: "Localizable", source: source, developmentValue: "Available for collection tomorrow", comment: nil) }

      /// en translation: Clear
      ///
      /// Key: clear
      ///
      /// Locales: en, zh-Hant
      var clear: RswiftResources.StringResource { .init(key: "clear", tableName: "Localizable", source: source, developmentValue: "Clear", comment: nil) }

      /// en translation: Are you sure to clear the Chat log?   After clearing, all Chat log cannot be restored.
      ///
      /// Key: clear.history.records
      ///
      /// Locales: en, zh-Hant
      var clearHistoryRecords: RswiftResources.StringResource { .init(key: "clear.history.records", tableName: "Localizable", source: source, developmentValue: "Are you sure to clear the Chat log? \n After clearing, all Chat log cannot be restored.", comment: nil) }

      /// en translation: Clear
      ///
      /// Key: clearButton.title
      ///
      /// Locales: en, zh-Hant
      var clearButtonTitle: RswiftResources.StringResource { .init(key: "clearButton.title", tableName: "Localizable", source: source, developmentValue: "Clear", comment: nil) }

      /// en translation: Clear Cloud Backup
      ///
      /// Key: clearCloudBackup
      ///
      /// Locales: en, zh-Hant
      var clearCloudBackup: RswiftResources.StringResource { .init(key: "clearCloudBackup", tableName: "Localizable", source: source, developmentValue: "Clear Cloud Backup", comment: nil) }

      /// en translation: Clear chat history
      ///
      /// Key: clearConversation
      ///
      /// Locales: en, zh-Hant
      var clearConversation: RswiftResources.StringResource { .init(key: "clearConversation", tableName: "Localizable", source: source, developmentValue: "Clear chat history", comment: nil) }

      /// en translation: Failed to clear the chat history!
      ///
      /// Key: clearFail
      ///
      /// Locales: en, zh-Hant
      var clearFail: RswiftResources.StringResource { .init(key: "clearFail", tableName: "Localizable", source: source, developmentValue: "Failed to clear the chat history!", comment: nil) }

      /// en translation: Clear messages
      ///
      /// Key: clearMsgs
      ///
      /// Locales: en, zh-Hant
      var clearMsgs: RswiftResources.StringResource { .init(key: "clearMsgs", tableName: "Localizable", source: source, developmentValue: "Clear messages", comment: nil) }

      /// en translation: Chat history has been cleared!
      ///
      /// Key: cleared
      ///
      /// Locales: en, zh-Hant
      var cleared: RswiftResources.StringResource { .init(key: "cleared", tableName: "Localizable", source: source, developmentValue: "Chat history has been cleared!", comment: nil) }

      /// en translation: Click to open AI smart assistant
      ///
      /// Key: click_open_ai_helper
      ///
      /// Locales: en, zh-Hant
      var click_open_ai_helper: RswiftResources.StringResource { .init(key: "click_open_ai_helper", tableName: "Localizable", source: source, developmentValue: "Click to open AI smart assistant", comment: nil) }

      /// en translation: Close
      ///
      /// Key: close
      ///
      /// Locales: en, zh-Hant
      var close: RswiftResources.StringResource { .init(key: "close", tableName: "Localizable", source: source, developmentValue: "Close", comment: nil) }

      /// en translation: Enter the cloud backup unlock password
      ///
      /// Key: cloud_backup_unlock_password
      ///
      /// Locales: en, zh-Hant
      var cloud_backup_unlock_password: RswiftResources.StringResource { .init(key: "cloud_backup_unlock_password", tableName: "Localizable", source: source, developmentValue: "Enter the cloud backup unlock password", comment: nil) }

      /// en translation: Cloud backup wallet
      ///
      /// Key: cloud_backup_wallet_new
      ///
      /// Locales: en, zh-Hant
      var cloud_backup_wallet_new: RswiftResources.StringResource { .init(key: "cloud_backup_wallet_new", tableName: "Localizable", source: source, developmentValue: "Cloud backup wallet", comment: nil) }

      /// en translation: Authorize
      ///
      /// Key: cloudbackup.authorize
      ///
      /// Locales: en, zh-Hant
      var cloudbackupAuthorize: RswiftResources.StringResource { .init(key: "cloudbackup.authorize", tableName: "Localizable", source: source, developmentValue: "Authorize", comment: nil) }

      /// en translation: In the future, you can import a backup wallet through the unlock password. Please remember your unlock password
      ///
      /// Key: cloudbackup.complatesubtitle
      ///
      /// Locales: en, zh-Hant
      var cloudbackupComplatesubtitle: RswiftResources.StringResource { .init(key: "cloudbackup.complatesubtitle", tableName: "Localizable", source: source, developmentValue: "In the future, you can import a backup wallet through the unlock password. Please remember your unlock password", comment: nil) }

      /// en translation: Cloud wallet has been backed up successfully
      ///
      /// Key: cloudbackup.complatetitle
      ///
      /// Locales: en, zh-Hant
      var cloudbackupComplatetitle: RswiftResources.StringResource { .init(key: "cloudbackup.complatetitle", tableName: "Localizable", source: source, developmentValue: "Cloud wallet has been backed up successfully", comment: nil) }

      /// en translation: INTO's original cloud backup allows you to set your own password, and your wallet can be encrypted to the cloud with your account. You can use this password to decrypt your next login
      ///
      /// Key: cloudbackup.content
      ///
      /// Locales: en, zh-Hant
      var cloudbackupContent: RswiftResources.StringResource { .init(key: "cloudbackup.content", tableName: "Localizable", source: source, developmentValue: "INTO's original cloud backup allows you to set your own password, and your wallet can be encrypted to the cloud with your account. You can use this password to decrypt your next login", comment: nil) }

      /// en translation: Pay
      ///
      /// Key: cloudbackup.pay
      ///
      /// Locales: en, zh-Hant
      var cloudbackupPay: RswiftResources.StringResource { .init(key: "cloudbackup.pay", tableName: "Localizable", source: source, developmentValue: "Pay", comment: nil) }

      /// en translation: Accessing your wallet key for cloud backup
      ///
      /// Key: cloudbackup.privatekeytip
      ///
      /// Locales: en, zh-Hant
      var cloudbackupPrivatekeytip: RswiftResources.StringResource { .init(key: "cloudbackup.privatekeytip", tableName: "Localizable", source: source, developmentValue: "Accessing your wallet key for cloud backup", comment: nil) }

      /// en translation: The unlock password is used to restore cloud wallet. If you lose it, you cannot unlock cloud wallet
      ///
      /// Key: cloudbackup.pwddescription
      ///
      /// Locales: en, zh-Hant
      var cloudbackupPwddescription: RswiftResources.StringResource { .init(key: "cloudbackup.pwddescription", tableName: "Localizable", source: source, developmentValue: "The unlock password is used to restore cloud wallet. If you lose it, you cannot unlock cloud wallet", comment: nil) }

      /// en translation: The passwords entered twice are inconsistent, please re-enter
      ///
      /// Key: cloudbackup.pwderrortip1
      ///
      /// Locales: en, zh-Hant
      var cloudbackupPwderrortip1: RswiftResources.StringResource { .init(key: "cloudbackup.pwderrortip1", tableName: "Localizable", source: source, developmentValue: "The passwords entered twice are inconsistent, please re-enter", comment: nil) }

      /// en translation: Please enter your unlock password
      ///
      /// Key: cloudbackup.pwdtip1
      ///
      /// Locales: en, zh-Hant
      var cloudbackupPwdtip1: RswiftResources.StringResource { .init(key: "cloudbackup.pwdtip1", tableName: "Localizable", source: source, developmentValue: "Please enter your unlock password", comment: nil) }

      /// en translation: Please enter your unlock password again
      ///
      /// Key: cloudbackup.pwdtip2
      ///
      /// Locales: en, zh-Hant
      var cloudbackupPwdtip2: RswiftResources.StringResource { .init(key: "cloudbackup.pwdtip2", tableName: "Localizable", source: source, developmentValue: "Please enter your unlock password again", comment: nil) }

      /// en translation: Set unlock password
      ///
      /// Key: cloudbackup.pwdtitle
      ///
      /// Locales: en, zh-Hant
      var cloudbackupPwdtitle: RswiftResources.StringResource { .init(key: "cloudbackup.pwdtitle", tableName: "Localizable", source: source, developmentValue: "Set unlock password", comment: nil) }

      /// en translation: Accessing your wallet seed phrase for cloud backup
      ///
      /// Key: cloudbackup.seedPhrasetip
      ///
      /// Locales: en, zh-Hant
      var cloudbackupSeedPhrasetip: RswiftResources.StringResource { .init(key: "cloudbackup.seedPhrasetip", tableName: "Localizable", source: source, developmentValue: "Accessing your wallet seed phrase for cloud backup", comment: nil) }

      /// en translation: Cloud backup deleted successfully
      ///
      /// Key: cloudbackupdeleted
      ///
      /// Locales: en, zh-Hant
      var cloudbackupdeleted: RswiftResources.StringResource { .init(key: "cloudbackupdeleted", tableName: "Localizable", source: source, developmentValue: "Cloud backup deleted successfully", comment: nil) }

      /// en translation: Balance: %@
      ///
      /// Key: coin.balance
      ///
      /// Locales: en, zh-Hant
      var coinBalance: RswiftResources.StringResource1<String> { .init(key: "coin.balance", tableName: "Localizable", source: source, developmentValue: "Balance: %@", comment: nil) }

      /// en translation: %@ payment
      ///
      /// Key: coin.pay
      ///
      /// Locales: en, zh-Hant
      var coinPay: RswiftResources.StringResource1<String> { .init(key: "coin.pay", tableName: "Localizable", source: source, developmentValue: "%@ payment", comment: nil) }

      /// en translation: Coming soon
      ///
      /// Key: coming.soon
      ///
      /// Locales: en, zh-Hant
      var comingSoon: RswiftResources.StringResource { .init(key: "coming.soon", tableName: "Localizable", source: source, developmentValue: "Coming soon", comment: nil) }

      /// en translation: Submit
      ///
      /// Key: commit
      ///
      /// Locales: en, zh-Hant
      var commit: RswiftResources.StringResource { .init(key: "commit", tableName: "Localizable", source: source, developmentValue: "Submit", comment: nil) }

      /// en translation: About Company
      ///
      /// Key: company
      ///
      /// Locales: en, zh-Hant
      var company: RswiftResources.StringResource { .init(key: "company", tableName: "Localizable", source: source, developmentValue: "About Company", comment: nil) }

      /// en translation: Done
      ///
      /// Key: complate
      ///
      /// Locales: en, zh-Hant
      var complate: RswiftResources.StringResource { .init(key: "complate", tableName: "Localizable", source: source, developmentValue: "Done", comment: nil) }

      /// en translation: Comprehensive group
      ///
      /// Key: comprehensive_group
      ///
      /// Locales: en, zh-Hant
      var comprehensive_group: RswiftResources.StringResource { .init(key: "comprehensive_group", tableName: "Localizable", source: source, developmentValue: "Comprehensive group", comment: nil) }

      /// en translation: Configuration instructions
      ///
      /// Key: configuration
      ///
      /// Locales: en, zh-Hant
      var configuration: RswiftResources.StringResource { .init(key: "configuration", tableName: "Localizable", source: source, developmentValue: "Configuration instructions", comment: nil) }

      /// en translation: Use Default
      ///
      /// Key: configureTransaction.barButton.useDefault
      ///
      /// Locales: en, zh-Hant
      var configureTransactionBarButtonUseDefault: RswiftResources.StringResource { .init(key: "configureTransaction.barButton.useDefault", tableName: "Localizable", source: source, developmentValue: "Use Default", comment: nil) }

      /// en translation: Transaction Data (Optional)
      ///
      /// Key: configureTransaction.data.label.title
      ///
      /// Locales: en, zh-Hant
      var configureTransactionDataLabelTitle: RswiftResources.StringResource { .init(key: "configureTransaction.data.label.title", tableName: "Localizable", source: source, developmentValue: "Transaction Data (Optional)", comment: nil) }

      /// en translation: Gas Fee too high. Max: %@
      ///
      /// Key: configureTransaction.error.gasFeeTooHigh
      ///
      /// Locales: en, zh-Hant
      var configureTransactionErrorGasFeeTooHigh: RswiftResources.StringResource1<String> { .init(key: "configureTransaction.error.gasFeeTooHigh", tableName: "Localizable", source: source, developmentValue: "Gas Fee too high. Max: %@", comment: nil) }

      /// en translation: Gas Limit too high. Max available: %d
      ///
      /// Key: configureTransaction.error.gasLimitTooHigh
      ///
      /// Locales: en, zh-Hant
      var configureTransactionErrorGasLimitTooHigh: RswiftResources.StringResource1<Int> { .init(key: "configureTransaction.error.gasLimitTooHigh", tableName: "Localizable", source: source, developmentValue: "Gas Limit too high. Max available: %d", comment: nil) }

      /// en translation: Gas Price must be a positive number
      ///
      /// Key: configureTransaction.error.gasPriceTooLow
      ///
      /// Locales: en, zh-Hant
      var configureTransactionErrorGasPriceTooLow: RswiftResources.StringResource { .init(key: "configureTransaction.error.gasPriceTooLow", tableName: "Localizable", source: source, developmentValue: "Gas Price must be a positive number", comment: nil) }

      /// en translation: Leave the nonce empty. We'll fill it in for you
      ///
      /// Key: configureTransaction.error.leaveNonceEmpty
      ///
      /// Locales: en, zh-Hant
      var configureTransactionErrorLeaveNonceEmpty: RswiftResources.StringResource { .init(key: "configureTransaction.error.leaveNonceEmpty", tableName: "Localizable", source: source, developmentValue: "Leave the nonce empty. We'll fill it in for you", comment: nil) }

      /// en translation: Nonce must be a positive number
      ///
      /// Key: configureTransaction.error.nonceNotPositiveNumber
      ///
      /// Locales: en, zh-Hant
      var configureTransactionErrorNonceNotPositiveNumber: RswiftResources.StringResource { .init(key: "configureTransaction.error.nonceNotPositiveNumber", tableName: "Localizable", source: source, developmentValue: "Nonce must be a positive number", comment: nil) }

      /// en translation: The gas limit prevents smart contracts from consuming all your %@. We will try to calculate the gas limit automatically for you, but some smart contracts may require a custom gas limit.
      ///
      /// Key: configureTransaction.gasLimit.label.description
      ///
      /// Locales: en, zh-Hant
      var configureTransactionGasLimitLabelDescription: RswiftResources.StringResource1<String> { .init(key: "configureTransaction.gasLimit.label.description", tableName: "Localizable", source: source, developmentValue: "The gas limit prevents smart contracts from consuming all your %@. We will try to calculate the gas limit automatically for you, but some smart contracts may require a custom gas limit.", comment: nil) }

      /// en translation: Gas Limit
      ///
      /// Key: configureTransaction.gasLimit.label.title
      ///
      /// Locales: en, zh-Hant
      var configureTransactionGasLimitLabelTitle: RswiftResources.StringResource { .init(key: "configureTransaction.gasLimit.label.title", tableName: "Localizable", source: source, developmentValue: "Gas Limit", comment: nil) }

      /// en translation: Gas Price (Gwei)
      ///
      /// Key: configureTransaction.gasPriceGwei.label.title
      ///
      /// Locales: en, zh-Hant
      var configureTransactionGasPriceGweiLabelTitle: RswiftResources.StringResource { .init(key: "configureTransaction.gasPriceGwei.label.title", tableName: "Localizable", source: source, developmentValue: "Gas Price (Gwei)", comment: nil) }

      /// en translation: Gas Limit
      ///
      /// Key: configureTransaction.header.gasLimit
      ///
      /// Locales: en, zh-Hant
      var configureTransactionHeaderGasLimit: RswiftResources.StringResource { .init(key: "configureTransaction.header.gasLimit", tableName: "Localizable", source: source, developmentValue: "Gas Limit", comment: nil) }

      /// en translation: Gas Price
      ///
      /// Key: configureTransaction.header.gasPrice
      ///
      /// Locales: en, zh-Hant
      var configureTransactionHeaderGasPrice: RswiftResources.StringResource { .init(key: "configureTransaction.header.gasPrice", tableName: "Localizable", source: source, developmentValue: "Gas Price", comment: nil) }

      /// en translation: Set Speed
      ///
      /// Key: configureTransaction.navigationBar.title
      ///
      /// Locales: en, zh-Hant
      var configureTransactionNavigationBarTitle: RswiftResources.StringResource { .init(key: "configureTransaction.navigationBar.title", tableName: "Localizable", source: source, developmentValue: "Set Speed", comment: nil) }

      /// en translation: Nonce (Optional)
      ///
      /// Key: configureTransaction.nonce.label.title
      ///
      /// Locales: en, zh-Hant
      var configureTransactionNonceLabelTitle: RswiftResources.StringResource { .init(key: "configureTransaction.nonce.label.title", tableName: "Localizable", source: source, developmentValue: "Nonce (Optional)", comment: nil) }

      /// en translation: Total network fee
      ///
      /// Key: configureTransaction.totalNetworkFee.label.title
      ///
      /// Locales: en, zh-Hant
      var configureTransactionTotalNetworkFeeLabelTitle: RswiftResources.StringResource { .init(key: "configureTransaction.totalNetworkFee.label.title", tableName: "Localizable", source: source, developmentValue: "Total network fee", comment: nil) }

      /// en translation: OK
      ///
      /// Key: confirm
      ///
      /// Locales: en, zh-Hant
      var confirm: RswiftResources.StringResource { .init(key: "confirm", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Confirm forwarding content to:
      ///
      /// Key: confirmForwardingContentText
      ///
      /// Locales: en, zh-Hant
      var confirmForwardingContentText: RswiftResources.StringResource { .init(key: "confirmForwardingContentText", tableName: "Localizable", source: source, developmentValue: "Confirm forwarding content to:", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: confirmPayment.confirm.button.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentConfirmButtonTitle: RswiftResources.StringResource { .init(key: "confirmPayment.confirm.button.title", tableName: "Localizable", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Connect
      ///
      /// Key: confirmPayment.connect.button.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentConnectButtonTitle: RswiftResources.StringResource { .init(key: "confirmPayment.connect.button.title", tableName: "Localizable", source: source, developmentValue: "Connect", comment: nil) }

      /// en translation: Data
      ///
      /// Key: confirmPayment.data.label.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentDataLabelTitle: RswiftResources.StringResource { .init(key: "confirmPayment.data.label.title", tableName: "Localizable", source: source, developmentValue: "Data", comment: nil) }

      /// en translation: From
      ///
      /// Key: confirmPayment.from.label.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentFromLabelTitle: RswiftResources.StringResource { .init(key: "confirmPayment.from.label.title", tableName: "Localizable", source: source, developmentValue: "From", comment: nil) }

      /// en translation: Estimate Network Fee
      ///
      /// Key: confirmPayment.gasFee.label.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentGasFeeLabelTitle: RswiftResources.StringResource { .init(key: "confirmPayment.gasFee.label.title", tableName: "Localizable", source: source, developmentValue: "Estimate Network Fee", comment: nil) }

      /// en translation: Gas Limit
      ///
      /// Key: confirmPayment.gasLimit.label.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentGasLimitLabelTitle: RswiftResources.StringResource { .init(key: "confirmPayment.gasLimit.label.title", tableName: "Localizable", source: source, developmentValue: "Gas Limit", comment: nil) }

      /// en translation: Gas Price
      ///
      /// Key: confirmPayment.gasPrice.label.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentGasPriceLabelTitle: RswiftResources.StringResource { .init(key: "confirmPayment.gasPrice.label.title", tableName: "Localizable", source: source, developmentValue: "Gas Price", comment: nil) }

      /// en translation: %@ - WARNING. HIGH FEE.
      ///
      /// Key: confirmPayment.highFeeWarning
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentHighFeeWarning: RswiftResources.StringResource1<String> { .init(key: "confirmPayment.highFeeWarning", tableName: "Localizable", source: source, developmentValue: "%@ - WARNING. HIGH FEE.", comment: nil) }

      /// en translation: Nonce
      ///
      /// Key: confirmPayment.nonce.label.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentNonceLabelTitle: RswiftResources.StringResource { .init(key: "confirmPayment.nonce.label.title", tableName: "Localizable", source: source, developmentValue: "Nonce", comment: nil) }

      /// en translation: Reject
      ///
      /// Key: confirmPayment.reject.button.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentRejectButtonTitle: RswiftResources.StringResource { .init(key: "confirmPayment.reject.button.title", tableName: "Localizable", source: source, developmentValue: "Reject", comment: nil) }

      /// en translation: Sign
      ///
      /// Key: confirmPayment.sign.button.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentSignButtonTitle: RswiftResources.StringResource { .init(key: "confirmPayment.sign.button.title", tableName: "Localizable", source: source, developmentValue: "Sign", comment: nil) }

      /// en translation: To
      ///
      /// Key: confirmPayment.to.label.title
      ///
      /// Locales: en, zh-Hant
      var confirmPaymentToLabelTitle: RswiftResources.StringResource { .init(key: "confirmPayment.to.label.title", tableName: "Localizable", source: source, developmentValue: "To", comment: nil) }

      /// en translation: Confirm password
      ///
      /// Key: confirmPwd
      ///
      /// Locales: en, zh-Hant
      var confirmPwd: RswiftResources.StringResource { .init(key: "confirmPwd", tableName: "Localizable", source: source, developmentValue: "Confirm password", comment: nil) }

      /// en translation: Confirm signing this message:
      ///
      /// Key: confirmSignMessage
      ///
      /// Locales: en, zh-Hant
      var confirmSignMessage: RswiftResources.StringResource { .init(key: "confirmSignMessage", tableName: "Localizable", source: source, developmentValue: "Confirm signing this message:", comment: nil) }

      /// en translation: Confirm participation
      ///
      /// Key: confirm_join
      ///
      /// Locales: en, zh-Hant
      var confirm_join: RswiftResources.StringResource { .init(key: "confirm_join", tableName: "Localizable", source: source, developmentValue: "Confirm participation", comment: nil) }

      /// en translation: Consumable balance: %@
      ///
      /// Key: consumablebalance
      ///
      /// Locales: en, zh-Hant
      var consumablebalance: RswiftResources.StringResource1<String> { .init(key: "consumablebalance", tableName: "Localizable", source: source, developmentValue: "Consumable balance: %@", comment: nil) }

      /// en translation: Contacts
      ///
      /// Key: contactList
      ///
      /// Locales: en, zh-Hant
      var contactList: RswiftResources.StringResource { .init(key: "contactList", tableName: "Localizable", source: source, developmentValue: "Contacts", comment: nil) }

      /// en translation: Complaint content
      ///
      /// Key: contentofcomplaint
      ///
      /// Locales: en, zh-Hant
      var contentofcomplaint: RswiftResources.StringResource { .init(key: "contentofcomplaint", tableName: "Localizable", source: source, developmentValue: "Complaint content", comment: nil) }

      /// en translation: Contract call failed
      ///
      /// Key: contract.call.failed
      ///
      /// Locales: en, zh-Hant
      var contractCallFailed: RswiftResources.StringResource { .init(key: "contract.call.failed", tableName: "Localizable", source: source, developmentValue: "Contract call failed", comment: nil) }

      /// en translation: Contract Call
      ///
      /// Key: contractcall
      ///
      /// Locales: en, zh-Hant
      var contractcall: RswiftResources.StringResource { .init(key: "contractcall", tableName: "Localizable", source: source, developmentValue: "Contract Call", comment: nil) }

      /// en translation: Celestial Alliance Output
      ///
      /// Key: contribute_balance_detail_13
      ///
      /// Locales: en, zh-Hant
      var contribute_balance_detail_13: RswiftResources.StringResource { .init(key: "contribute_balance_detail_13", tableName: "Localizable", source: source, developmentValue: "Celestial Alliance Output", comment: nil) }

      /// en translation: Celestial Alliance Team Income
      ///
      /// Key: contribute_balance_detail_14
      ///
      /// Locales: en, zh-Hant
      var contribute_balance_detail_14: RswiftResources.StringResource { .init(key: "contribute_balance_detail_14", tableName: "Localizable", source: source, developmentValue: "Celestial Alliance Team Income", comment: nil) }

      /// en translation: Social Team Contributions
      ///
      /// Key: contribute_balance_detail_7
      ///
      /// Locales: en, zh-Hant
      var contribute_balance_detail_7: RswiftResources.StringResource { .init(key: "contribute_balance_detail_7", tableName: "Localizable", source: source, developmentValue: "Social Team Contributions", comment: nil) }

      /// en translation: Anyone can control your assets as long as they obtain your private key
      ///
      /// Key: control_assets_private_key
      ///
      /// Locales: en, zh-Hant
      var control_assets_private_key: RswiftResources.StringResource { .init(key: "control_assets_private_key", tableName: "Localizable", source: source, developmentValue: "Anyone can control your assets as long as they obtain your private key", comment: nil) }

      /// en translation: Conversations
      ///
      /// Key: conversation
      ///
      /// Locales: en, zh-Hant
      var conversation: RswiftResources.StringResource { .init(key: "conversation", tableName: "Localizable", source: source, developmentValue: "Conversations", comment: nil) }

      /// en translation: Pin conversation to top
      ///
      /// Key: conversationTop
      ///
      /// Locales: en, zh-Hant
      var conversationTop: RswiftResources.StringResource { .init(key: "conversationTop", tableName: "Localizable", source: source, developmentValue: "Pin conversation to top", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: converstations.delete
      ///
      /// Locales: en, zh-Hant
      var converstationsDelete: RswiftResources.StringResource { .init(key: "converstations.delete", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: Copied to clipboard
      ///
      /// Key: copiedToClipboard
      ///
      /// Locales: en, zh-Hant
      var copiedToClipboard: RswiftResources.StringResource { .init(key: "copiedToClipboard", tableName: "Localizable", source: source, developmentValue: "Copied to clipboard", comment: nil) }

      /// en translation: %@ copied
      ///
      /// Key: copiedToClipboard.title
      ///
      /// Locales: en, zh-Hant
      var copiedToClipboardTitle: RswiftResources.StringResource1<String> { .init(key: "copiedToClipboard.title", tableName: "Localizable", source: source, developmentValue: "%@ copied", comment: nil) }

      /// en translation: Successfully copied to the clipboard
      ///
      /// Key: copiedtoclipboard
      ///
      /// Locales: en, zh-Hant
      var copiedtoclipboard: RswiftResources.StringResource { .init(key: "copiedtoclipboard", tableName: "Localizable", source: source, developmentValue: "Successfully copied to the clipboard", comment: nil) }

      /// en translation: Copy private key
      ///
      /// Key: copy.privatekey
      ///
      /// Locales: en, zh-Hant
      var copyPrivatekey: RswiftResources.StringResource { .init(key: "copy.privatekey", tableName: "Localizable", source: source, developmentValue: "Copy private key", comment: nil) }

      /// en translation: From the end of 00 hours, 00 minutes, and 00 seconds
      ///
      /// Key: countdown
      ///
      /// Locales: en, zh-Hant
      var countdown: RswiftResources.StringResource { .init(key: "countdown", tableName: "Localizable", source: source, developmentValue: "From the end of 00 hours, 00 minutes, and 00 seconds", comment: nil) }

      /// en translation: Recommended Details(%@ persons)
      ///
      /// Key: counts
      ///
      /// Locales: en, zh-Hant
      var counts: RswiftResources.StringResource1<String> { .init(key: "counts", tableName: "Localizable", source: source, developmentValue: "Recommended Details(%@ persons)", comment: nil) }

      /// en translation: Create group...
      ///
      /// Key: creatGrouping
      ///
      /// Locales: en, zh-Hant
      var creatGrouping: RswiftResources.StringResource { .init(key: "creatGrouping", tableName: "Localizable", source: source, developmentValue: "Create group...", comment: nil) }

      /// en translation: Pull group
      ///
      /// Key: creatProGroup
      ///
      /// Locales: en, zh-Hant
      var creatProGroup: RswiftResources.StringResource { .init(key: "creatProGroup", tableName: "Localizable", source: source, developmentValue: "Pull group", comment: nil) }

      /// en translation: No friends to pull into the group
      ///
      /// Key: creatProGroupFail
      ///
      /// Locales: en, zh-Hant
      var creatProGroupFail: RswiftResources.StringResource { .init(key: "creatProGroupFail", tableName: "Localizable", source: source, developmentValue: "No friends to pull into the group", comment: nil) }

      /// en translation: Create chat room
      ///
      /// Key: createChatroom
      ///
      /// Locales: en, zh-Hant
      var createChatroom: RswiftResources.StringResource { .init(key: "createChatroom", tableName: "Localizable", source: source, developmentValue: "Create chat room", comment: nil) }

      /// en translation: Failed to create chat room
      ///
      /// Key: createChatroomFail
      ///
      /// Locales: en, zh-Hant
      var createChatroomFail: RswiftResources.StringResource { .init(key: "createChatroomFail", tableName: "Localizable", source: source, developmentValue: "Failed to create chat room", comment: nil) }

      /// en translation: Chat room created
      ///
      /// Key: createChatroomSuccess
      ///
      /// Locales: en, zh-Hant
      var createChatroomSuccess: RswiftResources.StringResource { .init(key: "createChatroomSuccess", tableName: "Localizable", source: source, developmentValue: "Chat room created", comment: nil) }

      /// en translation: Create chatroom...
      ///
      /// Key: createChatrooming
      ///
      /// Locales: en, zh-Hant
      var createChatrooming: RswiftResources.StringResource { .init(key: "createChatrooming", tableName: "Localizable", source: source, developmentValue: "Create chatroom...", comment: nil) }

      /// en translation: Create group
      ///
      /// Key: createGroup
      ///
      /// Locales: en, zh-Hant
      var createGroup: RswiftResources.StringResource { .init(key: "createGroup", tableName: "Localizable", source: source, developmentValue: "Create group", comment: nil) }

      /// en translation: Failed to create a group
      ///
      /// Key: createGroupFail
      ///
      /// Locales: en, zh-Hant
      var createGroupFail: RswiftResources.StringResource { .init(key: "createGroupFail", tableName: "Localizable", source: source, developmentValue: "Failed to create a group", comment: nil) }

      /// en translation: Group created
      ///
      /// Key: createGroupSucess
      ///
      /// Locales: en, zh-Hant
      var createGroupSucess: RswiftResources.StringResource { .init(key: "createGroupSucess", tableName: "Localizable", source: source, developmentValue: "Group created", comment: nil) }

      /// en translation: Create
      ///
      /// Key: create_new
      ///
      /// Locales: en, zh-Hant
      var create_new: RswiftResources.StringResource { .init(key: "create_new", tableName: "Localizable", source: source, developmentValue: "Create", comment: nil) }

      /// en translation: Credit contract
      ///
      /// Key: credit_contract
      ///
      /// Locales: en, zh-Hant
      var credit_contract: RswiftResources.StringResource { .init(key: "credit_contract", tableName: "Localizable", source: source, developmentValue: "Credit contract", comment: nil) }

      /// en translation: Current SDK Version
      ///
      /// Key: curSDKVer
      ///
      /// Locales: en, zh-Hant
      var curSDKVer: RswiftResources.StringResource { .init(key: "curSDKVer", tableName: "Localizable", source: source, developmentValue: "Current SDK Version", comment: nil) }

      /// en translation: Change Fiat Currency
      ///
      /// Key: currency.navigationTitle
      ///
      /// Locales: en, zh-Hant
      var currencyNavigationTitle: RswiftResources.StringResource { .init(key: "currency.navigationTitle", tableName: "Localizable", source: source, developmentValue: "Change Fiat Currency", comment: nil) }

      /// en translation: Current account
      ///
      /// Key: current_account
      ///
      /// Locales: en, zh-Hant
      var current_account: RswiftResources.StringResource { .init(key: "current_account", tableName: "Localizable", source: source, developmentValue: "Current account", comment: nil) }

      /// en translation: Current progress：
      ///
      /// Key: current_progress
      ///
      /// Locales: en, zh-Hant
      var current_progress: RswiftResources.StringResource { .init(key: "current_progress", tableName: "Localizable", source: source, developmentValue: "Current progress：", comment: nil) }

      /// en translation: Current wallet
      ///
      /// Key: current_wallet
      ///
      /// Locales: en, zh-Hant
      var current_wallet: RswiftResources.StringResource { .init(key: "current_wallet", tableName: "Localizable", source: source, developmentValue: "Current wallet", comment: nil) }

      /// en translation: The current address is already the main wallet
      ///
      /// Key: currentaddressismainwallet
      ///
      /// Locales: en, zh-Hant
      var currentaddressismainwallet: RswiftResources.StringResource { .init(key: "currentaddressismainwallet", tableName: "Localizable", source: source, developmentValue: "The current address is already the main wallet", comment: nil) }

      /// en translation: Current Holding
      ///
      /// Key: currently_held
      ///
      /// Locales: en, zh-Hant
      var currently_held: RswiftResources.StringResource { .init(key: "currently_held", tableName: "Localizable", source: source, developmentValue: "Current Holding", comment: nil) }

      /// en translation: The current wallet has undergone cloud backup
      ///
      /// Key: currentwalletbackup
      ///
      /// Locales: en, zh-Hant
      var currentwalletbackup: RswiftResources.StringResource { .init(key: "currentwalletbackup", tableName: "Localizable", source: source, developmentValue: "The current wallet has undergone cloud backup", comment: nil) }

      /// en translation: Custom APPKey
      ///
      /// Key: customAppkey
      ///
      /// Locales: en, zh-Hant
      var customAppkey: RswiftResources.StringResource { .init(key: "customAppkey", tableName: "Localizable", source: source, developmentValue: "Custom APPKey", comment: nil) }

      /// en translation: Search for Network
      ///
      /// Key: customRPC.browse.search.placeholder
      ///
      /// Locales: en, zh-Hant
      var customRPCBrowseSearchPlaceholder: RswiftResources.StringResource { .init(key: "customRPC.browse.search.placeholder", tableName: "Localizable", source: source, developmentValue: "Search for Network", comment: nil) }

      /// en translation: Browse
      ///
      /// Key: customRPC.overall.tab.browse
      ///
      /// Locales: en, zh-Hant
      var customRPCOverallTabBrowse: RswiftResources.StringResource { .init(key: "customRPC.overall.tab.browse", tableName: "Localizable", source: source, developmentValue: "Browse", comment: nil) }

      /// en translation: Enter
      ///
      /// Key: customRPC.overall.tab.manual
      ///
      /// Locales: en, zh-Hant
      var customRPCOverallTabManual: RswiftResources.StringResource { .init(key: "customRPC.overall.tab.manual", tableName: "Localizable", source: source, developmentValue: "Enter", comment: nil) }

      /// en translation: Use custom server?
      ///
      /// Key: customServerPrompt
      ///
      /// Locales: en, zh-Hant
      var customServerPrompt: RswiftResources.StringResource { .init(key: "customServerPrompt", tableName: "Localizable", source: source, developmentValue: "Use custom server?", comment: nil) }

      /// en translation: My History
      ///
      /// Key: dappBrowser.browserHistory
      ///
      /// Locales: en, zh-Hant
      var dappBrowserBrowserHistory: RswiftResources.StringResource { .init(key: "dappBrowser.browserHistory", tableName: "Localizable", source: source, developmentValue: "My History", comment: nil) }

      /// en translation: Clear History?
      ///
      /// Key: dappBrowser.clearHistory
      ///
      /// Locales: en, zh-Hant
      var dappBrowserClearHistory: RswiftResources.StringResource { .init(key: "dappBrowser.clearHistory", tableName: "Localizable", source: source, developmentValue: "Clear History?", comment: nil) }

      /// en translation: Are you sure you want to clear your history?
      ///
      /// Key: dappBrowser.clearHistory.prompt
      ///
      /// Locales: en, zh-Hant
      var dappBrowserClearHistoryPrompt: RswiftResources.StringResource { .init(key: "dappBrowser.clearHistory.prompt", tableName: "Localizable", source: source, developmentValue: "Are you sure you want to clear your history?", comment: nil) }

      /// en translation: Remove Bookmark?
      ///
      /// Key: dappBrowser.clearMyDapps
      ///
      /// Locales: en, zh-Hant
      var dappBrowserClearMyDapps: RswiftResources.StringResource { .init(key: "dappBrowser.clearMyDapps", tableName: "Localizable", source: source, developmentValue: "Remove Bookmark?", comment: nil) }

      /// en translation: Edit Bookmark
      ///
      /// Key: dappBrowser.myDapps.edit
      ///
      /// Locales: en, zh-Hant
      var dappBrowserMyDappsEdit: RswiftResources.StringResource { .init(key: "dappBrowser.myDapps.edit", tableName: "Localizable", source: source, developmentValue: "Edit Bookmark", comment: nil) }

      /// en translation: Title
      ///
      /// Key: dappBrowser.myDapps.edit.title.label
      ///
      /// Locales: en, zh-Hant
      var dappBrowserMyDappsEditTitleLabel: RswiftResources.StringResource { .init(key: "dappBrowser.myDapps.edit.title.label", tableName: "Localizable", source: source, developmentValue: "Title", comment: nil) }

      /// en translation: Address
      ///
      /// Key: dappBrowser.myDapps.edit.url.label
      ///
      /// Locales: en, zh-Hant
      var dappBrowserMyDappsEditUrlLabel: RswiftResources.StringResource { .init(key: "dappBrowser.myDapps.edit.url.label", tableName: "Localizable", source: source, developmentValue: "Address", comment: nil) }

      /// en translation: You have no bookmarks displayed yet. Start by surfing the browser.
      ///
      /// Key: dappBrowser.myDapps.empty
      ///
      /// Locales: en, zh-Hant
      var dappBrowserMyDappsEmpty: RswiftResources.StringResource { .init(key: "dappBrowser.myDapps.empty", tableName: "Localizable", source: source, developmentValue: "You have no bookmarks displayed yet. Start by surfing the browser.", comment: nil) }

      /// en translation: Connected to: %@
      ///
      /// Key: dappBrowser.switchServer
      ///
      /// Locales: en, zh-Hant
      var dappBrowserSwitchServer: RswiftResources.StringResource1<String> { .init(key: "dappBrowser.switchServer", tableName: "Localizable", source: source, developmentValue: "Connected to: %@", comment: nil) }

      /// en translation: HH:mm
      ///
      /// Key: darntime
      ///
      /// Locales: en, zh-Hant
      var darntime: RswiftResources.StringResource { .init(key: "darntime", tableName: "Localizable", source: source, developmentValue: "HH:mm", comment: nil) }

      /// en translation: Data type error
      ///
      /// Key: datatypeerror
      ///
      /// Locales: en, zh-Hant
      var datatypeerror: RswiftResources.StringResource { .init(key: "datatypeerror", tableName: "Localizable", source: source, developmentValue: "Data type error", comment: nil) }

      /// en translation: day
      ///
      /// Key: date
      ///
      /// Locales: en, zh-Hant
      var date: RswiftResources.StringResource { .init(key: "date", tableName: "Localizable", source: source, developmentValue: "day", comment: nil) }

      /// en translation: %ldDay
      ///
      /// Key: day
      ///
      /// Locales: en, zh-Hant
      var day: RswiftResources.StringResource1<Int> { .init(key: "day", tableName: "Localizable", source: source, developmentValue: "%ldDay", comment: nil) }

      /// en translation: Today's dividend
      ///
      /// Key: dayDevToken
      ///
      /// Locales: en, zh-Hant
      var dayDevToken: RswiftResources.StringResource { .init(key: "dayDevToken", tableName: "Localizable", source: source, developmentValue: "Today's dividend", comment: nil) }

      /// en translation: %Ld days ago
      ///
      /// Key: dayago
      ///
      /// Locales: en, zh-Hant
      var dayago: RswiftResources.StringResource1<Int> { .init(key: "dayago", tableName: "Localizable", source: source, developmentValue: "%Ld days ago", comment: nil) }

      /// en translation: Processing...
      ///
      /// Key: dealinging
      ///
      /// Locales: en, zh-Hant
      var dealinging: RswiftResources.StringResource { .init(key: "dealinging", tableName: "Localizable", source: source, developmentValue: "Processing...", comment: nil) }

      /// en translation: Clear text private key
      ///
      /// Key: decode.privatekey
      ///
      /// Locales: en, zh-Hant
      var decodePrivatekey: RswiftResources.StringResource { .init(key: "decode.privatekey", tableName: "Localizable", source: source, developmentValue: "Clear text private key", comment: nil) }

      /// en translation: Default
      ///
      /// Key: default
      ///
      /// Locales: en, zh-Hant
      var `default`: RswiftResources.StringResource { .init(key: "default", tableName: "Localizable", source: source, developmentValue: "Default", comment: nil) }

      /// en translation: Delete session when exiting group
      ///
      /// Key: delMsgWhenLeaveGroup
      ///
      /// Locales: en, zh-Hant
      var delMsgWhenLeaveGroup: RswiftResources.StringResource { .init(key: "delMsgWhenLeaveGroup", tableName: "Localizable", source: source, developmentValue: "Delete session when exiting group", comment: nil) }

      /// en translation: Delete friend...
      ///
      /// Key: deleteContacting
      ///
      /// Locales: en, zh-Hant
      var deleteContacting: RswiftResources.StringResource { .init(key: "deleteContacting", tableName: "Localizable", source: source, developmentValue: "Delete friend...", comment: nil) }

      /// en translation: Delete conversation
      ///
      /// Key: deleteConversation
      ///
      /// Locales: en, zh-Hant
      var deleteConversation: RswiftResources.StringResource { .init(key: "deleteConversation", tableName: "Localizable", source: source, developmentValue: "Delete conversation", comment: nil) }

      /// en translation: Decline
      ///
      /// Key: deletePrompt
      ///
      /// Locales: en, zh-Hant
      var deletePrompt: RswiftResources.StringResource { .init(key: "deletePrompt", tableName: "Localizable", source: source, developmentValue: "Decline", comment: nil) }

      /// en translation: Delete shared file...
      ///
      /// Key: deleteShareFileing
      ///
      /// Locales: en, zh-Hant
      var deleteShareFileing: RswiftResources.StringResource { .init(key: "deleteShareFileing", tableName: "Localizable", source: source, developmentValue: "Delete shared file...", comment: nil) }

      /// en translation: Your have deleted friend %@
      ///
      /// Key: deletedContact
      ///
      /// Locales: en, zh-Hant
      var deletedContact: RswiftResources.StringResource1<String> { .init(key: "deletedContact", tableName: "Localizable", source: source, developmentValue: "Your have deleted friend %@", comment: nil) }

      /// en translation: Demo has already bound the following environment settings. If you need to modify the configuration, double-click ‘%@’ and restart the App
      ///
      /// Key: demobindingPrompt
      ///
      /// Locales: en, zh-Hant
      var demobindingPrompt: RswiftResources.StringResource1<String> { .init(key: "demobindingPrompt", tableName: "Localizable", source: source, developmentValue: "Demo has already bound the following environment settings. If you need to modify the configuration, double-click ‘%@’ and restart the App", comment: nil) }

      /// en translation: Available: %@ TOX
      ///
      /// Key: depositBalance
      ///
      /// Locales: en, zh-Hant
      var depositBalance: RswiftResources.StringResource1<String> { .init(key: "depositBalance", tableName: "Localizable", source: source, developmentValue: "Available: %@ TOX", comment: nil) }

      /// en translation: quantity
      ///
      /// Key: depositCount
      ///
      /// Locales: en, zh-Hant
      var depositCount: RswiftResources.StringResource { .init(key: "depositCount", tableName: "Localizable", source: source, developmentValue: "quantity", comment: nil) }

      /// en translation: Please enter the cross chain quantity
      ///
      /// Key: depositCrossChain
      ///
      /// Locales: en, zh-Hant
      var depositCrossChain: RswiftResources.StringResource { .init(key: "depositCrossChain", tableName: "Localizable", source: source, developmentValue: "Please enter the cross chain quantity", comment: nil) }

      /// en translation: Transfer in
      ///
      /// Key: depositCrossChainBtn
      ///
      /// Locales: en, zh-Hant
      var depositCrossChainBtn: RswiftResources.StringResource { .init(key: "depositCrossChainBtn", tableName: "Localizable", source: source, developmentValue: "Transfer in", comment: nil) }

      /// en translation: Only BSC to Match is supported, and after cross chain transfer, it will be transferred to the Match wallet
      ///
      /// Key: depositCrossDesc
      ///
      /// Locales: en, zh-Hant
      var depositCrossDesc: RswiftResources.StringResource { .init(key: "depositCrossDesc", tableName: "Localizable", source: source, developmentValue: "Only BSC to Match is supported, and after cross chain transfer, it will be transferred to the Match wallet", comment: nil) }

      /// en translation: Margin description: 
      ///
      /// Key: deposit_description
      ///
      /// Locales: en, zh-Hant
      var deposit_description: RswiftResources.StringResource { .init(key: "deposit_description", tableName: "Localizable", source: source, developmentValue: "Margin description: ", comment: nil) }

      /// en translation: Payments for different city levels are as follows：
      ///
      /// Key: deposit_rule
      ///
      /// Locales: en, zh-Hant
      var deposit_rule: RswiftResources.StringResource { .init(key: "deposit_rule", tableName: "Localizable", source: source, developmentValue: "Payments for different city levels are as follows：", comment: nil) }

      /// en translation: For refund rules, please refer to Pioneer Plan - Deposit Refund illustrate
      ///
      /// Key: deposit_rule_four
      ///
      /// Locales: en, zh-Hant
      var deposit_rule_four: RswiftResources.StringResource { .init(key: "deposit_rule_four", tableName: "Localizable", source: source, developmentValue: "For refund rules, please refer to Pioneer Plan - Deposit Refund illustrate", comment: nil) }

      /// en translation: First-tier cities: 100,000 TOX deposit is required
      ///
      /// Key: deposit_rule_one
      ///
      /// Locales: en, zh-Hant
      var deposit_rule_one: RswiftResources.StringResource { .init(key: "deposit_rule_one", tableName: "Localizable", source: source, developmentValue: "First-tier cities: 100,000 TOX deposit is required", comment: nil) }

      /// en translation: Third-tier cities: 40,000 TOX is required as deposit
      ///
      /// Key: deposit_rule_three
      ///
      /// Locales: en, zh-Hant
      var deposit_rule_three: RswiftResources.StringResource { .init(key: "deposit_rule_three", tableName: "Localizable", source: source, developmentValue: "Third-tier cities: 40,000 TOX is required as deposit", comment: nil) }

      /// en translation: Second-tier cities: 60,000 TOX deposit is required
      ///
      /// Key: deposit_rule_two
      ///
      /// Locales: en, zh-Hant
      var deposit_rule_two: RswiftResources.StringResource { .init(key: "deposit_rule_two", tableName: "Localizable", source: source, developmentValue: "Second-tier cities: 60,000 TOX deposit is required", comment: nil) }

      /// en translation: Submitted successfully
      ///
      /// Key: deposit_submitted_successfully
      ///
      /// Locales: en, zh-Hant
      var deposit_submitted_successfully: RswiftResources.StringResource { .init(key: "deposit_submitted_successfully", tableName: "Localizable", source: source, developmentValue: "Submitted successfully", comment: nil) }

      /// en translation: Saved into the current wallet
      ///
      /// Key: depositedincurrentwallet
      ///
      /// Locales: en, zh-Hant
      var depositedincurrentwallet: RswiftResources.StringResource { .init(key: "depositedincurrentwallet", tableName: "Localizable", source: source, developmentValue: "Saved into the current wallet", comment: nil) }

      /// en translation: Description
      ///
      /// Key: description
      ///
      /// Locales: en, zh-Hant
      var description: RswiftResources.StringResource { .init(key: "description", tableName: "Localizable", source: source, developmentValue: "Description", comment: nil) }

      /// en translation: Disband group
      ///
      /// Key: destoryGroup
      ///
      /// Locales: en, zh-Hant
      var destoryGroup: RswiftResources.StringResource { .init(key: "destoryGroup", tableName: "Localizable", source: source, developmentValue: "Disband group", comment: nil) }

      /// en translation: Disband chat room
      ///
      /// Key: destroyChatroom
      ///
      /// Locales: en, zh-Hant
      var destroyChatroom: RswiftResources.StringResource { .init(key: "destroyChatroom", tableName: "Localizable", source: source, developmentValue: "Disband chat room", comment: nil) }

      /// en translation: Disband group...
      ///
      /// Key: destroyGrouping
      ///
      /// Locales: en, zh-Hant
      var destroyGrouping: RswiftResources.StringResource { .init(key: "destroyGrouping", tableName: "Localizable", source: source, developmentValue: "Disband group...", comment: nil) }

      /// en translation: The MAT details can be viewed in My Wallet, there may be a delay in the distribution of rewards, please be patient
      ///
      /// Key: details_viewed_delay_patient
      ///
      /// Locales: en, zh-Hant
      var details_viewed_delay_patient: RswiftResources.StringResource { .init(key: "details_viewed_delay_patient", tableName: "Localizable", source: source, developmentValue: "The MAT details can be viewed in My Wallet, there may be a delay in the distribution of rewards, please be patient", comment: nil) }

      /// en translation: Detect Automatically
      ///
      /// Key: detecting.serverAutomatically
      ///
      /// Locales: en, zh-Hant
      var detectingServerAutomatically: RswiftResources.StringResource { .init(key: "detecting.serverAutomatically", tableName: "Localizable", source: source, developmentValue: "Detect Automatically", comment: nil) }

      /// en translation: Auto
      ///
      /// Key: detecting.serverAutomatically.buttonTitle
      ///
      /// Locales: en, zh-Hant
      var detectingServerAutomaticallyButtonTitle: RswiftResources.StringResource { .init(key: "detecting.serverAutomatically.buttonTitle", tableName: "Localizable", source: source, developmentValue: "Auto", comment: nil) }

      /// en translation: Detecting token type…
      ///
      /// Key: detecting.token.type.title
      ///
      /// Locales: en, zh-Hant
      var detectingTokenTypeTitle: RswiftResources.StringResource { .init(key: "detecting.token.type.title", tableName: "Localizable", source: source, developmentValue: "Detecting token type…", comment: nil) }

      /// en translation: Developer Services
      ///
      /// Key: developerService
      ///
      /// Locales: en, zh-Hant
      var developerService: RswiftResources.StringResource { .init(key: "developerService", tableName: "Localizable", source: source, developmentValue: "Developer Services", comment: nil) }

      /// en translation: Login device list
      ///
      /// Key: deviceList
      ///
      /// Locales: en, zh-Hant
      var deviceList: RswiftResources.StringResource { .init(key: "deviceList", tableName: "Localizable", source: source, developmentValue: "Login device list", comment: nil) }

      /// en translation: The limit on logged-in devices has been reached.
      ///
      /// Key: devicesExceedLimit
      ///
      /// Locales: en, zh-Hant
      var devicesExceedLimit: RswiftResources.StringResource { .init(key: "devicesExceedLimit", tableName: "Localizable", source: source, developmentValue: "The limit on logged-in devices has been reached.", comment: nil) }

      /// en translation: Multi-Device Management
      ///
      /// Key: devicesManager
      ///
      /// Locales: en, zh-Hant
      var devicesManager: RswiftResources.StringResource { .init(key: "devicesManager", tableName: "Localizable", source: source, developmentValue: "Multi-Device Management", comment: nil) }

      /// en translation: Device time error
      ///
      /// Key: devicetimeerror
      ///
      /// Locales: en, zh-Hant
      var devicetimeerror: RswiftResources.StringResource { .init(key: "devicetimeerror", tableName: "Localizable", source: source, developmentValue: "Device time error", comment: nil) }

      /// en translation: Point
      ///
      /// Key: dian
      ///
      /// Locales: en, zh-Hant
      var dian: RswiftResources.StringResource { .init(key: "dian", tableName: "Localizable", source: source, developmentValue: "Point", comment: nil) }

      /// en translation: Total authentication fee:
      ///
      /// Key: did.authention.allcost
      ///
      /// Locales: en, zh-Hant
      var didAuthentionAllcost: RswiftResources.StringResource { .init(key: "did.authention.allcost", tableName: "Localizable", source: source, developmentValue: "Total authentication fee:", comment: nil) }

      /// en translation: The current chain is a required chain. In addition to the current chain, other chains can be selected and SBT data can be synchronized. However, after the current chain initiates a SBT authentication, it cannot be initiated again, that is, it cannot be synchronized to other chains or the identity information of SBT can be changed
      ///
      /// Key: did.authention.description
      ///
      /// Locales: en, zh-Hant
      var didAuthentionDescription: RswiftResources.StringResource { .init(key: "did.authention.description", tableName: "Localizable", source: source, developmentValue: "The current chain is a required chain. In addition to the current chain, other chains can be selected and SBT data can be synchronized. However, after the current chain initiates a SBT authentication, it cannot be initiated again, that is, it cannot be synchronized to other chains or the identity information of SBT can be changed", comment: nil) }

      /// en translation: Authentication failed!
      ///
      /// Key: did.authention.failed
      ///
      /// Locales: en, zh-Hant
      var didAuthentionFailed: RswiftResources.StringResource { .init(key: "did.authention.failed", tableName: "Localizable", source: source, developmentValue: "Authentication failed!", comment: nil) }

      /// en translation: Select authentication chain
      ///
      /// Key: did.authention.subtitle
      ///
      /// Locales: en, zh-Hant
      var didAuthentionSubtitle: RswiftResources.StringResource { .init(key: "did.authention.subtitle", tableName: "Localizable", source: source, developmentValue: "Select authentication chain", comment: nil) }

      /// en translation: Authentication successful!
      ///
      /// Key: did.authention.success
      ///
      /// Locales: en, zh-Hant
      var didAuthentionSuccess: RswiftResources.StringResource { .init(key: "did.authention.success", tableName: "Localizable", source: source, developmentValue: "Authentication successful!", comment: nil) }

      /// en translation: Authenticating...
      ///
      /// Key: did.inauthention
      ///
      /// Locales: en, zh-Hant
      var didInauthention: RswiftResources.StringResource { .init(key: "did.inauthention", tableName: "Localizable", source: source, developmentValue: "Authenticating...", comment: nil) }

      /// en translation: Currently INTO SBT only supports user authentication in Chinese Mainland, please wait for users in other regions
      ///
      /// Key: did.input.description
      ///
      /// Locales: en, zh-Hant
      var didInputDescription: RswiftResources.StringResource { .init(key: "did.input.description", tableName: "Localizable", source: source, developmentValue: "Currently INTO SBT only supports user authentication in Chinese Mainland, please wait for users in other regions", comment: nil) }

      /// en translation: ID number
      ///
      /// Key: did.input.id
      ///
      /// Locales: en, zh-Hant
      var didInputId: RswiftResources.StringResource { .init(key: "did.input.id", tableName: "Localizable", source: source, developmentValue: "ID number", comment: nil) }

      /// en translation: Please fill in your real ID number number
      ///
      /// Key: did.input.idtip
      ///
      /// Locales: en, zh-Hant
      var didInputIdtip: RswiftResources.StringResource { .init(key: "did.input.idtip", tableName: "Localizable", source: source, developmentValue: "Please fill in your real ID number number", comment: nil) }

      /// en translation: Name
      ///
      /// Key: did.input.name
      ///
      /// Locales: en, zh-Hant
      var didInputName: RswiftResources.StringResource { .init(key: "did.input.name", tableName: "Localizable", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: Please fill in your real name
      ///
      /// Key: did.input.nametip
      ///
      /// Locales: en, zh-Hant
      var didInputNametip: RswiftResources.StringResource { .init(key: "did.input.nametip", tableName: "Localizable", source: source, developmentValue: "Please fill in your real name", comment: nil) }

      /// en translation: Fill in identity information
      ///
      /// Key: did.input.subtitle
      ///
      /// Locales: en, zh-Hant
      var didInputSubtitle: RswiftResources.StringResource { .init(key: "did.input.subtitle", tableName: "Localizable", source: source, developmentValue: "Fill in identity information", comment: nil) }

      /// en translation: SBT
      ///
      /// Key: did.tab.name
      ///
      /// Locales: en, zh-Hant
      var didTabName: RswiftResources.StringResource { .init(key: "did.tab.name", tableName: "Localizable", source: source, developmentValue: "SBT", comment: nil) }

      /// en translation: Digital red envelope
      ///
      /// Key: digitalredpackage
      ///
      /// Locales: en, zh-Hant
      var digitalredpackage: RswiftResources.StringResource { .init(key: "digitalredpackage", tableName: "Localizable", source: source, developmentValue: "Digital red envelope", comment: nil) }

      /// en translation: Users can join the group directly
      ///
      /// Key: directJoin
      ///
      /// Locales: en, zh-Hant
      var directJoin: RswiftResources.StringResource { .init(key: "directJoin", tableName: "Localizable", source: source, developmentValue: "Users can join the group directly", comment: nil) }

      /// en translation: Disagree
      ///
      /// Key: disagree
      ///
      /// Locales: en, zh-Hant
      var disagree: RswiftResources.StringResource { .init(key: "disagree", tableName: "Localizable", source: source, developmentValue: "Disagree", comment: nil) }

      /// en translation: If you do not agree to the agreement, you will not be able to continue using the App
      ///
      /// Key: disagree_user_genner_protocol_desc
      ///
      /// Locales: en, zh-Hant
      var disagree_user_genner_protocol_desc: RswiftResources.StringResource { .init(key: "disagree_user_genner_protocol_desc", tableName: "Localizable", source: source, developmentValue: "If you do not agree to the agreement, you will not be able to continue using the App", comment: nil) }

      /// en translation: Discord
      ///
      /// Key: discord
      ///
      /// Locales: en, zh-Hant
      var discord: RswiftResources.StringResource { .init(key: "discord", tableName: "Localizable", source: source, developmentValue: "Discord", comment: nil) }

      /// en translation: Discover
      ///
      /// Key: discover
      ///
      /// Locales: en, zh-Hant
      var discover: RswiftResources.StringResource { .init(key: "discover", tableName: "Localizable", source: source, developmentValue: "Discover", comment: nil) }

      /// en translation: Discover Dapps
      ///
      /// Key: discoverDappsButton.imageLabel
      ///
      /// Locales: en, zh-Hant
      var discoverDappsButtonImageLabel: RswiftResources.StringResource { .init(key: "discoverDappsButton.imageLabel", tableName: "Localizable", source: source, developmentValue: "Discover Dapps", comment: nil) }

      /// en translation: Income to be collected: %@ TOX
      ///
      /// Key: dividends_collected
      ///
      /// Locales: en, zh-Hant
      var dividends_collected: RswiftResources.StringResource1<String> { .init(key: "dividends_collected", tableName: "Localizable", source: source, developmentValue: "Income to be collected: %@ TOX", comment: nil) }

      /// en translation: Not yet open
      ///
      /// Key: dividends_open_not
      ///
      /// Locales: en, zh-Hant
      var dividends_open_not: RswiftResources.StringResource { .init(key: "dividends_open_not", tableName: "Localizable", source: source, developmentValue: "Not yet open", comment: nil) }

      /// en translation: Dividends received: %@ TOX
      ///
      /// Key: dividends_received
      ///
      /// Locales: en, zh-Hant
      var dividends_received: RswiftResources.StringResource1<String> { .init(key: "dividends_received", tableName: "Localizable", source: source, developmentValue: "Dividends received: %@ TOX", comment: nil) }

      /// en translation: Get server DNS verification
      ///
      /// Key: dnsCheck
      ///
      /// Locales: en, zh-Hant
      var dnsCheck: RswiftResources.StringResource { .init(key: "dnsCheck", tableName: "Localizable", source: source, developmentValue: "Get server DNS verification", comment: nil) }

      /// en translation: Scan QR Code with Camera
      ///
      /// Key: donate.shortcuts.camera
      ///
      /// Locales: en, zh-Hant
      var donateShortcutsCamera: RswiftResources.StringResource { .init(key: "donate.shortcuts.camera", tableName: "Localizable", source: source, developmentValue: "Scan QR Code with Camera", comment: nil) }

      /// en translation: Show Wallet QR Code
      ///
      /// Key: donate.shortcuts.walletQrCode
      ///
      /// Locales: en, zh-Hant
      var donateShortcutsWalletQrCode: RswiftResources.StringResource { .init(key: "donate.shortcuts.walletQrCode", tableName: "Localizable", source: source, developmentValue: "Show Wallet QR Code", comment: nil) }

      /// en translation: Done(%@)
      ///
      /// Key: doneing
      ///
      /// Locales: en, zh-Hant
      var doneing: RswiftResources.StringResource1<String> { .init(key: "doneing", tableName: "Localizable", source: source, developmentValue: "Done(%@)", comment: nil) }

      /// en translation: Done(0)
      ///
      /// Key: donestart
      ///
      /// Locales: en, zh-Hant
      var donestart: RswiftResources.StringResource { .init(key: "donestart", tableName: "Localizable", source: source, developmentValue: "Done(0)", comment: nil) }

      /// en translation: Downgrade
      ///
      /// Key: downRight
      ///
      /// Locales: en, zh-Hant
      var downRight: RswiftResources.StringResource { .init(key: "downRight", tableName: "Localizable", source: source, developmentValue: "Downgrade", comment: nil) }

      /// en translation: Downgrade to member...
      ///
      /// Key: downRoleAdmining
      ///
      /// Locales: en, zh-Hant
      var downRoleAdmining: RswiftResources.StringResource { .init(key: "downRoleAdmining", tableName: "Localizable", source: source, developmentValue: "Downgrade to member...", comment: nil) }

      /// en translation: Download
      ///
      /// Key: download
      ///
      /// Locales: en, zh-Hant
      var download: RswiftResources.StringResource { .init(key: "download", tableName: "Localizable", source: source, developmentValue: "Download", comment: nil) }

      /// en translation: First download the original image
      ///
      /// Key: downloadImageFirst
      ///
      /// Locales: en, zh-Hant
      var downloadImageFirst: RswiftResources.StringResource { .init(key: "downloadImageFirst", tableName: "Localizable", source: source, developmentValue: "First download the original image", comment: nil) }

      /// en translation: Downloading shared file...
      ///
      /// Key: downloadingShareFileing
      ///
      /// Locales: en, zh-Hant
      var downloadingShareFileing: RswiftResources.StringResource { .init(key: "downloadingShareFileing", tableName: "Localizable", source: source, developmentValue: "Downloading shared file...", comment: nil) }

      /// en translation: Failed to download shared files
      ///
      /// Key: downloadsharedFileFial
      ///
      /// Locales: en, zh-Hant
      var downloadsharedFileFial: RswiftResources.StringResource { .init(key: "downloadsharedFileFial", tableName: "Localizable", source: source, developmentValue: "Failed to download shared files", comment: nil) }

      /// en translation: Dropdown refresh
      ///
      /// Key: dropRefresh
      ///
      /// Locales: en, zh-Hant
      var dropRefresh: RswiftResources.StringResource { .init(key: "dropRefresh", tableName: "Localizable", source: source, developmentValue: "Dropdown refresh", comment: nil) }

      /// en translation: [Animoji]
      ///
      /// Key: dynamic_expression
      ///
      /// Locales: en, zh-Hant
      var dynamic_expression: RswiftResources.StringResource { .init(key: "dynamic_expression", tableName: "Localizable", source: source, developmentValue: "[Animoji]", comment: nil) }

      /// en translation: early bird round
      ///
      /// Key: early_bird
      ///
      /// Locales: en, zh-Hant
      var early_bird: RswiftResources.StringResource { .init(key: "early_bird", tableName: "Localizable", source: source, developmentValue: "early bird round", comment: nil) }

      /// en translation: You received an unknown message for a new version
      ///
      /// Key: ease_converstaion_custom_msg
      ///
      /// Locales: en, zh-Hant
      var ease_converstaion_custom_msg: RswiftResources.StringResource { .init(key: "ease_converstaion_custom_msg", tableName: "Localizable", source: source, developmentValue: "You received an unknown message for a new version", comment: nil) }

      /// en translation: Custom message
      ///
      /// Key: ease_converstaion_msg
      ///
      /// Locales: en, zh-Hant
      var ease_converstaion_msg: RswiftResources.StringResource { .init(key: "ease_converstaion_msg", tableName: "Localizable", source: source, developmentValue: "Custom message", comment: nil) }

      /// en translation: Edit
      ///
      /// Key: editButton.title
      ///
      /// Locales: en, zh-Hant
      var editButtonTitle: RswiftResources.StringResource { .init(key: "editButton.title", tableName: "Localizable", source: source, developmentValue: "Edit", comment: nil) }

      /// en translation: Chain ID already exists
      ///
      /// Key: editCustomRPC.chainID.error.duplicate
      ///
      /// Locales: en, zh-Hant
      var editCustomRPCChainIDErrorDuplicate: RswiftResources.StringResource { .init(key: "editCustomRPC.chainID.error.duplicate", tableName: "Localizable", source: source, developmentValue: "Chain ID already exists", comment: nil) }

      /// en translation: Edit Custom RPC Network
      ///
      /// Key: editCustomRPC.navigation.title
      ///
      /// Locales: en, zh-Hant
      var editCustomRPCNavigationTitle: RswiftResources.StringResource { .init(key: "editCustomRPC.navigation.title", tableName: "Localizable", source: source, developmentValue: "Edit Custom RPC Network", comment: nil) }

      /// en translation: Save Network
      ///
      /// Key: editCustomRPC.saveButton.title
      ///
      /// Locales: en, zh-Hant
      var editCustomRPCSaveButtonTitle: RswiftResources.StringResource { .init(key: "editCustomRPC.saveButton.title", tableName: "Localizable", source: source, developmentValue: "Save Network", comment: nil) }

      /// en translation: Edit the group intro
      ///
      /// Key: editGroupDescription
      ///
      /// Locales: en, zh-Hant
      var editGroupDescription: RswiftResources.StringResource { .init(key: "editGroupDescription", tableName: "Localizable", source: source, developmentValue: "Edit the group intro", comment: nil) }

      /// en translation: Edit your alias
      ///
      /// Key: editGroupSubject
      ///
      /// Locales: en, zh-Hant
      var editGroupSubject: RswiftResources.StringResource { .init(key: "editGroupSubject", tableName: "Localizable", source: source, developmentValue: "Edit your alias", comment: nil) }

      /// en translation: Contact the administrator for editing permission.
      ///
      /// Key: editRight
      ///
      /// Locales: en, zh-Hant
      var editRight: RswiftResources.StringResource { .init(key: "editRight", tableName: "Localizable", source: source, developmentValue: "Contact the administrator for editing permission.", comment: nil) }

      /// en translation: Search tokens
      ///
      /// Key: editTokens.searchBar.placeholder.title
      ///
      /// Locales: en, zh-Hant
      var editTokensSearchBarPlaceholderTitle: RswiftResources.StringResource { .init(key: "editTokens.searchBar.placeholder.title", tableName: "Localizable", source: source, developmentValue: "Search tokens", comment: nil) }

      /// en translation: eight
      ///
      /// Key: eight
      ///
      /// Locales: en, zh-Hant
      var eight: RswiftResources.StringResource { .init(key: "eight", tableName: "Localizable", source: source, developmentValue: "eight", comment: nil) }

      /// en translation: eight
      ///
      /// Key: eight_traditional
      ///
      /// Locales: en, zh-Hant
      var eight_traditional: RswiftResources.StringResource { .init(key: "eight_traditional", tableName: "Localizable", source: source, developmentValue: "eight", comment: nil) }

      /// en translation: Your email address
      ///
      /// Key: email
      ///
      /// Locales: en, zh-Hant
      var email: RswiftResources.StringResource { .init(key: "email", tableName: "Localizable", source: source, developmentValue: "Your email address", comment: nil) }

      /// en translation: Your device isn't configured to send email
      ///
      /// Key: email.not.configured
      ///
      /// Locales: en, zh-Hant
      var emailNotConfigured: RswiftResources.StringResource { .init(key: "email.not.configured", tableName: "Localizable", source: source, developmentValue: "Your device isn't configured to send email", comment: nil) }

      /// en translation: Email is not valid
      ///
      /// Key: emailList.email.invalid
      ///
      /// Locales: en, zh-Hant
      var emailListEmailInvalid: RswiftResources.StringResource { .init(key: "emailList.email.invalid", tableName: "Localizable", source: source, developmentValue: "Email is not valid", comment: nil) }

      /// en translation: Email
      ///
      /// Key: emailList.prompt.email.placeholder
      ///
      /// Locales: en, zh-Hant
      var emailListPromptEmailPlaceholder: RswiftResources.StringResource { .init(key: "emailList.prompt.email.placeholder", tableName: "Localizable", source: source, developmentValue: "Email", comment: nil) }

      /// en translation: We send an email announcing major features. Would you like to receive such emails?  (max 1 email per week)
      ///
      /// Key: emailList.prompt.message
      ///
      /// Locales: en, zh-Hant
      var emailListPromptMessage: RswiftResources.StringResource { .init(key: "emailList.prompt.message", tableName: "Localizable", source: source, developmentValue: "We send an email announcing major features. Would you like to receive such emails?\n\n(max 1 email per week)", comment: nil) }

      /// en translation: I want to receive such emails
      ///
      /// Key: emailList.prompt.subscribeButtonTitle
      ///
      /// Locales: en, zh-Hant
      var emailListPromptSubscribeButtonTitle: RswiftResources.StringResource { .init(key: "emailList.prompt.subscribeButtonTitle", tableName: "Localizable", source: source, developmentValue: "I want to receive such emails", comment: nil) }

      /// en translation: Stay Updated
      ///
      /// Key: emailList.prompt.title
      ///
      /// Locales: en, zh-Hant
      var emailListPromptTitle: RswiftResources.StringResource { .init(key: "emailList.prompt.title", tableName: "Localizable", source: source, developmentValue: "Stay Updated", comment: nil) }

      /// en translation: Chat room name cannot be empty.
      ///
      /// Key: emptyChatroomSubject
      ///
      /// Locales: en, zh-Hant
      var emptyChatroomSubject: RswiftResources.StringResource { .init(key: "emptyChatroomSubject", tableName: "Localizable", source: source, developmentValue: "Chat room name cannot be empty.", comment: nil) }

      /// en translation: Items
      ///
      /// Key: emptyTableView.all.title
      ///
      /// Locales: en, zh-Hant
      var emptyTableViewAllTitle: RswiftResources.StringResource { .init(key: "emptyTableView.all.title", tableName: "Localizable", source: source, developmentValue: "Items", comment: nil) }

      /// en translation: No results
      ///
      /// Key: emptyTableView.search.title
      ///
      /// Locales: en, zh-Hant
      var emptyTableViewSearchTitle: RswiftResources.StringResource { .init(key: "emptyTableView.search.title", tableName: "Localizable", source: source, developmentValue: "No results", comment: nil) }

      /// en translation: You don't have any %@ yet
      ///
      /// Key: emptyTableView.wallet.title
      ///
      /// Locales: en, zh-Hant
      var emptyTableViewWalletTitle: RswiftResources.StringResource1<String> { .init(key: "emptyTableView.wallet.title", tableName: "Localizable", source: source, developmentValue: "You don't have any %@ yet", comment: nil) }

      /// en translation: There is nothing logged
      ///
      /// Key: emptyView.noMessages.label.title
      ///
      /// Locales: en, zh-Hant
      var emptyViewNoMessagesLabelTitle: RswiftResources.StringResource { .init(key: "emptyView.noMessages.label.title", tableName: "Localizable", source: source, developmentValue: "There is nothing logged", comment: nil) }

      /// en translation: You haven't received any tokens yet!
      ///
      /// Key: emptyView.noTokens.label.title
      ///
      /// Locales: en, zh-Hant
      var emptyViewNoTokensLabelTitle: RswiftResources.StringResource { .init(key: "emptyView.noTokens.label.title", tableName: "Localizable", source: source, developmentValue: "You haven't received any tokens yet!", comment: nil) }

      /// en translation: You haven't received any transactions yet!
      ///
      /// Key: emptyView.noTransactions.label.title
      ///
      /// Locales: en, zh-Hant
      var emptyViewNoTransactionsLabelTitle: RswiftResources.StringResource { .init(key: "emptyView.noTransactions.label.title", tableName: "Localizable", source: source, developmentValue: "You haven't received any transactions yet!", comment: nil) }

      /// en translation: Group chat name cannot be empty
      ///
      /// Key: emtpyGroupSubject
      ///
      /// Locales: en, zh-Hant
      var emtpyGroupSubject: RswiftResources.StringResource { .init(key: "emtpyGroupSubject", tableName: "Localizable", source: source, developmentValue: "Group chat name cannot be empty", comment: nil) }

      /// en translation: Open
      ///
      /// Key: enable
      ///
      /// Locales: en, zh-Hant
      var enable: RswiftResources.StringResource { .init(key: "enable", tableName: "Localizable", source: source, developmentValue: "Open", comment: nil) }

      /// en translation: End editing
      ///
      /// Key: endEdit
      ///
      /// Locales: en, zh-Hant
      var endEdit: RswiftResources.StringResource { .init(key: "endEdit", tableName: "Localizable", source: source, developmentValue: "End editing", comment: nil) }

      /// en translation: Please enter the wallet address or invitation code
      ///
      /// Key: enter.address.invite.code
      ///
      /// Locales: en, zh-Hant
      var enterAddressInviteCode: RswiftResources.StringResource { .init(key: "enter.address.invite.code", tableName: "Localizable", source: source, developmentValue: "Please enter the wallet address or invitation code", comment: nil) }

      /// en translation: Please enter the invitation code
      ///
      /// Key: enter.invite.code
      ///
      /// Locales: en, zh-Hant
      var enterInviteCode: RswiftResources.StringResource { .init(key: "enter.invite.code", tableName: "Localizable", source: source, developmentValue: "Please enter the invitation code", comment: nil) }

      /// en translation: Please enter the wallet address
      ///
      /// Key: enter.wallet.address
      ///
      /// Locales: en, zh-Hant
      var enterWalletAddress: RswiftResources.StringResource { .init(key: "enter.wallet.address", tableName: "Localizable", source: source, developmentValue: "Please enter the wallet address", comment: nil) }

      /// en translation: Enter the broadcast group
      ///
      /// Key: enterBroadcastGroup
      ///
      /// Locales: en, zh-Hant
      var enterBroadcastGroup: RswiftResources.StringResource { .init(key: "enterBroadcastGroup", tableName: "Localizable", source: source, developmentValue: "Enter the broadcast group", comment: nil) }

      /// en translation: Set Keystore Password
      ///
      /// Key: enterPassword.navigation.title
      ///
      /// Locales: en, zh-Hant
      var enterPasswordNavigationTitle: RswiftResources.StringResource { .init(key: "enterPassword.navigation.title", tableName: "Localizable", source: source, developmentValue: "Set Keystore Password", comment: nil) }

      /// en translation: Keystore Password
      ///
      /// Key: enterPassword.navigation.title.shorter
      ///
      /// Locales: en, zh-Hant
      var enterPasswordNavigationTitleShorter: RswiftResources.StringResource { .init(key: "enterPassword.navigation.title.shorter", tableName: "Localizable", source: source, developmentValue: "Keystore Password", comment: nil) }

      /// en translation: You must remember your password. We do not store your password elsewhere. KeyStore JSON file is always encrypted, otherwise whoever has it has access to your money.
      ///
      /// Key: enterPassword.password.header.placeholder
      ///
      /// Locales: en, zh-Hant
      var enterPasswordPasswordHeaderPlaceholder: RswiftResources.StringResource { .init(key: "enterPassword.password.header.placeholder", tableName: "Localizable", source: source, developmentValue: "You must remember your password. We do not store your password elsewhere. KeyStore JSON file is always encrypted, otherwise whoever has it has access to your money.", comment: nil) }

      /// en translation: Password to encrypt Keystore JSON
      ///
      /// Key: enterPassword.password.textField.placeholder
      ///
      /// Locales: en, zh-Hant
      var enterPasswordPasswordTextFieldPlaceholder: RswiftResources.StringResource { .init(key: "enterPassword.password.textField.placeholder", tableName: "Localizable", source: source, developmentValue: "Password to encrypt Keystore JSON", comment: nil) }

      /// en translation: Password to encrypt Keystore
      ///
      /// Key: enterPassword.password.textField.placeholder.shorter
      ///
      /// Locales: en, zh-Hant
      var enterPasswordPasswordTextFieldPlaceholderShorter: RswiftResources.StringResource { .init(key: "enterPassword.password.textField.placeholder.shorter", tableName: "Localizable", source: source, developmentValue: "Password to encrypt Keystore", comment: nil) }

      /// en translation: Please enter the private keys in the correct order
      ///
      /// Key: enter_keys
      ///
      /// Locales: en, zh-Hant
      var enter_keys: RswiftResources.StringResource { .init(key: "enter_keys", tableName: "Localizable", source: source, developmentValue: "Please enter the private keys in the correct order", comment: nil) }

      /// en translation: Please enter the unlock code
      ///
      /// Key: enter_unlock_code
      ///
      /// Locales: en, zh-Hant
      var enter_unlock_code: RswiftResources.StringResource { .init(key: "enter_unlock_code", tableName: "Localizable", source: source, developmentValue: "Please enter the unlock code", comment: nil) }

      /// en translation: Error
      ///
      /// Key: error
      ///
      /// Locales: en, zh-Hant
      var error: RswiftResources.StringResource { .init(key: "error", tableName: "Localizable", source: source, developmentValue: "Error", comment: nil) }

      /// en translation: Something went wrong... Try again.
      ///
      /// Key: errorView.description.label.title
      ///
      /// Locales: en, zh-Hant
      var errorViewDescriptionLabelTitle: RswiftResources.StringResource { .init(key: "errorView.description.label.title", tableName: "Localizable", source: source, developmentValue: "Something went wrong... Try again.", comment: nil) }

      /// en translation: Error code
      ///
      /// Key: errorcode
      ///
      /// Locales: en, zh-Hant
      var errorcode: RswiftResources.StringResource { .init(key: "errorcode", tableName: "Localizable", source: source, developmentValue: "Error code", comment: nil) }

      /// en translation: Expected receipt: %@
      ///
      /// Key: estimatedtoaccount
      ///
      /// Locales: en, zh-Hant
      var estimatedtoaccount: RswiftResources.StringResource1<String> { .init(key: "estimatedtoaccount", tableName: "Localizable", source: source, developmentValue: "Expected receipt: %@", comment: nil) }

      /// en translation: Mall exchange
      ///
      /// Key: exchange
      ///
      /// Locales: en, zh-Hant
      var exchange: RswiftResources.StringResource { .init(key: "exchange", tableName: "Localizable", source: source, developmentValue: "Mall exchange", comment: nil) }

      /// en translation: Please enter the exchange amount
      ///
      /// Key: exchangeamount
      ///
      /// Locales: en, zh-Hant
      var exchangeamount: RswiftResources.StringResource { .init(key: "exchangeamount", tableName: "Localizable", source: source, developmentValue: "Please enter the exchange amount", comment: nil) }

      /// en translation: Exchange failed
      ///
      /// Key: exchangefailed
      ///
      /// Locales: en, zh-Hant
      var exchangefailed: RswiftResources.StringResource { .init(key: "exchangefailed", tableName: "Localizable", source: source, developmentValue: "Exchange failed", comment: nil) }

      /// en translation: Redeem now
      ///
      /// Key: exchangenow
      ///
      /// Locales: en, zh-Hant
      var exchangenow: RswiftResources.StringResource { .init(key: "exchangenow", tableName: "Localizable", source: source, developmentValue: "Redeem now", comment: nil) }

      /// en translation: Redemption successful
      ///
      /// Key: exchangesuccess
      ///
      /// Locales: en, zh-Hant
      var exchangesuccess: RswiftResources.StringResource { .init(key: "exchangesuccess", tableName: "Localizable", source: source, developmentValue: "Redemption successful", comment: nil) }

      /// en translation: Exit
      ///
      /// Key: exit
      ///
      /// Locales: en, zh-Hant
      var exit: RswiftResources.StringResource { .init(key: "exit", tableName: "Localizable", source: source, developmentValue: "Exit", comment: nil) }

      /// en translation: Log out of current account
      ///
      /// Key: exitAcount
      ///
      /// Locales: en, zh-Hant
      var exitAcount: RswiftResources.StringResource { .init(key: "exitAcount", tableName: "Localizable", source: source, developmentValue: "Log out of current account", comment: nil) }

      /// en translation: Exit group
      ///
      /// Key: exitGroup
      ///
      /// Locales: en, zh-Hant
      var exitGroup: RswiftResources.StringResource { .init(key: "exitGroup", tableName: "Localizable", source: source, developmentValue: "Exit group", comment: nil) }

      /// en translation: Exit...
      ///
      /// Key: exiting
      ///
      /// Locales: en, zh-Hant
      var exiting: RswiftResources.StringResource { .init(key: "exiting", tableName: "Localizable", source: source, developmentValue: "Exit...", comment: nil) }

      /// en translation: Expired
      ///
      /// Key: expired
      ///
      /// Locales: en, zh-Hant
      var expired: RswiftResources.StringResource { .init(key: "expired", tableName: "Localizable", source: source, developmentValue: "Expired", comment: nil) }

      /// en translation: Backup Wallet
      ///
      /// Key: export.backup.button.title
      ///
      /// Locales: en, zh-Hant
      var exportBackupButtonTitle: RswiftResources.StringResource { .init(key: "export.backup.button.title", tableName: "Localizable", source: source, developmentValue: "Backup Wallet", comment: nil) }

      /// en translation: Since only you control your money, you'll need to save your backup keystore in case this app is deleted.
      ///
      /// Key: export.controlYourMoney.label.title
      ///
      /// Locales: en, zh-Hant
      var exportControlYourMoneyLabelTitle: RswiftResources.StringResource { .init(key: "export.controlYourMoney.label.title", tableName: "Localizable", source: source, developmentValue: "Since only you control your money, you'll need to save your backup keystore in case this app is deleted.", comment: nil) }

      /// en translation: Your wallet is never saved to cloud storage or standard device backups.
      ///
      /// Key: export.neverStored.label.title
      ///
      /// Locales: en, zh-Hant
      var exportNeverStoredLabelTitle: RswiftResources.StringResource { .init(key: "export.neverStored.label.title", tableName: "Localizable", source: source, developmentValue: "Your wallet is never saved to cloud storage or standard device backups.", comment: nil) }

      /// en translation: Be safe, back up your wallet
      ///
      /// Key: export.noBackup.label.title
      ///
      /// Locales: en, zh-Hant
      var exportNoBackupLabelTitle: RswiftResources.StringResource { .init(key: "export.noBackup.label.title", tableName: "Localizable", source: source, developmentValue: "Be safe, back up your wallet", comment: nil) }

      /// en translation: Preparing backup options...
      ///
      /// Key: export.presentBackupOptions.label.title
      ///
      /// Locales: en, zh-Hant
      var exportPresentBackupOptionsLabelTitle: RswiftResources.StringResource { .init(key: "export.presentBackupOptions.label.title", tableName: "Localizable", source: source, developmentValue: "Preparing backup options...", comment: nil) }

      /// en translation: Export logs to file directory
      ///
      /// Key: exportLog
      ///
      /// Locales: en, zh-Hant
      var exportLog: RswiftResources.StringResource { .init(key: "exportLog", tableName: "Localizable", source: source, developmentValue: "Export logs to file directory", comment: nil) }

      /// en translation: Withdraw to INTO wallet
      ///
      /// Key: extractintowallet
      ///
      /// Locales: en, zh-Hant
      var extractintowallet: RswiftResources.StringResource { .init(key: "extractintowallet", tableName: "Localizable", source: source, developmentValue: "Withdraw to INTO wallet", comment: nil) }

      /// en translation: Please enter the withdrawal quantity
      ///
      /// Key: extractionquantity
      ///
      /// Locales: en, zh-Hant
      var extractionquantity: RswiftResources.StringResource { .init(key: "extractionquantity", tableName: "Localizable", source: source, developmentValue: "Please enter the withdrawal quantity", comment: nil) }

      /// en translation: Extraction successful
      ///
      /// Key: extractionsuccess
      ///
      /// Locales: en, zh-Hant
      var extractionsuccess: RswiftResources.StringResource { .init(key: "extractionsuccess", tableName: "Localizable", source: source, developmentValue: "Extraction successful", comment: nil) }

      /// en translation: Face ID
      ///
      /// Key: face.id
      ///
      /// Locales: en, zh-Hant
      var faceId: RswiftResources.StringResource { .init(key: "face.id", tableName: "Localizable", source: source, developmentValue: "Face ID", comment: nil) }

      /// en translation: Facebook authentication
      ///
      /// Key: facebook_authentication
      ///
      /// Locales: en, zh-Hant
      var facebook_authentication: RswiftResources.StringResource { .init(key: "facebook_authentication", tableName: "Localizable", source: source, developmentValue: "Facebook authentication", comment: nil) }

      /// en translation: Face brushing failed
      ///
      /// Key: facefailed
      ///
      /// Locales: en, zh-Hant
      var facefailed: RswiftResources.StringResource { .init(key: "facefailed", tableName: "Localizable", source: source, developmentValue: "Face brushing failed", comment: nil) }

      /// en translation: Failed to import wallet
      ///
      /// Key: failed.to.import.wallet
      ///
      /// Locales: en, zh-Hant
      var failedToImportWallet: RswiftResources.StringResource { .init(key: "failed.to.import.wallet", tableName: "Localizable", source: source, developmentValue: "Failed to import wallet", comment: nil) }

      /// en translation: Failed to download video
      ///
      /// Key: faileddownloadvideo
      ///
      /// Locales: en, zh-Hant
      var faileddownloadvideo: RswiftResources.StringResource { .init(key: "faileddownloadvideo", tableName: "Localizable", source: source, developmentValue: "Failed to download video", comment: nil) }

      /// en translation: It only took %.01f seconds, which is faster than lightning
      ///
      /// Key: fasterthanlightning
      ///
      /// Locales: en, zh-Hant
      var fasterthanlightning: RswiftResources.StringResource1<Double> { .init(key: "fasterthanlightning", tableName: "Localizable", source: source, developmentValue: "It only took %.01f seconds, which is faster than lightning", comment: nil) }

      /// en translation: You have applied to receive it, please wait patiently.
      ///
      /// Key: faucet_apply_collected
      ///
      /// Locales: en, zh-Hant
      var faucet_apply_collected: RswiftResources.StringResource { .init(key: "faucet_apply_collected", tableName: "Localizable", source: source, developmentValue: "You have applied to receive it, please wait patiently.", comment: nil) }

      /// en translation: You have received the faucet
      ///
      /// Key: faucet_collected
      ///
      /// Locales: en, zh-Hant
      var faucet_collected: RswiftResources.StringResource { .init(key: "faucet_collected", tableName: "Localizable", source: source, developmentValue: "You have received the faucet", comment: nil) }

      /// en translation: branch
      ///
      /// Key: fen
      ///
      /// Locales: en, zh-Hant
      var fen: RswiftResources.StringResource { .init(key: "fen", tableName: "Localizable", source: source, developmentValue: "branch", comment: nil) }

      /// en translation: Get adminstrators...
      ///
      /// Key: fetchAdminsing
      ///
      /// Locales: en, zh-Hant
      var fetchAdminsing: RswiftResources.StringResource { .init(key: "fetchAdminsing", tableName: "Localizable", source: source, developmentValue: "Get adminstrators...", comment: nil) }

      /// en translation: Get blocklist...
      ///
      /// Key: fetchBLing
      ///
      /// Locales: en, zh-Hant
      var fetchBLing: RswiftResources.StringResource { .init(key: "fetchBLing", tableName: "Localizable", source: source, developmentValue: "Get blocklist...", comment: nil) }

      /// en translation: Get chatroom announcement...
      ///
      /// Key: fetchChatroomAnning
      ///
      /// Locales: en, zh-Hant
      var fetchChatroomAnning: RswiftResources.StringResource { .init(key: "fetchChatroomAnning", tableName: "Localizable", source: source, developmentValue: "Get chatroom announcement...", comment: nil) }

      /// en translation: Failed to get chat room details
      ///
      /// Key: fetchChatroomFail
      ///
      /// Locales: en, zh-Hant
      var fetchChatroomFail: RswiftResources.StringResource { .init(key: "fetchChatroomFail", tableName: "Localizable", source: source, developmentValue: "Failed to get chat room details", comment: nil) }

      /// en translation: Failed to get chatroom members: %@
      ///
      /// Key: fetchChatroomMemberFail
      ///
      /// Locales: en, zh-Hant
      var fetchChatroomMemberFail: RswiftResources.StringResource1<String> { .init(key: "fetchChatroomMemberFail", tableName: "Localizable", source: source, developmentValue: "Failed to get chatroom members: %@", comment: nil) }

      /// en translation: Get chatroom members...
      ///
      /// Key: fetchChatroomMembersing
      ///
      /// Locales: en, zh-Hant
      var fetchChatroomMembersing: RswiftResources.StringResource { .init(key: "fetchChatroomMembersing", tableName: "Localizable", source: source, developmentValue: "Get chatroom members...", comment: nil) }

      /// en translation: Get chatroom info...
      ///
      /// Key: fetchChatroomSubject
      ///
      /// Locales: en, zh-Hant
      var fetchChatroomSubject: RswiftResources.StringResource { .init(key: "fetchChatroomSubject", tableName: "Localizable", source: source, developmentValue: "Get chatroom info...", comment: nil) }

      /// en translation: Get messages from server first
      ///
      /// Key: fetchFromSerFirst
      ///
      /// Locales: en, zh-Hant
      var fetchFromSerFirst: RswiftResources.StringResource { .init(key: "fetchFromSerFirst", tableName: "Localizable", source: source, developmentValue: "Get messages from server first", comment: nil) }

      /// en translation: Failed to obtain group announcement
      ///
      /// Key: fetchGroupAnnFail
      ///
      /// Locales: en, zh-Hant
      var fetchGroupAnnFail: RswiftResources.StringResource { .init(key: "fetchGroupAnnFail", tableName: "Localizable", source: source, developmentValue: "Failed to obtain group announcement", comment: nil) }

      /// en translation: Failed to get group members: %@
      ///
      /// Key: fetchGroupMemberFail
      ///
      /// Locales: en, zh-Hant
      var fetchGroupMemberFail: RswiftResources.StringResource1<String> { .init(key: "fetchGroupMemberFail", tableName: "Localizable", source: source, developmentValue: "Failed to get group members: %@", comment: nil) }

      /// en translation: Get group members...
      ///
      /// Key: fetchGroupMembering
      ///
      /// Locales: en, zh-Hant
      var fetchGroupMembering: RswiftResources.StringResource { .init(key: "fetchGroupMembering", tableName: "Localizable", source: source, developmentValue: "Get group members...", comment: nil) }

      /// en translation: Failed to get group details
      ///
      /// Key: fetchGroupSubjectFail
      ///
      /// Locales: en, zh-Hant
      var fetchGroupSubjectFail: RswiftResources.StringResource { .init(key: "fetchGroupSubjectFail", tableName: "Localizable", source: source, developmentValue: "Failed to get group details", comment: nil) }

      /// en translation: Failed to get group info: %@
      ///
      /// Key: fetchGroupSubjectFailEx
      ///
      /// Locales: en, zh-Hant
      var fetchGroupSubjectFailEx: RswiftResources.StringResource1<String> { .init(key: "fetchGroupSubjectFailEx", tableName: "Localizable", source: source, developmentValue: "Failed to get group info: %@", comment: nil) }

      /// en translation: Get group info...
      ///
      /// Key: fetchGroupSubjecting
      ///
      /// Locales: en, zh-Hant
      var fetchGroupSubjecting: RswiftResources.StringResource { .init(key: "fetchGroupSubjecting", tableName: "Localizable", source: source, developmentValue: "Get group info...", comment: nil) }

      /// en translation: Failed to get log
      ///
      /// Key: fetchLogFail
      ///
      /// Locales: en, zh-Hant
      var fetchLogFail: RswiftResources.StringResource { .init(key: "fetchLogFail", tableName: "Localizable", source: source, developmentValue: "Failed to get log", comment: nil) }

      /// en translation: Get chatroom members...
      ///
      /// Key: fetchMembersing
      ///
      /// Locales: en, zh-Hant
      var fetchMembersing: RswiftResources.StringResource { .init(key: "fetchMembersing", tableName: "Localizable", source: source, developmentValue: "Get chatroom members...", comment: nil) }

      /// en translation: Get mute list...
      ///
      /// Key: fetchMuteListing
      ///
      /// Locales: en, zh-Hant
      var fetchMuteListing: RswiftResources.StringResource { .init(key: "fetchMuteListing", tableName: "Localizable", source: source, developmentValue: "Get mute list...", comment: nil) }

      /// en translation: Get permissions
      ///
      /// Key: fetchRight
      ///
      /// Locales: en, zh-Hant
      var fetchRight: RswiftResources.StringResource { .init(key: "fetchRight", tableName: "Localizable", source: source, developmentValue: "Get permissions", comment: nil) }

      /// en translation: Get shared files...
      ///
      /// Key: fetchShareFileing
      ///
      /// Locales: en, zh-Hant
      var fetchShareFileing: RswiftResources.StringResource { .init(key: "fetchShareFileing", tableName: "Localizable", source: source, developmentValue: "Get shared files...", comment: nil) }

      /// en translation: Get chatroom members...
      ///
      /// Key: fetchingChatroomMembering
      ///
      /// Locales: en, zh-Hant
      var fetchingChatroomMembering: RswiftResources.StringResource { .init(key: "fetchingChatroomMembering", tableName: "Localizable", source: source, developmentValue: "Get chatroom members...", comment: nil) }

      /// en translation: Get chatroom...
      ///
      /// Key: fetchingChatrooming
      ///
      /// Locales: en, zh-Hant
      var fetchingChatrooming: RswiftResources.StringResource { .init(key: "fetchingChatrooming", tableName: "Localizable", source: source, developmentValue: "Get chatroom...", comment: nil) }

      /// en translation: Get contacts...
      ///
      /// Key: fetchingContactsing
      ///
      /// Locales: en, zh-Hant
      var fetchingContactsing: RswiftResources.StringResource { .init(key: "fetchingContactsing", tableName: "Localizable", source: source, developmentValue: "Get contacts...", comment: nil) }

      /// en translation: Get group administrators...
      ///
      /// Key: fetchingGroupAdminsing
      ///
      /// Locales: en, zh-Hant
      var fetchingGroupAdminsing: RswiftResources.StringResource { .init(key: "fetchingGroupAdminsing", tableName: "Localizable", source: source, developmentValue: "Get group administrators...", comment: nil) }

      /// en translation: Get group announcement...
      ///
      /// Key: fetchingGroupAnning
      ///
      /// Locales: en, zh-Hant
      var fetchingGroupAnning: RswiftResources.StringResource { .init(key: "fetchingGroupAnning", tableName: "Localizable", source: source, developmentValue: "Get group announcement...", comment: nil) }

      /// en translation: Get from group blocklist...
      ///
      /// Key: fetchingGroupBLing
      ///
      /// Locales: en, zh-Hant
      var fetchingGroupBLing: RswiftResources.StringResource { .init(key: "fetchingGroupBLing", tableName: "Localizable", source: source, developmentValue: "Get from group blocklist...", comment: nil) }

      /// en translation: Get group info...
      ///
      /// Key: fetchingGroupInfoing
      ///
      /// Locales: en, zh-Hant
      var fetchingGroupInfoing: RswiftResources.StringResource { .init(key: "fetchingGroupInfoing", tableName: "Localizable", source: source, developmentValue: "Get group info...", comment: nil) }

      /// en translation: Get group members...
      ///
      /// Key: fetchingGroupMembering
      ///
      /// Locales: en, zh-Hant
      var fetchingGroupMembering: RswiftResources.StringResource { .init(key: "fetchingGroupMembering", tableName: "Localizable", source: source, developmentValue: "Get group members...", comment: nil) }

      /// en translation: Get group members...
      ///
      /// Key: fetchingGroupMembersing
      ///
      /// Locales: en, zh-Hant
      var fetchingGroupMembersing: RswiftResources.StringResource { .init(key: "fetchingGroupMembersing", tableName: "Localizable", source: source, developmentValue: "Get group members...", comment: nil) }

      /// en translation: Get groups...
      ///
      /// Key: fetchingGrouping
      ///
      /// Locales: en, zh-Hant
      var fetchingGrouping: RswiftResources.StringResource { .init(key: "fetchingGrouping", tableName: "Localizable", source: source, developmentValue: "Get groups...", comment: nil) }

      /// en translation: Get mute list...
      ///
      /// Key: fetchingMuteListing
      ///
      /// Locales: en, zh-Hant
      var fetchingMuteListing: RswiftResources.StringResource { .init(key: "fetchingMuteListing", tableName: "Localizable", source: source, developmentValue: "Get mute list...", comment: nil) }

      /// en translation: Get public groups...
      ///
      /// Key: fetchingPublicGrouping
      ///
      /// Locales: en, zh-Hant
      var fetchingPublicGrouping: RswiftResources.StringResource { .init(key: "fetchingPublicGrouping", tableName: "Localizable", source: source, developmentValue: "Get public groups...", comment: nil) }

      /// en translation: Failed to get shared files
      ///
      /// Key: fetchsharedFileFail
      ///
      /// Locales: en, zh-Hant
      var fetchsharedFileFail: RswiftResources.StringResource { .init(key: "fetchsharedFileFail", tableName: "Localizable", source: source, developmentValue: "Failed to get shared files", comment: nil) }

      /// en translation: Please fill in the complaint content
      ///
      /// Key: fillincomplaint
      ///
      /// Locales: en, zh-Hant
      var fillincomplaint: RswiftResources.StringResource { .init(key: "fillincomplaint", tableName: "Localizable", source: source, developmentValue: "Please fill in the complaint content", comment: nil) }

      /// en translation: I understand
      ///
      /// Key: fine
      ///
      /// Locales: en, zh-Hant
      var fine: RswiftResources.StringResource { .init(key: "fine", tableName: "Localizable", source: source, developmentValue: "I understand", comment: nil) }

      /// en translation: First tier cities
      ///
      /// Key: first_city
      ///
      /// Locales: en, zh-Hant
      var first_city: RswiftResources.StringResource { .init(key: "first_city", tableName: "Localizable", source: source, developmentValue: "First tier cities", comment: nil) }

      /// en translation: five
      ///
      /// Key: five
      ///
      /// Locales: en, zh-Hant
      var five: RswiftResources.StringResource { .init(key: "five", tableName: "Localizable", source: source, developmentValue: "five", comment: nil) }

      /// en translation: five
      ///
      /// Key: five_traditional
      ///
      /// Locales: en, zh-Hant
      var five_traditional: RswiftResources.StringResource { .init(key: "five_traditional", tableName: "Localizable", source: source, developmentValue: "five", comment: nil) }

      /// en translation: No longer worry about forgetting the seed phrase, it is more convenient to restore the wallet login account
      ///
      /// Key: forgetting_restore_wallet
      ///
      /// Locales: en, zh-Hant
      var forgetting_restore_wallet: RswiftResources.StringResource { .init(key: "forgetting_restore_wallet", tableName: "Localizable", source: source, developmentValue: "No longer worry about forgetting the seed phrase, it is more convenient to restore the wallet login account", comment: nil) }

      /// en translation: Forward
      ///
      /// Key: forward
      ///
      /// Locales: en, zh-Hant
      var forward: RswiftResources.StringResource { .init(key: "forward", tableName: "Localizable", source: source, developmentValue: "Forward", comment: nil) }

      /// en translation: Forward messages
      ///
      /// Key: forwardMsg
      ///
      /// Locales: en, zh-Hant
      var forwardMsg: RswiftResources.StringResource { .init(key: "forwardMsg", tableName: "Localizable", source: source, developmentValue: "Forward messages", comment: nil) }

      /// en translation: Failed to forward message
      ///
      /// Key: forwardMsgFail
      ///
      /// Locales: en, zh-Hant
      var forwardMsgFail: RswiftResources.StringResource { .init(key: "forwardMsgFail", tableName: "Localizable", source: source, developmentValue: "Failed to forward message", comment: nil) }

      /// en translation: Message forwarded
      ///
      /// Key: forwardMsgSucess
      ///
      /// Locales: en, zh-Hant
      var forwardMsgSucess: RswiftResources.StringResource { .init(key: "forwardMsgSucess", tableName: "Localizable", source: source, developmentValue: "Message forwarded", comment: nil) }

      /// en translation: four
      ///
      /// Key: four
      ///
      /// Locales: en, zh-Hant
      var four: RswiftResources.StringResource { .init(key: "four", tableName: "Localizable", source: source, developmentValue: "four", comment: nil) }

      /// en translation: four
      ///
      /// Key: four_traditional
      ///
      /// Locales: en, zh-Hant
      var four_traditional: RswiftResources.StringResource { .init(key: "four_traditional", tableName: "Localizable", source: source, developmentValue: "four", comment: nil) }

      /// en translation: Free
      ///
      /// Key: free
      ///
      /// Locales: en, zh-Hant
      var free: RswiftResources.StringResource { .init(key: "free", tableName: "Localizable", source: source, developmentValue: "Free", comment: nil) }

      /// en translation: Friday 
      ///
      /// Key: friday
      ///
      /// Locales: en, zh-Hant
      var friday: RswiftResources.StringResource { .init(key: "friday", tableName: "Localizable", source: source, developmentValue: "Friday ", comment: nil) }

      /// en translation: %@'s %@ friend group for
      ///
      /// Key: friendProGroup
      ///
      /// Locales: en, zh-Hant
      var friendProGroup: RswiftResources.StringResource2<String, String> { .init(key: "friendProGroup", tableName: "Localizable", source: source, developmentValue: "%@'s %@ friend group for", comment: nil) }

      /// en translation: %@ wants to become friends with you, please pass
      ///
      /// Key: friendapply
      ///
      /// Locales: en, zh-Hant
      var friendapply: RswiftResources.StringResource1<String> { .init(key: "friendapply", tableName: "Localizable", source: source, developmentValue: "%@ wants to become friends with you, please pass", comment: nil) }

      /// en translation: %@ from %@ %.2lf MB
      ///
      /// Key: fromPrompt
      ///
      /// Locales: en, zh-Hant
      var fromPrompt: RswiftResources.StringResource2<String, String> { .init(key: "fromPrompt", tableName: "Localizable", source: source, developmentValue: "%@ from %@ %.2lf MB", comment: nil) }

      /// en translation: This function does not support the current chain
      ///
      /// Key: function_upport_rrent
      ///
      /// Locales: en, zh-Hant
      var function_upport_rrent: RswiftResources.StringResource { .init(key: "function_upport_rrent", tableName: "Localizable", source: source, developmentValue: "This function does not support the current chain", comment: nil) }

      /// en translation: Social Fund Rewards
      ///
      /// Key: fund_reward
      ///
      /// Locales: en, zh-Hant
      var fund_reward: RswiftResources.StringResource { .init(key: "fund_reward", tableName: "Localizable", source: source, developmentValue: "Social Fund Rewards", comment: nil) }

      /// en translation: Group assistant
      ///
      /// Key: gang_helper
      ///
      /// Locales: en, zh-Hant
      var gang_helper: RswiftResources.StringResource { .init(key: "gang_helper", tableName: "Localizable", source: source, developmentValue: "Group assistant", comment: nil) }

      /// en translation: Piece
      ///
      /// Key: ge
      ///
      /// Locales: en, zh-Hant
      var ge: RswiftResources.StringResource { .init(key: "ge", tableName: "Localizable", source: source, developmentValue: "Piece", comment: nil) }

      /// en translation: Failed to obtain friend list
      ///
      /// Key: get.friends.failed
      ///
      /// Locales: en, zh-Hant
      var getFriendsFailed: RswiftResources.StringResource { .init(key: "get.friends.failed", tableName: "Localizable", source: source, developmentValue: "Failed to obtain friend list", comment: nil) }

      /// en translation: 2. Chance to get a surprise benefit package for the inviter
      ///
      /// Key: get_benefit_package_inviter
      ///
      /// Locales: en, zh-Hant
      var get_benefit_package_inviter: RswiftResources.StringResource { .init(key: "get_benefit_package_inviter", tableName: "Localizable", source: source, developmentValue: "2. Chance to get a surprise benefit package for the inviter", comment: nil) }

      /// en translation: Please go to 'Settings - Privacy - Address Book' to authorize access to my address book
      ///
      /// Key: getaddress
      ///
      /// Locales: en, zh-Hant
      var getaddress: RswiftResources.StringResource { .init(key: "getaddress", tableName: "Localizable", source: source, developmentValue: "Please go to 'Settings - Privacy - Address Book' to authorize access to my address book", comment: nil) }

      /// en translation: Import Existing Wallet
      ///
      /// Key: gettingStarted.alertSheet.option.import.title
      ///
      /// Locales: en, zh-Hant
      var gettingStartedAlertSheetOptionImportTitle: RswiftResources.StringResource { .init(key: "gettingStarted.alertSheet.option.import.title", tableName: "Localizable", source: source, developmentValue: "Import Existing Wallet", comment: nil) }

      /// en translation: Track Wallet Address
      ///
      /// Key: gettingStarted.alertSheet.option.watch.title
      ///
      /// Locales: en, zh-Hant
      var gettingStartedAlertSheetOptionWatchTitle: RswiftResources.StringResource { .init(key: "gettingStarted.alertSheet.option.watch.title", tableName: "Localizable", source: source, developmentValue: "Track Wallet Address", comment: nil) }

      /// en translation: I already have a Wallet
      ///
      /// Key: gettingStarted.alreadyHaveWallet
      ///
      /// Locales: en, zh-Hant
      var gettingStartedAlreadyHaveWallet: RswiftResources.StringResource { .init(key: "gettingStarted.alreadyHaveWallet", tableName: "Localizable", source: source, developmentValue: "I already have a Wallet", comment: nil) }

      /// en translation: Create/import wallet
      ///
      /// Key: gettingStarted.mainTitle
      ///
      /// Locales: en, zh-Hant
      var gettingStartedMainTitle: RswiftResources.StringResource { .init(key: "gettingStarted.mainTitle", tableName: "Localizable", source: source, developmentValue: "Create/import wallet", comment: nil) }

      /// en translation: Create a new Wallet
      ///
      /// Key: gettingStarted.newWallet
      ///
      /// Locales: en, zh-Hant
      var gettingStartedNewWallet: RswiftResources.StringResource { .init(key: "gettingStarted.newWallet", tableName: "Localizable", source: source, developmentValue: "Create a new Wallet", comment: nil) }

      /// en translation: Each account is bound to at least one wallet
      ///
      /// Key: gettingStarted.subTitleStr
      ///
      /// Locales: en, zh-Hant
      var gettingStartedSubTitleStr: RswiftResources.StringResource { .init(key: "gettingStarted.subTitleStr", tableName: "Localizable", source: source, developmentValue: "Each account is bound to at least one wallet", comment: nil) }

      /// en translation: INTO
      ///
      /// Key: gettingStarted.subtitle
      ///
      /// Locales: en, zh-Hant
      var gettingStartedSubtitle: RswiftResources.StringResource { .init(key: "gettingStarted.subtitle", tableName: "Localizable", source: source, developmentValue: "INTO", comment: nil) }

      /// en translation: Participate in the nodes to earn revenue
      ///
      /// Key: go_earn_money
      ///
      /// Locales: en, zh-Hant
      var go_earn_money: RswiftResources.StringResource { .init(key: "go_earn_money", tableName: "Localizable", source: source, developmentValue: "Participate in the nodes to earn revenue", comment: nil) }

      /// en translation: Go to Settings
      ///
      /// Key: go_set
      ///
      /// Locales: en, zh-Hant
      var go_set: RswiftResources.StringResource { .init(key: "go_set", tableName: "Localizable", source: source, developmentValue: "Go to Settings", comment: nil) }

      /// en translation: Best wishes
      ///
      /// Key: goodluckandprosperity
      ///
      /// Locales: en, zh-Hant
      var goodluckandprosperity: RswiftResources.StringResource { .init(key: "goodluckandprosperity", tableName: "Localizable", source: source, developmentValue: "Best wishes", comment: nil) }

      /// en translation: Go chat
      ///
      /// Key: gotochat
      ///
      /// Locales: en, zh-Hant
      var gotochat: RswiftResources.StringResource { .init(key: "gotochat", tableName: "Localizable", source: source, developmentValue: "Go chat", comment: nil) }

      /// en translation: Group chat
      ///
      /// Key: group
      ///
      /// Locales: en, zh-Hant
      var group: RswiftResources.StringResource { .init(key: "group", tableName: "Localizable", source: source, developmentValue: "Group chat", comment: nil) }

      /// en translation: Group Admin Update
      ///
      /// Key: group.adminUpdate
      ///
      /// Locales: en, zh-Hant
      var groupAdminUpdate: RswiftResources.StringResource { .init(key: "group.adminUpdate", tableName: "Localizable", source: source, developmentValue: "Group Admin Update", comment: nil) }

      /// en translation: Group Announcement Update
      ///
      /// Key: group.announcementUpdate
      ///
      /// Locales: en, zh-Hant
      var groupAnnouncementUpdate: RswiftResources.StringResource { .init(key: "group.announcementUpdate", tableName: "Localizable", source: source, developmentValue: "Group Announcement Update", comment: nil) }

      /// en translation: Your application to join group '%@' is rejected
      ///
      /// Key: group.beRefusedToJoin
      ///
      /// Locales: en, zh-Hant
      var groupBeRefusedToJoin: RswiftResources.StringResource1<String> { .init(key: "group.beRefusedToJoin", tableName: "Localizable", source: source, developmentValue: "Your application to join group '%@' is rejected", comment: nil) }

      /// en translation: Join the group
      ///
      /// Key: group.join
      ///
      /// Locales: en, zh-Hant
      var groupJoin: RswiftResources.StringResource { .init(key: "group.join", tableName: "Localizable", source: source, developmentValue: "Join the group", comment: nil) }

      /// en translation: Leave group
      ///
      /// Key: group.leave
      ///
      /// Locales: en, zh-Hant
      var groupLeave: RswiftResources.StringResource { .init(key: "group.leave", tableName: "Localizable", source: source, developmentValue: "Leave group", comment: nil) }

      /// en translation: Group Members Update
      ///
      /// Key: group.membersUpdate
      ///
      /// Locales: en, zh-Hant
      var groupMembersUpdate: RswiftResources.StringResource { .init(key: "group.membersUpdate", tableName: "Localizable", source: source, developmentValue: "Group Members Update", comment: nil) }

      /// en translation: Group Owner Update
      ///
      /// Key: group.ownerUpdate
      ///
      /// Locales: en, zh-Hant
      var groupOwnerUpdate: RswiftResources.StringResource { .init(key: "group.ownerUpdate", tableName: "Localizable", source: source, developmentValue: "Group Owner Update", comment: nil) }

      /// en translation: Group:%@ Remove file ID: %@
      ///
      /// Key: group.removeSharedFile
      ///
      /// Locales: en, zh-Hant
      var groupRemoveSharedFile: RswiftResources.StringResource2<String, String> { .init(key: "group.removeSharedFile", tableName: "Localizable", source: source, developmentValue: "Group:%@ Remove file ID: %@", comment: nil) }

      /// en translation: Group SharedFile Update
      ///
      /// Key: group.sharedFileUpdate
      ///
      /// Locales: en, zh-Hant
      var groupSharedFileUpdate: RswiftResources.StringResource { .init(key: "group.sharedFileUpdate", tableName: "Localizable", source: source, developmentValue: "Group SharedFile Update", comment: nil) }

      /// en translation: %@ invited you to join group '%@'
      ///
      /// Key: group.somebodyInvite
      ///
      /// Locales: en, zh-Hant
      var groupSomebodyInvite: RswiftResources.StringResource2<String, String> { .init(key: "group.somebodyInvite", tableName: "Localizable", source: source, developmentValue: "%@ invited you to join group '%@'", comment: nil) }

      /// en translation: Mute
      ///
      /// Key: group.toMute
      ///
      /// Locales: en, zh-Hant
      var groupToMute: RswiftResources.StringResource { .init(key: "group.toMute", tableName: "Localizable", source: source, developmentValue: "Mute", comment: nil) }

      /// en translation: Group Update
      ///
      /// Key: group.update
      ///
      /// Locales: en, zh-Hant
      var groupUpdate: RswiftResources.StringResource { .init(key: "group.update", tableName: "Localizable", source: source, developmentValue: "Group Update", comment: nil) }

      /// en translation: Group:%@ Upload file ID: %@
      ///
      /// Key: group.uploadSharedFile
      ///
      /// Locales: en, zh-Hant
      var groupUploadSharedFile: RswiftResources.StringResource2<String, String> { .init(key: "group.uploadSharedFile", tableName: "Localizable", source: source, developmentValue: "Group:%@ Upload file ID: %@", comment: nil) }

      /// en translation: Group administrator
      ///
      /// Key: groupAdmin
      ///
      /// Locales: en, zh-Hant
      var groupAdmin: RswiftResources.StringResource { .init(key: "groupAdmin", tableName: "Localizable", source: source, developmentValue: "Group administrator", comment: nil) }

      /// en translation: Group announcement
      ///
      /// Key: groupAnn
      ///
      /// Locales: en, zh-Hant
      var groupAnn: RswiftResources.StringResource { .init(key: "groupAnn", tableName: "Localizable", source: source, developmentValue: "Group announcement", comment: nil) }

      /// en translation: Group blocklist
      ///
      /// Key: groupBL
      ///
      /// Locales: en, zh-Hant
      var groupBL: RswiftResources.StringResource { .init(key: "groupBL", tableName: "Localizable", source: source, developmentValue: "Group blocklist", comment: nil) }

      /// en translation: %ld in total
      ///
      /// Key: groupCount
      ///
      /// Locales: en, zh-Hant
      var groupCount: RswiftResources.StringResource1<Int> { .init(key: "groupCount", tableName: "Localizable", source: source, developmentValue: "%ld in total", comment: nil) }

      /// en translation: Group profile
      ///
      /// Key: groupDescritption
      ///
      /// Locales: en, zh-Hant
      var groupDescritption: RswiftResources.StringResource { .init(key: "groupDescritption", tableName: "Localizable", source: source, developmentValue: "Group profile", comment: nil) }

      /// en translation: The group %@ was disbanded
      ///
      /// Key: groupDestroiedPrompt
      ///
      /// Locales: en, zh-Hant
      var groupDestroiedPrompt: RswiftResources.StringResource1<String> { .init(key: "groupDestroiedPrompt", tableName: "Localizable", source: source, developmentValue: "The group %@ was disbanded", comment: nil) }

      /// en translation: Failed to get group
      ///
      /// Key: groupFail
      ///
      /// Locales: en, zh-Hant
      var groupFail: RswiftResources.StringResource { .init(key: "groupFail", tableName: "Localizable", source: source, developmentValue: "Failed to get group", comment: nil) }

      /// en translation: Group info
      ///
      /// Key: groupInfo
      ///
      /// Locales: en, zh-Hant
      var groupInfo: RswiftResources.StringResource { .init(key: "groupInfo", tableName: "Localizable", source: source, developmentValue: "Group info", comment: nil) }

      /// en translation: Group list
      ///
      /// Key: groupList
      ///
      /// Locales: en, zh-Hant
      var groupList: RswiftResources.StringResource { .init(key: "groupList", tableName: "Localizable", source: source, developmentValue: "Group list", comment: nil) }

      /// en translation: Group management
      ///
      /// Key: groupManage
      ///
      /// Locales: en, zh-Hant
      var groupManage: RswiftResources.StringResource { .init(key: "groupManage", tableName: "Localizable", source: source, developmentValue: "Group management", comment: nil) }

      /// en translation: Member quantity：3-3000
      ///
      /// Key: groupMemberCounts
      ///
      /// Locales: en, zh-Hant
      var groupMemberCounts: RswiftResources.StringResource { .init(key: "groupMemberCounts", tableName: "Localizable", source: source, developmentValue: "Member quantity：3-3000", comment: nil) }

      /// en translation: Group members are banned
      ///
      /// Key: groupMemberMute
      ///
      /// Locales: en, zh-Hant
      var groupMemberMute: RswiftResources.StringResource { .init(key: "groupMemberMute", tableName: "Localizable", source: source, developmentValue: "Group members are banned", comment: nil) }

      /// en translation: When enabled, only group owners and administrators are allowed to speak
      ///
      /// Key: groupMemberMute.text
      ///
      /// Locales: en, zh-Hant
      var groupMemberMuteText: RswiftResources.StringResource { .init(key: "groupMemberMute.text", tableName: "Localizable", source: source, developmentValue: "When enabled, only group owners and administrators are allowed to speak", comment: nil) }

      /// en translation: Group members
      ///
      /// Key: groupMembers
      ///
      /// Locales: en, zh-Hant
      var groupMembers: RswiftResources.StringResource { .init(key: "groupMembers", tableName: "Localizable", source: source, developmentValue: "Group members", comment: nil) }

      /// en translation: Group leader
      ///
      /// Key: groupOwner
      ///
      /// Locales: en, zh-Hant
      var groupOwner: RswiftResources.StringResource { .init(key: "groupOwner", tableName: "Localizable", source: source, developmentValue: "Group leader", comment: nil) }

      /// en translation: %@ have transfered group ownership in %@ to %@
      ///
      /// Key: groupOwnerChangePrompt
      ///
      /// Locales: en, zh-Hant
      var groupOwnerChangePrompt: RswiftResources.StringResource3<String, String, String> { .init(key: "groupOwnerChangePrompt", tableName: "Localizable", source: source, developmentValue: "%@ have transfered group ownership in %@ to %@", comment: nil) }

      /// en translation: Transfer group ownership
      ///
      /// Key: groupOwnerTransfer
      ///
      /// Locales: en, zh-Hant
      var groupOwnerTransfer: RswiftResources.StringResource { .init(key: "groupOwnerTransfer", tableName: "Localizable", source: source, developmentValue: "Transfer group ownership", comment: nil) }

      /// en translation: Group QR code
      ///
      /// Key: groupQRCode
      ///
      /// Locales: en, zh-Hant
      var groupQRCode: RswiftResources.StringResource { .init(key: "groupQRCode", tableName: "Localizable", source: source, developmentValue: "Group QR code", comment: nil) }

      /// en translation: Group note
      ///
      /// Key: groupRemark
      ///
      /// Locales: en, zh-Hant
      var groupRemark: RswiftResources.StringResource { .init(key: "groupRemark", tableName: "Localizable", source: source, developmentValue: "Group note", comment: nil) }

      /// en translation: "%@" request join to group "%@",accept？
      ///
      /// Key: groupRequestPrompt
      ///
      /// Locales: en, zh-Hant
      var groupRequestPrompt: RswiftResources.StringResource2<String, String> { .init(key: "groupRequestPrompt", tableName: "Localizable", source: source, developmentValue: "\"%@\" request join to group \"%@\",accept？", comment: nil) }

      /// en translation: Group Settings
      ///
      /// Key: groupSetting
      ///
      /// Locales: en, zh-Hant
      var groupSetting: RswiftResources.StringResource { .init(key: "groupSetting", tableName: "Localizable", source: source, developmentValue: "Group Settings", comment: nil) }

      /// en translation: Group chat name
      ///
      /// Key: groupSubject
      ///
      /// Locales: en, zh-Hant
      var groupSubject: RswiftResources.StringResource { .init(key: "groupSubject", tableName: "Localizable", source: source, developmentValue: "Group chat name", comment: nil) }

      /// en translation: Group receipt
      ///
      /// Key: groupSync
      ///
      /// Locales: en, zh-Hant
      var groupSync: RswiftResources.StringResource { .init(key: "groupSync", tableName: "Localizable", source: source, developmentValue: "Group receipt", comment: nil) }

      /// en translation: Failed to receive the red envelope
      ///
      /// Key: group_redpacket_receiver_failed
      ///
      /// Locales: en, zh-Hant
      var group_redpacket_receiver_failed: RswiftResources.StringResource { .init(key: "group_redpacket_receiver_failed", tableName: "Localizable", source: source, developmentValue: "Failed to receive the red envelope", comment: nil) }

      /// en translation: %1$s received %2$s of
      ///
      /// Key: group_redpacket_receiver_formate
      ///
      /// Locales: en, zh-Hant
      var group_redpacket_receiver_formate: RswiftResources.StringResource2<UnsafePointer<CChar>, UnsafePointer<CChar>> { .init(key: "group_redpacket_receiver_formate", tableName: "Localizable", source: source, developmentValue: "%1$s received %2$s of", comment: nil) }

      /// en translation: You received the one you sent
      ///
      /// Key: group_redpacket_receiver_formate3
      ///
      /// Locales: en, zh-Hant
      var group_redpacket_receiver_formate3: RswiftResources.StringResource { .init(key: "group_redpacket_receiver_formate3", tableName: "Localizable", source: source, developmentValue: "You received the one you sent", comment: nil) }

      /// en translation: %1$s received what you sent
      ///
      /// Key: group_redpacket_receiver_formate4
      ///
      /// Locales: en, zh-Hant
      var group_redpacket_receiver_formate4: RswiftResources.StringResource1<UnsafePointer<CChar>> { .init(key: "group_redpacket_receiver_formate4", tableName: "Localizable", source: source, developmentValue: "%1$s received what you sent", comment: nil) }

      /// en translation: %1$s received his
      ///
      /// Key: group_redpacket_receiver_formate5
      ///
      /// Locales: en, zh-Hant
      var group_redpacket_receiver_formate5: RswiftResources.StringResource1<UnsafePointer<CChar>> { .init(key: "group_redpacket_receiver_formate5", tableName: "Localizable", source: source, developmentValue: "%1$s received his", comment: nil) }

      /// en translation: You can set group related messages
      ///
      /// Key: group_related_messages
      ///
      /// Locales: en, zh-Hant
      var group_related_messages: RswiftResources.StringResource { .init(key: "group_related_messages", tableName: "Localizable", source: source, developmentValue: "You can set group related messages", comment: nil) }

      /// en translation: Group change callback: %@
      ///
      /// Key: groupchange
      ///
      /// Locales: en, zh-Hant
      var groupchange: RswiftResources.StringResource1<String> { .init(key: "groupchange", tableName: "Localizable", source: source, developmentValue: "Group change callback: %@", comment: nil) }

      /// en translation: Group level: %ld level
      ///
      /// Key: grouplevel
      ///
      /// Locales: en, zh-Hant
      var grouplevel: RswiftResources.StringResource1<Int> { .init(key: "grouplevel", tableName: "Localizable", source: source, developmentValue: "Group level: %ld level", comment: nil) }

      /// en translation: The following is the list of group level users you choose
      ///
      /// Key: grouplevellist
      ///
      /// Locales: en, zh-Hant
      var grouplevellist: RswiftResources.StringResource { .init(key: "grouplevellist", tableName: "Localizable", source: source, developmentValue: "The following is the list of group level users you choose", comment: nil) }

      /// en translation: Group mute list
      ///
      /// Key: groupmutes
      ///
      /// Locales: en, zh-Hant
      var groupmutes: RswiftResources.StringResource { .init(key: "groupmutes", tableName: "Localizable", source: source, developmentValue: "Group mute list", comment: nil) }

      /// en translation: Go and switch
      ///
      /// Key: guide_go_switch
      ///
      /// Locales: en, zh-Hant
      var guide_go_switch: RswiftResources.StringResource { .init(key: "guide_go_switch", tableName: "Localizable", source: source, developmentValue: "Go and switch", comment: nil) }

      /// en translation: Your current wallet is not the main wallet, please switch to the main wallet before operation
      ///
      /// Key: guide_set_main_wallet_desc
      ///
      /// Locales: en, zh-Hant
      var guide_set_main_wallet_desc: RswiftResources.StringResource { .init(key: "guide_set_main_wallet_desc", tableName: "Localizable", source: source, developmentValue: "Your current wallet is not the main wallet, please switch to the main wallet before operation", comment: nil) }

      /// en translation: Set up master wallet
      ///
      /// Key: guide_set_main_wallet_title
      ///
      /// Locales: en, zh-Hant
      var guide_set_main_wallet_title: RswiftResources.StringResource { .init(key: "guide_set_main_wallet_title", tableName: "Localizable", source: source, developmentValue: "Set up master wallet", comment: nil) }

      /// en translation: Half an hour ago
      ///
      /// Key: halfanhourago
      ///
      /// Locales: en, zh-Hant
      var halfanhourago: RswiftResources.StringResource { .init(key: "halfanhourago", tableName: "Localizable", source: source, developmentValue: "Half an hour ago", comment: nil) }

      /// en translation: Transferred
      ///
      /// Key: hastransferd
      ///
      /// Locales: en, zh-Hant
      var hastransferd: RswiftResources.StringResource { .init(key: "hastransferd", tableName: "Localizable", source: source, developmentValue: "Transferred", comment: nil) }

      /// en translation: Inviting friends requires that you have already bound your invitation to receive rewards~
      ///
      /// Key: have.parent.bind
      ///
      /// Locales: en, zh-Hant
      var haveParentBind: RswiftResources.StringResource { .init(key: "have.parent.bind", tableName: "Localizable", source: source, developmentValue: "Inviting friends requires that you have already bound your invitation to receive rewards~", comment: nil) }

      /// en translation: Ended
      ///
      /// Key: haveended
      ///
      /// Locales: en, zh-Hant
      var haveended: RswiftResources.StringResource { .init(key: "haveended", tableName: "Localizable", source: source, developmentValue: "Ended", comment: nil) }

      /// en translation: You haven't received a message yet
      ///
      /// Key: havenotreceivedmessage
      ///
      /// Locales: en, zh-Hant
      var havenotreceivedmessage: RswiftResources.StringResource { .init(key: "havenotreceivedmessage", tableName: "Localizable", source: source, developmentValue: "You haven't received a message yet", comment: nil) }

      /// en translation: Already claimed
      ///
      /// Key: havereceived
      ///
      /// Locales: en, zh-Hant
      var havereceived: RswiftResources.StringResource { .init(key: "havereceived", tableName: "Localizable", source: source, developmentValue: "Already claimed", comment: nil) }

      /// en translation: It will open at that time, so stay tuned
      ///
      /// Key: help.function.upgraded
      ///
      /// Locales: en, zh-Hant
      var helpFunctionUpgraded: RswiftResources.StringResource { .init(key: "help.function.upgraded", tableName: "Localizable", source: source, developmentValue: "It will open at that time, so stay tuned", comment: nil) }

      /// en translation: %@ Task: Engage in an effective interaction with friends and receive approximately %@ TOX rewards
      ///
      /// Key: hi.task.tips1
      ///
      /// Locales: en, zh-Hant
      var hiTaskTips1: RswiftResources.StringResource2<String, String> { .init(key: "hi.task.tips1", tableName: "Localizable", source: source, developmentValue: "%@ Task: Engage in an effective interaction with friends and receive approximately %@ TOX rewards", comment: nil) }

      /// en translation: Completed, received approximately %@ TOX reward, distributed tomorrow, next task time: %@
      ///
      /// Key: hi.task.tips2
      ///
      /// Locales: en, zh-Hant
      var hiTaskTips2: RswiftResources.StringResource2<String, String> { .init(key: "hi.task.tips2", tableName: "Localizable", source: source, developmentValue: "Completed, received approximately %@ TOX reward, distributed tomorrow, next task time: %@", comment: nil) }

      /// en translation: Say hello to friends
      ///
      /// Key: hi.your.friends
      ///
      /// Locales: en, zh-Hant
      var hiYourFriends: RswiftResources.StringResource { .init(key: "hi.your.friends", tableName: "Localizable", source: source, developmentValue: "Say hello to friends", comment: nil) }

      /// en translation: hide
      ///
      /// Key: hide
      ///
      /// Locales: en, zh-Hant
      var hide: RswiftResources.StringResource { .init(key: "hide", tableName: "Localizable", source: source, developmentValue: "hide", comment: nil) }

      /// en translation: Maximum Holding
      ///
      /// Key: highest_holding
      ///
      /// Locales: en, zh-Hant
      var highest_holding: RswiftResources.StringResource { .init(key: "highest_holding", tableName: "Localizable", source: source, developmentValue: "Maximum Holding", comment: nil) }

      /// en translation: My History
      ///
      /// Key: historyButton.imageLabel
      ///
      /// Locales: en, zh-Hant
      var historyButtonImageLabel: RswiftResources.StringResource { .init(key: "historyButton.imageLabel", tableName: "Localizable", source: source, developmentValue: "My History", comment: nil) }

      /// en translation: Hold down to speak
      ///
      /// Key: holdspeak
      ///
      /// Locales: en, zh-Hant
      var holdspeak: RswiftResources.StringResource { .init(key: "holdspeak", tableName: "Localizable", source: source, developmentValue: "Hold down to speak", comment: nil) }

      /// en translation: You currently hold the highest amount
      ///
      /// Key: holdtopaccount
      ///
      /// Locales: en, zh-Hant
      var holdtopaccount: RswiftResources.StringResource { .init(key: "holdtopaccount", tableName: "Localizable", source: source, developmentValue: "You currently hold the highest amount", comment: nil) }

      /// en translation: %ldHr
      ///
      /// Key: hour
      ///
      /// Locales: en, zh-Hant
      var hour: RswiftResources.StringResource1<Int> { .init(key: "hour", tableName: "Localizable", source: source, developmentValue: "%ldHr", comment: nil) }

      /// en translation: %Ld hours ago
      ///
      /// Key: hourago
      ///
      /// Locales: en, zh-Hant
      var hourago: RswiftResources.StringResource1<Int> { .init(key: "hourago", tableName: "Localizable", source: source, developmentValue: "%Ld hours ago", comment: nil) }

      /// en translation: Hour
      ///
      /// Key: hourshi
      ///
      /// Locales: en, zh-Hant
      var hourshi: RswiftResources.StringResource { .init(key: "hourshi", tableName: "Localizable", source: source, developmentValue: "Hour", comment: nil) }

      /// en translation: INTO IM %@
      ///
      /// Key: huanxinIM
      ///
      /// Locales: en, zh-Hant
      var huanxinIM: RswiftResources.StringResource1<String> { .init(key: "huanxinIM", tableName: "Localizable", source: source, developmentValue: "INTO IM %@", comment: nil) }

      /// en translation: Billion
      ///
      /// Key: hundredmillion
      ///
      /// Locales: en, zh-Hant
      var hundredmillion: RswiftResources.StringResource { .init(key: "hundredmillion", tableName: "Localizable", source: source, developmentValue: "Billion", comment: nil) }

      /// en translation: This document has been authenticated with real name
      ///
      /// Key: idhasbennauth
      ///
      /// Locales: en, zh-Hant
      var idhasbennauth: RswiftResources.StringResource { .init(key: "idhasbennauth", tableName: "Localizable", source: source, developmentValue: "This document has been authenticated with real name", comment: nil) }

      /// en translation: Image loading failed
      ///
      /// Key: imageloadingfailure
      ///
      /// Locales: en, zh-Hant
      var imageloadingfailure: RswiftResources.StringResource { .init(key: "imageloadingfailure", tableName: "Localizable", source: source, developmentValue: "Image loading failed", comment: nil) }

      /// en translation: Image loading failed. Please click to try again
      ///
      /// Key: imageloadingfailure.retry
      ///
      /// Locales: en, zh-Hant
      var imageloadingfailureRetry: RswiftResources.StringResource { .init(key: "imageloadingfailure.retry", tableName: "Localizable", source: source, developmentValue: "Image loading failed. Please click to try again", comment: nil) }

      /// en translation: Import Wallet
      ///
      /// Key: import.navigation.title
      ///
      /// Locales: en, zh-Hant
      var importNavigationTitle: RswiftResources.StringResource { .init(key: "import.navigation.title", tableName: "Localizable", source: source, developmentValue: "Import Wallet", comment: nil) }

      /// en translation: iCloud/Dropbox/Google Drive
      ///
      /// Key: importWallet.import.alertSheet.option.title
      ///
      /// Locales: en, zh-Hant
      var importWalletImportAlertSheetOptionTitle: RswiftResources.StringResource { .init(key: "importWallet.import.alertSheet.option.title", tableName: "Localizable", source: source, developmentValue: "iCloud/Dropbox/Google Drive", comment: nil) }

      /// en translation: Import Wallet Options
      ///
      /// Key: importWallet.import.alertSheet.title
      ///
      /// Locales: en, zh-Hant
      var importWalletImportAlertSheetTitle: RswiftResources.StringResource { .init(key: "importWallet.import.alertSheet.title", tableName: "Localizable", source: source, developmentValue: "Import Wallet Options", comment: nil) }

      /// en translation: Import
      ///
      /// Key: importWallet.import.button.title
      ///
      /// Locales: en, zh-Hant
      var importWalletImportButtonTitle: RswiftResources.StringResource { .init(key: "importWallet.import.button.title", tableName: "Localizable", source: source, developmentValue: "Import", comment: nil) }

      /// en translation: Import from iCloud/Dropbox/Google Drive
      ///
      /// Key: importWallet.import.fromCloud.title
      ///
      /// Locales: en, zh-Hant
      var importWalletImportFromCloudTitle: RswiftResources.StringResource { .init(key: "importWallet.import.fromCloud.title", tableName: "Localizable", source: source, developmentValue: "Import from iCloud/Dropbox/Google Drive", comment: nil) }

      /// en translation: Invalid Ethereum Address
      ///
      /// Key: importWallet.import.invalidAddress
      ///
      /// Locales: en, zh-Hant
      var importWalletImportInvalidAddress: RswiftResources.StringResource { .init(key: "importWallet.import.invalidAddress", tableName: "Localizable", source: source, developmentValue: "Invalid Ethereum Address", comment: nil) }

      /// en translation: Seed phrase is invalid
      ///
      /// Key: importWallet.import.invalidMnemonic
      ///
      /// Locales: en, zh-Hant
      var importWalletImportInvalidMnemonic: RswiftResources.StringResource { .init(key: "importWallet.import.invalidMnemonic", tableName: "Localizable", source: source, developmentValue: "Seed phrase is invalid", comment: nil) }

      /// en translation: Seed phrase has to be 12
      ///
      /// Key: importWallet.import.invalidMnemonicCount.12
      ///
      /// Locales: en, zh-Hant
      var importWalletImportInvalidMnemonicCount12: RswiftResources.StringResource { .init(key: "importWallet.import.invalidMnemonicCount.12", tableName: "Localizable", source: source, developmentValue: "Seed phrase has to be 12", comment: nil) }

      /// en translation: Seed phrase has to be 12 or 24 words
      ///
      /// Key: importWallet.import.invalidMnemonicCount.24
      ///
      /// Locales: en, zh-Hant
      var importWalletImportInvalidMnemonicCount24: RswiftResources.StringResource { .init(key: "importWallet.import.invalidMnemonicCount.24", tableName: "Localizable", source: source, developmentValue: "Seed phrase has to be 12 or 24 words", comment: nil) }

      /// en translation: Private Key has to be 64 characters long
      ///
      /// Key: importWallet.import.invalidPrivateKey
      ///
      /// Locales: en, zh-Hant
      var importWalletImportInvalidPrivateKey: RswiftResources.StringResource { .init(key: "importWallet.import.invalidPrivateKey", tableName: "Localizable", source: source, developmentValue: "Private Key has to be 64 characters long", comment: nil) }

      /// en translation: If your seed phrase is not in English, please convert it to English first
      ///
      /// Key: importWallet.import.seedPhrase.description
      ///
      /// Locales: en, zh-Hant
      var importWalletImportSeedPhraseDescription: RswiftResources.StringResource { .init(key: "importWallet.import.seedPhrase.description", tableName: "Localizable", source: source, developmentValue: "If your seed phrase is not in English, please convert it to English first", comment: nil) }

      /// en translation: Importing wallet...
      ///
      /// Key: importWallet.importingIndicator.label.title
      ///
      /// Locales: en, zh-Hant
      var importWalletImportingIndicatorLabelTitle: RswiftResources.StringResource { .init(key: "importWallet.importingIndicator.label.title", tableName: "Localizable", source: source, developmentValue: "Importing wallet...", comment: nil) }

      /// en translation: You can import the seed phrase or private key of any wallet
      ///
      /// Key: import_seed_phrase__key
      ///
      /// Locales: en, zh-Hant
      var import_seed_phrase__key: RswiftResources.StringResource { .init(key: "import_seed_phrase__key", tableName: "Localizable", source: source, developmentValue: "You can import the seed phrase or private key of any wallet", comment: nil) }

      /// en translation: You can import the seed phrase or private key of any wallet
      ///
      /// Key: import_seed_phrase_key
      ///
      /// Locales: en, zh-Hant
      var import_seed_phrase_key: RswiftResources.StringResource { .init(key: "import_seed_phrase_key", tableName: "Localizable", source: source, developmentValue: "You can import the seed phrase or private key of any wallet", comment: nil) }

      /// en translation: This friend is on the blocklist.
      ///
      /// Key: inBlackList
      ///
      /// Locales: en, zh-Hant
      var inBlackList: RswiftResources.StringResource { .init(key: "inBlackList", tableName: "Localizable", source: source, developmentValue: "This friend is on the blocklist.", comment: nil) }

      /// en translation: Under assessment
      ///
      /// Key: in_assessment
      ///
      /// Locales: en, zh-Hant
      var in_assessment: RswiftResources.StringResource { .init(key: "in_assessment", tableName: "Localizable", source: source, developmentValue: "Under assessment", comment: nil) }

      /// en translation: INID Associated
      ///
      /// Key: inid_associated
      ///
      /// Locales: en, zh-Hant
      var inid_associated: RswiftResources.StringResource { .init(key: "inid_associated", tableName: "Localizable", source: source, developmentValue: "INID Associated", comment: nil) }

      /// en translation: Operation guide
      ///
      /// Key: inky_controls
      ///
      /// Locales: en, zh-Hant
      var inky_controls: RswiftResources.StringResource { .init(key: "inky_controls", tableName: "Localizable", source: source, developmentValue: "Operation guide", comment: nil) }

      /// en translation: I'm your guide Inky! %@:
      ///
      /// Key: inky_controls_tips
      ///
      /// Locales: en, zh-Hant
      var inky_controls_tips: RswiftResources.StringResource1<String> { .init(key: "inky_controls_tips", tableName: "Localizable", source: source, developmentValue: "I'm your guide Inky! %@:", comment: nil) }

      /// en translation: Inky-GPT provides you with comprehensive aspect group management assistance:
      ///
      /// Key: inky_group_tips
      ///
      /// Locales: en, zh-Hant
      var inky_group_tips: RswiftResources.StringResource { .init(key: "inky_group_tips", tableName: "Localizable", source: source, developmentValue: "Inky-GPT provides you with comprehensive aspect group management assistance:", comment: nil) }

      /// en translation: View Details
      ///
      /// Key: inky_guide_answer_details
      ///
      /// Locales: en, zh-Hant
      var inky_guide_answer_details: RswiftResources.StringResource { .init(key: "inky_guide_answer_details", tableName: "Localizable", source: source, developmentValue: "View Details", comment: nil) }

      /// en translation: Click to learn the operation guide of the corresponding function
      ///
      /// Key: inky_guide_tips_click
      ///
      /// Locales: en, zh-Hant
      var inky_guide_tips_click: RswiftResources.StringResource { .init(key: "inky_guide_tips_click", tableName: "Localizable", source: source, developmentValue: "Click to learn the operation guide of the corresponding function", comment: nil) }

      /// en translation: Quick how to guide
      ///
      /// Key: inky_guide_tips_fast
      ///
      /// Locales: en, zh-Hant
      var inky_guide_tips_fast: RswiftResources.StringResource { .init(key: "inky_guide_tips_fast", tableName: "Localizable", source: source, developmentValue: "Quick how to guide", comment: nil) }

      /// en translation: Typing...
      ///
      /// Key: inky_inputing
      ///
      /// Locales: en, zh-Hant
      var inky_inputing: RswiftResources.StringResource { .init(key: "inky_inputing", tableName: "Localizable", source: source, developmentValue: "Typing...", comment: nil) }

      /// en translation: Share Contacts
      ///
      /// Key: inky_share_friends
      ///
      /// Locales: en, zh-Hant
      var inky_share_friends: RswiftResources.StringResource { .init(key: "inky_share_friends", tableName: "Localizable", source: source, developmentValue: "Share Contacts", comment: nil) }

      /// en translation: Please enter user INID
      ///
      /// Key: inky_share_friends_input_inid
      ///
      /// Locales: en, zh-Hant
      var inky_share_friends_input_inid: RswiftResources.StringResource { .init(key: "inky_share_friends_input_inid", tableName: "Localizable", source: source, developmentValue: "Please enter user INID", comment: nil) }

      /// en translation: You can share the current
      ///
      /// Key: inky_share_friends_title
      ///
      /// Locales: en, zh-Hant
      var inky_share_friends_title: RswiftResources.StringResource { .init(key: "inky_share_friends_title", tableName: "Localizable", source: source, developmentValue: "You can share the current", comment: nil) }

      /// en translation: friends with other users
      ///
      /// Key: inky_share_friends_title_end
      ///
      /// Locales: en, zh-Hant
      var inky_share_friends_title_end: RswiftResources.StringResource { .init(key: "inky_share_friends_title_end", tableName: "Localizable", source: source, developmentValue: "friends with other users", comment: nil) }

      /// en translation: Input appkey
      ///
      /// Key: inputAppkey
      ///
      /// Locales: en, zh-Hant
      var inputAppkey: RswiftResources.StringResource { .init(key: "inputAppkey", tableName: "Localizable", source: source, developmentValue: "Input appkey", comment: nil) }

      /// en translation: Enter the chat room announcement
      ///
      /// Key: inputChatroomAnnounment
      ///
      /// Locales: en, zh-Hant
      var inputChatroomAnnounment: RswiftResources.StringResource { .init(key: "inputChatroomAnnounment", tableName: "Localizable", source: source, developmentValue: "Enter the chat room announcement", comment: nil) }

      /// en translation: Member quantity：3-1000
      ///
      /// Key: inputChatroomMembrCounts
      ///
      /// Locales: en, zh-Hant
      var inputChatroomMembrCounts: RswiftResources.StringResource { .init(key: "inputChatroomMembrCounts", tableName: "Localizable", source: source, developmentValue: "Member quantity：3-1000", comment: nil) }

      /// en translation: Enter the email address
      ///
      /// Key: inputEmail
      ///
      /// Locales: en, zh-Hant
      var inputEmail: RswiftResources.StringResource { .init(key: "inputEmail", tableName: "Localizable", source: source, developmentValue: "Enter the email address", comment: nil) }

      /// en translation: Enter the group announcement
      ///
      /// Key: inputGroupAnn
      ///
      /// Locales: en, zh-Hant
      var inputGroupAnn: RswiftResources.StringResource { .init(key: "inputGroupAnn", tableName: "Localizable", source: source, developmentValue: "Enter the group announcement", comment: nil) }

      /// en translation: Enter the group introduction
      ///
      /// Key: inputGroupDescription
      ///
      /// Locales: en, zh-Hant
      var inputGroupDescription: RswiftResources.StringResource { .init(key: "inputGroupDescription", tableName: "Localizable", source: source, developmentValue: "Enter the group introduction", comment: nil) }

      /// en translation: Input member quantity 3-3000
      ///
      /// Key: inputGroupMemCount
      ///
      /// Locales: en, zh-Hant
      var inputGroupMemCount: RswiftResources.StringResource { .init(key: "inputGroupMemCount", tableName: "Localizable", source: source, developmentValue: "Input member quantity 3-3000", comment: nil) }

      /// en translation: Enter your alias
      ///
      /// Key: inputGroupNickname
      ///
      /// Locales: en, zh-Hant
      var inputGroupNickname: RswiftResources.StringResource { .init(key: "inputGroupNickname", tableName: "Localizable", source: source, developmentValue: "Enter your alias", comment: nil) }

      /// en translation: Enter the group chat name
      ///
      /// Key: inputGroupSubject
      ///
      /// Locales: en, zh-Hant
      var inputGroupSubject: RswiftResources.StringResource { .init(key: "inputGroupSubject", tableName: "Localizable", source: source, developmentValue: "Enter the group chat name", comment: nil) }

      /// en translation: Input msg.
      ///
      /// Key: inputMsg.
      ///
      /// Locales: en, zh-Hant
      var inputMsg: RswiftResources.StringResource { .init(key: "inputMsg.", tableName: "Localizable", source: source, developmentValue: "Input msg.", comment: nil) }

      /// en translation: Enter the message content
      ///
      /// Key: inputMsgContent
      ///
      /// Locales: en, zh-Hant
      var inputMsgContent: RswiftResources.StringResource { .init(key: "inputMsgContent", tableName: "Localizable", source: source, developmentValue: "Enter the message content", comment: nil) }

      /// en translation: Enter the nickname
      ///
      /// Key: inputNickname
      ///
      /// Locales: en, zh-Hant
      var inputNickname: RswiftResources.StringResource { .init(key: "inputNickname", tableName: "Localizable", source: source, developmentValue: "Enter the nickname", comment: nil) }

      /// en translation: Enter current account password
      ///
      /// Key: inputPwd
      ///
      /// Locales: en, zh-Hant
      var inputPwd: RswiftResources.StringResource { .init(key: "inputPwd", tableName: "Localizable", source: source, developmentValue: "Enter current account password", comment: nil) }

      /// en translation: Enter your QQ number
      ///
      /// Key: inputQQ
      ///
      /// Locales: en, zh-Hant
      var inputQQ: RswiftResources.StringResource { .init(key: "inputQQ", tableName: "Localizable", source: source, developmentValue: "Enter your QQ number", comment: nil) }

      /// en translation: Enter the search content
      ///
      /// Key: inputSearchContent
      ///
      /// Locales: en, zh-Hant
      var inputSearchContent: RswiftResources.StringResource { .init(key: "inputSearchContent", tableName: "Localizable", source: source, developmentValue: "Enter the search content", comment: nil) }

      /// en translation: Please enter the INID of the receiving user
      ///
      /// Key: input_inid
      ///
      /// Locales: en, zh-Hant
      var input_inid: RswiftResources.StringResource { .init(key: "input_inid", tableName: "Localizable", source: source, developmentValue: "Please enter the INID of the receiving user", comment: nil) }

      /// en translation: Please enter the address of the friend who received the medal
      ///
      /// Key: inputaddress
      ///
      /// Locales: en, zh-Hant
      var inputaddress: RswiftResources.StringResource { .init(key: "inputaddress", tableName: "Localizable", source: source, developmentValue: "Please enter the address of the friend who received the medal", comment: nil) }

      /// en translation: Enter the chat room name
      ///
      /// Key: inputchatroomSubject
      ///
      /// Locales: en, zh-Hant
      var inputchatroomSubject: RswiftResources.StringResource { .init(key: "inputchatroomSubject", tableName: "Localizable", source: source, developmentValue: "Enter the chat room name", comment: nil) }

      /// en translation: Please enter the transfer quantity
      ///
      /// Key: inputtransferamount
      ///
      /// Locales: en, zh-Hant
      var inputtransferamount: RswiftResources.StringResource { .init(key: "inputtransferamount", tableName: "Localizable", source: source, developmentValue: "Please enter the transfer quantity", comment: nil) }

      /// en translation: Instagram
      ///
      /// Key: instagram
      ///
      /// Locales: en, zh-Hant
      var instagram: RswiftResources.StringResource { .init(key: "instagram", tableName: "Localizable", source: source, developmentValue: "Instagram", comment: nil) }

      /// en translation: Scan the QR code on the INTO Console quick integration page.
      ///
      /// Key: installPrompt
      ///
      /// Locales: en, zh-Hant
      var installPrompt: RswiftResources.StringResource { .init(key: "installPrompt", tableName: "Localizable", source: source, developmentValue: "Scan the QR code on the INTO Console quick integration page.", comment: nil) }

      /// en translation: Current balance is insufficient
      ///
      /// Key: insufficient
      ///
      /// Locales: en, zh-Hant
      var insufficient: RswiftResources.StringResource { .init(key: "insufficient", tableName: "Localizable", source: source, developmentValue: "Current balance is insufficient", comment: nil) }

      /// en translation: Insufficient account balance
      ///
      /// Key: insufficient.account.balance
      ///
      /// Locales: en, zh-Hant
      var insufficientAccountBalance: RswiftResources.StringResource { .init(key: "insufficient.account.balance", tableName: "Localizable", source: source, developmentValue: "Insufficient account balance", comment: nil) }

      /// en translation: Internal server error
      ///
      /// Key: internalError
      ///
      /// Locales: en, zh-Hant
      var internalError: RswiftResources.StringResource { .init(key: "internalError", tableName: "Localizable", source: source, developmentValue: "Internal server error", comment: nil) }

      /// en translation: Authorization failed
      ///
      /// Key: into.approve.failed
      ///
      /// Locales: en, zh-Hant
      var intoApproveFailed: RswiftResources.StringResource { .init(key: "into.approve.failed", tableName: "Localizable", source: source, developmentValue: "Authorization failed", comment: nil) }

      /// en translation: Authorization successful
      ///
      /// Key: into.approve.suc
      ///
      /// Locales: en, zh-Hant
      var intoApproveSuc: RswiftResources.StringResource { .init(key: "into.approve.suc", tableName: "Localizable", source: source, developmentValue: "Authorization successful", comment: nil) }

      /// en translation: Cloud Backup
      ///
      /// Key: into.backup.cloudbtntitle
      ///
      /// Locales: en, zh-Hant
      var intoBackupCloudbtntitle: RswiftResources.StringResource { .init(key: "into.backup.cloudbtntitle", tableName: "Localizable", source: source, developmentValue: "Cloud Backup", comment: nil) }

      /// en translation: Add friend
      ///
      /// Key: into.chat.addFriend
      ///
      /// Locales: en, zh-Hant
      var intoChatAddFriend: RswiftResources.StringResource { .init(key: "into.chat.addFriend", tableName: "Localizable", source: source, developmentValue: "Add friend", comment: nil) }

      /// en translation: Project group building
      ///
      /// Key: into.chat.creatProjectTeam
      ///
      /// Locales: en, zh-Hant
      var intoChatCreatProjectTeam: RswiftResources.StringResource { .init(key: "into.chat.creatProjectTeam", tableName: "Localizable", source: source, developmentValue: "Project group building", comment: nil) }

      /// en translation: Create group
      ///
      /// Key: into.chat.creatTeam
      ///
      /// Locales: en, zh-Hant
      var intoChatCreatTeam: RswiftResources.StringResource { .init(key: "into.chat.creatTeam", tableName: "Localizable", source: source, developmentValue: "Create group", comment: nil) }

      /// en translation: Scan
      ///
      /// Key: into.chat.scan
      ///
      /// Locales: en, zh-Hant
      var intoChatScan: RswiftResources.StringResource { .init(key: "into.chat.scan", tableName: "Localizable", source: source, developmentValue: "Scan", comment: nil) }

      /// en translation: Start entering
      ///
      /// Key: into.guide.enter.title
      ///
      /// Locales: en, zh-Hant
      var intoGuideEnterTitle: RswiftResources.StringResource { .init(key: "into.guide.enter.title", tableName: "Localizable", source: source, developmentValue: "Start entering", comment: nil) }

      /// en translation: Free group chat
      ///
      /// Key: into.guide.tip
      ///
      /// Locales: en, zh-Hant
      var intoGuideTip: RswiftResources.StringResource { .init(key: "into.guide.tip", tableName: "Localizable", source: source, developmentValue: "Free group chat", comment: nil) }

      /// en translation: User Agreement
      ///
      /// Key: into.guide.useragreement
      ///
      /// Locales: en, zh-Hant
      var intoGuideUseragreement: RswiftResources.StringResource { .init(key: "into.guide.useragreement", tableName: "Localizable", source: source, developmentValue: "User Agreement", comment: nil) }

      /// en translation: Please review and agree to the user agreement
      ///
      /// Key: into.guide.useragreement.read
      ///
      /// Locales: en, zh-Hant
      var intoGuideUseragreementRead: RswiftResources.StringResource { .init(key: "into.guide.useragreement.read", tableName: "Localizable", source: source, developmentValue: "Please review and agree to the user agreement", comment: nil) }

      /// en translation: I have carefully read and agree
      ///
      /// Key: into.guide.useragreement.tip
      ///
      /// Locales: en, zh-Hant
      var intoGuideUseragreementTip: RswiftResources.StringResource { .init(key: "into.guide.useragreement.tip", tableName: "Localizable", source: source, developmentValue: "I have carefully read and agree", comment: nil) }

      /// en translation: Invitation code
      ///
      /// Key: into.invite.code
      ///
      /// Locales: en, zh-Hant
      var intoInviteCode: RswiftResources.StringResource { .init(key: "into.invite.code", tableName: "Localizable", source: source, developmentValue: "Invitation code", comment: nil) }

      /// en translation: Me
      ///
      /// Key: into.setting.title
      ///
      /// Locales: en, zh-Hant
      var intoSettingTitle: RswiftResources.StringResource { .init(key: "into.setting.title", tableName: "Localizable", source: source, developmentValue: "Me", comment: nil) }

      /// en translation: Chat
      ///
      /// Key: into.tabbar.chat.title
      ///
      /// Locales: en, zh-Hant
      var intoTabbarChatTitle: RswiftResources.StringResource { .init(key: "into.tabbar.chat.title", tableName: "Localizable", source: source, developmentValue: "Chat", comment: nil) }

      /// en translation: Contacts
      ///
      /// Key: into.tabbar.contacts.title
      ///
      /// Locales: en, zh-Hant
      var intoTabbarContactsTitle: RswiftResources.StringResource { .init(key: "into.tabbar.contacts.title", tableName: "Localizable", source: source, developmentValue: "Contacts", comment: nil) }

      /// en translation: Find
      ///
      /// Key: into.tabbar.find.title
      ///
      /// Locales: en, zh-Hant
      var intoTabbarFindTitle: RswiftResources.StringResource { .init(key: "into.tabbar.find.title", tableName: "Localizable", source: source, developmentValue: "Find", comment: nil) }

      /// en translation: Setting
      ///
      /// Key: into.wallet.setting
      ///
      /// Locales: en, zh-Hant
      var intoWalletSetting: RswiftResources.StringResource { .init(key: "into.wallet.setting", tableName: "Localizable", source: source, developmentValue: "Setting", comment: nil) }

      /// en translation: Backup
      ///
      /// Key: into.walletaction.backup
      ///
      /// Locales: en, zh-Hant
      var intoWalletactionBackup: RswiftResources.StringResource { .init(key: "into.walletaction.backup", tableName: "Localizable", source: source, developmentValue: "Backup", comment: nil) }

      /// en translation: bind
      ///
      /// Key: into.walletaction.bind
      ///
      /// Locales: en, zh-Hant
      var intoWalletactionBind: RswiftResources.StringResource { .init(key: "into.walletaction.bind", tableName: "Localizable", source: source, developmentValue: "bind", comment: nil) }

      /// en translation: SBT
      ///
      /// Key: into.walletaction.did
      ///
      /// Locales: en, zh-Hant
      var intoWalletactionDid: RswiftResources.StringResource { .init(key: "into.walletaction.did", tableName: "Localizable", source: source, developmentValue: "SBT", comment: nil) }

      /// en translation: Translate into Chinese
      ///
      /// Key: intoChinese
      ///
      /// Locales: en, zh-Hant
      var intoChinese: RswiftResources.StringResource { .init(key: "intoChinese", tableName: "Localizable", source: source, developmentValue: "Translate into Chinese", comment: nil) }

      /// en translation: Translate into English
      ///
      /// Key: intoEnglish
      ///
      /// Locales: en, zh-Hant
      var intoEnglish: RswiftResources.StringResource { .init(key: "intoEnglish", tableName: "Localizable", source: source, developmentValue: "Translate into English", comment: nil) }

      /// en translation: INTO robot
      ///
      /// Key: intoRobot.text
      ///
      /// Locales: en, zh-Hant
      var intoRobotText: RswiftResources.StringResource { .init(key: "intoRobot.text", tableName: "Localizable", source: source, developmentValue: "INTO robot", comment: nil) }

      /// en translation: [Delete]
      ///
      /// Key: intodelete
      ///
      /// Locales: en, zh-Hant
      var intodelete: RswiftResources.StringResource { .init(key: "intodelete", tableName: "Localizable", source: source, developmentValue: "[Delete]", comment: nil) }

      /// en translation: Invalid wallet address
      ///
      /// Key: invalid.address
      ///
      /// Locales: en, zh-Hant
      var invalidAddress: RswiftResources.StringResource { .init(key: "invalid.address", tableName: "Localizable", source: source, developmentValue: "Invalid wallet address", comment: nil) }

      /// en translation: Invited to attend
      ///
      /// Key: invite
      ///
      /// Locales: en, zh-Hant
      var invite: RswiftResources.StringResource { .init(key: "invite", tableName: "Localizable", source: source, developmentValue: "Invited to attend", comment: nil) }

      /// en translation: Send friend request...
      ///
      /// Key: inviteContacting
      ///
      /// Locales: en, zh-Hant
      var inviteContacting: RswiftResources.StringResource { .init(key: "inviteContacting", tableName: "Localizable", source: source, developmentValue: "Send friend request...", comment: nil) }

      /// en translation: Invite member
      ///
      /// Key: inviteMembers
      ///
      /// Locales: en, zh-Hant
      var inviteMembers: RswiftResources.StringResource { .init(key: "inviteMembers", tableName: "Localizable", source: source, developmentValue: "Invite member", comment: nil) }

      /// en translation: Invite friends
      ///
      /// Key: invitefriend
      ///
      /// Locales: en, zh-Hant
      var invitefriend: RswiftResources.StringResource { .init(key: "invitefriend", tableName: "Localizable", source: source, developmentValue: "Invite friends", comment: nil) }

      /// en translation: Invite you to join group %@ ,do you accept?
      ///
      /// Key: inviteing
      ///
      /// Locales: en, zh-Hant
      var inviteing: RswiftResources.StringResource1<String> { .init(key: "inviteing", tableName: "Localizable", source: source, developmentValue: "Invite you to join group %@ ,do you accept?", comment: nil) }

      /// en translation: You have been added to the allowlist.
      ///
      /// Key: inwhitelist
      ///
      /// Locales: en, zh-Hant
      var inwhitelist: RswiftResources.StringResource { .init(key: "inwhitelist", tableName: "Localizable", source: source, developmentValue: "You have been added to the allowlist.", comment: nil) }

      /// en translation: Public group
      ///
      /// Key: isPublic
      ///
      /// Locales: en, zh-Hant
      var isPublic: RswiftResources.StringResource { .init(key: "isPublic", tableName: "Localizable", source: source, developmentValue: "Public group", comment: nil) }

      /// en translation: I see
      ///
      /// Key: isee
      ///
      /// Locales: en, zh-Hant
      var isee: RswiftResources.StringResource { .init(key: "isee", tableName: "Localizable", source: source, developmentValue: "I see", comment: nil) }

      /// en translation: Join
      ///
      /// Key: join
      ///
      /// Locales: en, zh-Hant
      var join: RswiftResources.StringResource { .init(key: "join", tableName: "Localizable", source: source, developmentValue: "Join", comment: nil) }

      /// en translation: Join the world of INTO together!
      ///
      /// Key: join.into
      ///
      /// Locales: en, zh-Hant
      var joinInto: RswiftResources.StringResource { .init(key: "join.into", tableName: "Localizable", source: source, developmentValue: "Join the world of INTO together!", comment: nil) }

      /// en translation: %@ joined the chat room
      ///
      /// Key: joinChatroomPrompt
      ///
      /// Locales: en, zh-Hant
      var joinChatroomPrompt: RswiftResources.StringResource1<String> { .init(key: "joinChatroomPrompt", tableName: "Localizable", source: source, developmentValue: "%@ joined the chat room", comment: nil) }

      /// en translation: Join group
      ///
      /// Key: joinGroup
      ///
      /// Locales: en, zh-Hant
      var joinGroup: RswiftResources.StringResource { .init(key: "joinGroup", tableName: "Localizable", source: source, developmentValue: "Join group", comment: nil) }

      /// en translation: Failed to join group
      ///
      /// Key: joinGroupFail
      ///
      /// Locales: en, zh-Hant
      var joinGroupFail: RswiftResources.StringResource { .init(key: "joinGroupFail", tableName: "Localizable", source: source, developmentValue: "Failed to join group", comment: nil) }

      /// en translation: You've joined the group 「%@」
      ///
      /// Key: joinGroupPrompt
      ///
      /// Locales: en, zh-Hant
      var joinGroupPrompt: RswiftResources.StringResource1<String> { .init(key: "joinGroupPrompt", tableName: "Localizable", source: source, developmentValue: "You've joined the group 「%@」", comment: nil) }

      /// en translation: Verification required for joining group
      ///
      /// Key: joinNeedAllow
      ///
      /// Locales: en, zh-Hant
      var joinNeedAllow: RswiftResources.StringResource { .init(key: "joinNeedAllow", tableName: "Localizable", source: source, developmentValue: "Verification required for joining group", comment: nil) }

      /// en translation: Group owner must approve new members
      ///
      /// Key: joinNeedOwnerAgre
      ///
      /// Locales: en, zh-Hant
      var joinNeedOwnerAgre: RswiftResources.StringResource { .init(key: "joinNeedOwnerAgre", tableName: "Localizable", source: source, developmentValue: "Group owner must approve new members", comment: nil) }

      /// en translation: Join the community to understand the latest news
      ///
      /// Key: join_community_latest_news
      ///
      /// Locales: en, zh-Hant
      var join_community_latest_news: RswiftResources.StringResource { .init(key: "join_community_latest_news", tableName: "Localizable", source: source, developmentValue: "Join the community to understand the latest news", comment: nil) }

      /// en translation: Participation Time：%@
      ///
      /// Key: join_date
      ///
      /// Locales: en, zh-Hant
      var join_date: RswiftResources.StringResource1<String> { .init(key: "join_date", tableName: "Localizable", source: source, developmentValue: "Participation Time：%@", comment: nil) }

      /// en translation: Join
      ///
      /// Key: join_ing
      ///
      /// Locales: en, zh-Hant
      var join_ing: RswiftResources.StringResource { .init(key: "join_ing", tableName: "Localizable", source: source, developmentValue: "Join", comment: nil) }

      /// en translation: After successfully participating, you can check the campaign-related status in My Participation
      ///
      /// Key: join_notice
      ///
      /// Locales: en, zh-Hant
      var join_notice: RswiftResources.StringResource { .init(key: "join_notice", tableName: "Localizable", source: source, developmentValue: "After successfully participating, you can check the campaign-related status in My Participation", comment: nil) }

      /// en translation: Participation Details
      ///
      /// Key: join_plan
      ///
      /// Locales: en, zh-Hant
      var join_plan: RswiftResources.StringResource { .init(key: "join_plan", tableName: "Localizable", source: source, developmentValue: "Participation Details", comment: nil) }

      /// en translation: Participate
      ///
      /// Key: join_staking
      ///
      /// Locales: en, zh-Hant
      var join_staking: RswiftResources.StringResource { .init(key: "join_staking", tableName: "Localizable", source: source, developmentValue: "Participate", comment: nil) }

      /// en translation: Joined
      ///
      /// Key: joined
      ///
      /// Locales: en, zh-Hant
      var joined: RswiftResources.StringResource { .init(key: "joined", tableName: "Localizable", source: source, developmentValue: "Joined", comment: nil) }

      /// en translation: Joined
      ///
      /// Key: joined_fished
      ///
      /// Locales: en, zh-Hant
      var joined_fished: RswiftResources.StringResource { .init(key: "joined_fished", tableName: "Localizable", source: source, developmentValue: "Joined", comment: nil) }

      /// en translation: Join group...
      ///
      /// Key: joiningGrouping
      ///
      /// Locales: en, zh-Hant
      var joiningGrouping: RswiftResources.StringResource { .init(key: "joiningGrouping", tableName: "Localizable", source: source, developmentValue: "Join group...", comment: nil) }

      /// en translation: Please wait
      ///
      /// Key: justamoment
      ///
      /// Locales: en, zh-Hant
      var justamoment: RswiftResources.StringResource { .init(key: "justamoment", tableName: "Localizable", source: source, developmentValue: "Please wait", comment: nil) }

      /// en translation: Just now
      ///
      /// Key: justnow
      ///
      /// Locales: en, zh-Hant
      var justnow: RswiftResources.StringResource { .init(key: "justnow", tableName: "Localizable", source: source, developmentValue: "Just now", comment: nil) }

      /// en translation: cryptokitties
      ///
      /// Key: kat.lowercase
      ///
      /// Locales: en, zh-Hant
      var katLowercase: RswiftResources.StringResource { .init(key: "kat.lowercase", tableName: "Localizable", source: source, developmentValue: "cryptokitties", comment: nil) }

      /// en translation: Cryptokitty
      ///
      /// Key: kat.titlecase
      ///
      /// Locales: en, zh-Hant
      var katTitlecase: RswiftResources.StringResource { .init(key: "kat.titlecase", tableName: "Localizable", source: source, developmentValue: "Cryptokitty", comment: nil) }

      /// en translation: You have denied access to your wallet
      ///
      /// Key: keystore.accessKey.cancelled
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyCancelled: RswiftResources.StringResource { .init(key: "keystore.accessKey.cancelled", tableName: "Localizable", source: source, developmentValue: "You have denied access to your wallet", comment: nil) }

      /// en translation: Accessing your wallet seed phrase to back it up
      ///
      /// Key: keystore.accessKey.hd.backup
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyHdBackup: RswiftResources.StringResource { .init(key: "keystore.accessKey.hd.backup", tableName: "Localizable", source: source, developmentValue: "Accessing your wallet seed phrase to back it up", comment: nil) }

      /// en translation: To lock your seed phrase to increase security
      ///
      /// Key: keystore.accessKey.hd.lock
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyHdLock: RswiftResources.StringResource { .init(key: "keystore.accessKey.hd.lock", tableName: "Localizable", source: source, developmentValue: "To lock your seed phrase to increase security", comment: nil) }

      /// en translation: Accessing your wallet seed phrase to let you verify against it
      ///
      /// Key: keystore.accessKey.hd.prepareToVerify
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyHdPrepareToVerify: RswiftResources.StringResource { .init(key: "keystore.accessKey.hd.prepareToVerify", tableName: "Localizable", source: source, developmentValue: "Accessing your wallet seed phrase to let you verify against it", comment: nil) }

      /// en translation: Accessing your wallet seed phrase to verify against it
      ///
      /// Key: keystore.accessKey.hd.verify
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyHdVerify: RswiftResources.StringResource { .init(key: "keystore.accessKey.hd.verify", tableName: "Localizable", source: source, developmentValue: "Accessing your wallet seed phrase to verify against it", comment: nil) }

      /// en translation: Can't lock your wallet key. Maybe your iOS Passcode is not enabled?
      ///
      /// Key: keystore.accessKey.lock.fail
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyLockFail: RswiftResources.StringResource { .init(key: "keystore.accessKey.lock.fail", tableName: "Localizable", source: source, developmentValue: "Can't lock your wallet key. Maybe your iOS Passcode is not enabled?", comment: nil) }

      /// en translation: Can't access your wallet. If you have migrated to a new phone or restored your device, you need to import your wallet again
      ///
      /// Key: keystore.accessKey.needImportOrPasscode
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyNeedImportOrPasscode: RswiftResources.StringResource { .init(key: "keystore.accessKey.needImportOrPasscode", tableName: "Localizable", source: source, developmentValue: "Can't access your wallet. If you have migrated to a new phone or restored your device, you need to import your wallet again", comment: nil) }

      /// en translation: Accessing your wallet key to back it up
      ///
      /// Key: keystore.accessKey.nonHd.backup
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyNonHdBackup: RswiftResources.StringResource { .init(key: "keystore.accessKey.nonHd.backup", tableName: "Localizable", source: source, developmentValue: "Accessing your wallet key to back it up", comment: nil) }

      /// en translation: To lock your private key to increase security
      ///
      /// Key: keystore.accessKey.nonHd.lock
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeyNonHdLock: RswiftResources.StringResource { .init(key: "keystore.accessKey.nonHd.lock", tableName: "Localizable", source: source, developmentValue: "To lock your private key to increase security", comment: nil) }

      /// en translation: Accessing your wallet key to sign
      ///
      /// Key: keystore.accessKey.sign
      ///
      /// Locales: en, zh-Hant
      var keystoreAccessKeySign: RswiftResources.StringResource { .init(key: "keystore.accessKey.sign", tableName: "Localizable", source: source, developmentValue: "Accessing your wallet key to sign", comment: nil) }

      /// en translation: Lock Private Key
      ///
      /// Key: keystore.lock.wallet.privateKey.button
      ///
      /// Locales: en, zh-Hant
      var keystoreLockWalletPrivateKeyButton: RswiftResources.StringResource { .init(key: "keystore.lock.wallet.privateKey.button", tableName: "Localizable", source: source, developmentValue: "Lock Private Key", comment: nil) }

      /// en translation: INTO security is being upgraded to the best achievable. Lock your private key with biometrics
      ///
      /// Key: keystore.lock.wallet.privateKey.description
      ///
      /// Locales: en, zh-Hant
      var keystoreLockWalletPrivateKeyDescription: RswiftResources.StringResource { .init(key: "keystore.lock.wallet.privateKey.description", tableName: "Localizable", source: source, developmentValue: "INTO security is being upgraded to the best achievable. Lock your private key with biometrics", comment: nil) }

      /// en translation: Lock your Private Key to Increase Security
      ///
      /// Key: keystore.lock.wallet.privateKey.title
      ///
      /// Locales: en, zh-Hant
      var keystoreLockWalletPrivateKeyTitle: RswiftResources.StringResource { .init(key: "keystore.lock.wallet.privateKey.title", tableName: "Localizable", source: source, developmentValue: "Lock your Private Key to Increase Security", comment: nil) }

      /// en translation: Lock Seed Phrase
      ///
      /// Key: keystore.lock.wallet.seed.button
      ///
      /// Locales: en, zh-Hant
      var keystoreLockWalletSeedButton: RswiftResources.StringResource { .init(key: "keystore.lock.wallet.seed.button", tableName: "Localizable", source: source, developmentValue: "Lock Seed Phrase", comment: nil) }

      /// en translation: INTO security is being upgraded to the best achievable. Lock your seed phrase with biometrics
      ///
      /// Key: keystore.lock.wallet.seed.description
      ///
      /// Locales: en, zh-Hant
      var keystoreLockWalletSeedDescription: RswiftResources.StringResource { .init(key: "keystore.lock.wallet.seed.description", tableName: "Localizable", source: source, developmentValue: "INTO security is being upgraded to the best achievable. Lock your seed phrase with biometrics", comment: nil) }

      /// en translation: Lock your Seed Phrase to Increase Security
      ///
      /// Key: keystore.lock.wallet.seed.title
      ///
      /// Locales: en, zh-Hant
      var keystoreLockWalletSeedTitle: RswiftResources.StringResource { .init(key: "keystore.lock.wallet.seed.title", tableName: "Localizable", source: source, developmentValue: "Lock your Seed Phrase to Increase Security", comment: nil) }

      /// en translation: I see!
      ///
      /// Key: know
      ///
      /// Locales: en, zh-Hant
      var know: RswiftResources.StringResource { .init(key: "know", tableName: "Localizable", source: source, developmentValue: "I see!", comment: nil) }

      /// en translation: I have understood the risks and confirmed my exit
      ///
      /// Key: know.and.logout
      ///
      /// Locales: en, zh-Hant
      var knowAndLogout: RswiftResources.StringResource { .init(key: "know.and.logout", tableName: "Localizable", source: source, developmentValue: "I have understood the risks and confirmed my exit", comment: nil) }

      /// en translation: Failed to verify ID card number.Please enter again.
      ///
      /// Key: kyc_IDCard_Verify_failed
      ///
      /// Locales: en, zh-Hant
      var kyc_IDCard_Verify_failed: RswiftResources.StringResource { .init(key: "kyc_IDCard_Verify_failed", tableName: "Localizable", source: source, developmentValue: "Failed to verify ID card number.Please enter again.", comment: nil) }

      /// en translation: Recognition Failed
      ///
      /// Key: kyc_identify_failed
      ///
      /// Locales: en, zh-Hant
      var kyc_identify_failed: RswiftResources.StringResource { .init(key: "kyc_identify_failed", tableName: "Localizable", source: source, developmentValue: "Recognition Failed", comment: nil) }

      /// en translation: Currently, only Vietnamese user authentication is supported. Users from other regions please stay tuned.
      ///
      /// Key: kyc_overseas_description
      ///
      /// Locales: en, zh-Hant
      var kyc_overseas_description: RswiftResources.StringResource { .init(key: "kyc_overseas_description", tableName: "Localizable", source: source, developmentValue: "Currently, only Vietnamese user authentication is supported. Users from other regions please stay tuned.", comment: nil) }

      /// en translation: Reupload
      ///
      /// Key: kyc_reupload
      ///
      /// Locales: en, zh-Hant
      var kyc_reupload: RswiftResources.StringResource { .init(key: "kyc_reupload", tableName: "Localizable", source: source, developmentValue: "Reupload", comment: nil) }

      /// en translation: Mainland China
      ///
      /// Key: kyc_title_china
      ///
      /// Locales: en, zh-Hant
      var kyc_title_china: RswiftResources.StringResource { .init(key: "kyc_title_china", tableName: "Localizable", source: source, developmentValue: "Mainland China", comment: nil) }

      /// en translation: Overseas Users
      ///
      /// Key: kyc_title_overseas
      ///
      /// Locales: en, zh-Hant
      var kyc_title_overseas: RswiftResources.StringResource { .init(key: "kyc_title_overseas", tableName: "Localizable", source: source, developmentValue: "Overseas Users", comment: nil) }

      /// en translation: Upload failed! Please check the network and try again
      ///
      /// Key: kyc_upload_failed
      ///
      /// Locales: en, zh-Hant
      var kyc_upload_failed: RswiftResources.StringResource { .init(key: "kyc_upload_failed", tableName: "Localizable", source: source, developmentValue: "Upload failed! Please check the network and try again", comment: nil) }

      /// en translation: Upload identity information
      ///
      /// Key: kyc_vi_upload_identity
      ///
      /// Locales: en, zh-Hant
      var kyc_vi_upload_identity: RswiftResources.StringResource { .init(key: "kyc_vi_upload_identity", tableName: "Localizable", source: source, developmentValue: "Upload identity information", comment: nil) }

      /// en translation: Upload the front of your ID card
      ///
      /// Key: kyc_vi_upload_info
      ///
      /// Locales: en, zh-Hant
      var kyc_vi_upload_info: RswiftResources.StringResource { .init(key: "kyc_vi_upload_info", tableName: "Localizable", source: source, developmentValue: "Upload the front of your ID card", comment: nil) }

      /// en translation: KYC authentication
      ///
      /// Key: kycauthentication
      ///
      /// Locales: en, zh-Hant
      var kycauthentication: RswiftResources.StringResource { .init(key: "kycauthentication", tableName: "Localizable", source: source, developmentValue: "KYC authentication", comment: nil) }

      /// en translation: Language Setting
      ///
      /// Key: languageSetting
      ///
      /// Locales: en, zh-Hant
      var languageSetting: RswiftResources.StringResource { .init(key: "languageSetting", tableName: "Localizable", source: source, developmentValue: "Language Setting", comment: nil) }

      /// en translation: You can learn related operation guides of INTO through the assistant
      ///
      /// Key: learn_guides_assistant
      ///
      /// Locales: en, zh-Hant
      var learn_guides_assistant: RswiftResources.StringResource { .init(key: "learn_guides_assistant", tableName: "Localizable", source: source, developmentValue: "You can learn related operation guides of INTO through the assistant", comment: nil) }

      /// en translation: %@ left the chat room
      ///
      /// Key: leaveChatroomPrompt
      ///
      /// Locales: en, zh-Hant
      var leaveChatroomPrompt: RswiftResources.StringResource1<String> { .init(key: "leaveChatroomPrompt", tableName: "Localizable", source: source, developmentValue: "%@ left the chat room", comment: nil) }

      /// en translation: Leave group...
      ///
      /// Key: leaveGrouping
      ///
      /// Locales: en, zh-Hant
      var leaveGrouping: RswiftResources.StringResource { .init(key: "leaveGrouping", tableName: "Localizable", source: source, developmentValue: "Leave group...", comment: nil) }

      /// en translation: Choose up to 10 people
      ///
      /// Key: lessthanten
      ///
      /// Locales: en, zh-Hant
      var lessthanten: RswiftResources.StringResource { .init(key: "lessthanten", tableName: "Localizable", source: source, developmentValue: "Choose up to 10 people", comment: nil) }

      /// en translation: %ld level
      ///
      /// Key: level
      ///
      /// Locales: en, zh-Hant
      var level: RswiftResources.StringResource1<Int> { .init(key: "level", tableName: "Localizable", source: source, developmentValue: "%ld level", comment: nil) }

      /// en translation: Wallet%ld/%ld in %ld level
      ///
      /// Key: levelwallet
      ///
      /// Locales: en, zh-Hant
      var levelwallet: RswiftResources.StringResource3<Int, Int, Int> { .init(key: "levelwallet", tableName: "Localizable", source: source, developmentValue: "Wallet%ld/%ld in %ld level", comment: nil) }

      /// en translation: Two
      ///
      /// Key: liang
      ///
      /// Locales: en, zh-Hant
      var liang: RswiftResources.StringResource { .init(key: "liang", tableName: "Localizable", source: source, developmentValue: "Two", comment: nil) }

      /// en translation: Light
      ///
      /// Key: light
      ///
      /// Locales: en, zh-Hant
      var light: RswiftResources.StringResource { .init(key: "light", tableName: "Localizable", source: source, developmentValue: "Light", comment: nil) }

      /// en translation: Free for a limited time
      ///
      /// Key: limitedTimeFree
      ///
      /// Locales: en, zh-Hant
      var limitedTimeFree: RswiftResources.StringResource { .init(key: "limitedTimeFree", tableName: "Localizable", source: source, developmentValue: "Free for a limited time", comment: nil) }

      /// en translation: Album license restricted
      ///
      /// Key: limitedalbum
      ///
      /// Locales: en, zh-Hant
      var limitedalbum: RswiftResources.StringResource { .init(key: "limitedalbum", tableName: "Localizable", source: source, developmentValue: "Album license restricted", comment: nil) }

      /// en translation: Camera license restricted
      ///
      /// Key: limitedcamera
      ///
      /// Locales: en, zh-Hant
      var limitedcamera: RswiftResources.StringResource { .init(key: "limitedcamera", tableName: "Localizable", source: source, developmentValue: "Camera license restricted", comment: nil) }

      /// en translation: Please link the wallet before binding
      ///
      /// Key: link_wallet_binding
      ///
      /// Locales: en, zh-Hant
      var link_wallet_binding: RswiftResources.StringResource { .init(key: "link_wallet_binding", tableName: "Localizable", source: source, developmentValue: "Please link the wallet before binding", comment: nil) }

      /// en translation: Page loading progress = %f
      ///
      /// Key: loadinging
      ///
      /// Locales: en, zh-Hant
      var loadinging: RswiftResources.StringResource1<Double> { .init(key: "loadinging", tableName: "Localizable", source: source, developmentValue: "Page loading progress = %f", comment: nil) }

      /// en translation: Local Backup
      ///
      /// Key: local_Backup
      ///
      /// Locales: en, zh-Hant
      var local_Backup: RswiftResources.StringResource { .init(key: "local_Backup", tableName: "Localizable", source: source, developmentValue: "Local Backup", comment: nil) }

      /// en translation: Local backup successful
      ///
      /// Key: local_backup_successful
      ///
      /// Locales: en, zh-Hant
      var local_backup_successful: RswiftResources.StringResource { .init(key: "local_backup_successful", tableName: "Localizable", source: source, developmentValue: "Local backup successful", comment: nil) }

      /// en translation: Please re-enter your passcode
      ///
      /// Key: lock.create.passcode.view.model.confirm
      ///
      /// Locales: en, zh-Hant
      var lockCreatePasscodeViewModelConfirm: RswiftResources.StringResource { .init(key: "lock.create.passcode.view.model.confirm", tableName: "Localizable", source: source, developmentValue: "Please re-enter your passcode", comment: nil) }

      /// en translation: Enter a new password
      ///
      /// Key: lock.create.passcode.view.model.initial
      ///
      /// Locales: en, zh-Hant
      var lockCreatePasscodeViewModelInitial: RswiftResources.StringResource { .init(key: "lock.create.passcode.view.model.initial", tableName: "Localizable", source: source, developmentValue: "Enter a new password", comment: nil) }

      /// en translation: Set Passcode
      ///
      /// Key: lock.create.passcode.view.model.title
      ///
      /// Locales: en, zh-Hant
      var lockCreatePasscodeViewModelTitle: RswiftResources.StringResource { .init(key: "lock.create.passcode.view.model.title", tableName: "Localizable", source: source, developmentValue: "Set Passcode", comment: nil) }

      /// en translation: Incorrect passcode. You have %d attempts.
      ///
      /// Key: lock.enter.passcode.view.model.incorrect.passcode
      ///
      /// Locales: en, zh-Hant
      var lockEnterPasscodeViewModelIncorrectPasscode: RswiftResources.StringResource1<Int> { .init(key: "lock.enter.passcode.view.model.incorrect.passcode", tableName: "Localizable", source: source, developmentValue: "Incorrect passcode. You have %d attempts.", comment: nil) }

      /// en translation: Enter your passcode.
      ///
      /// Key: lock.enter.passcode.view.model.initial
      ///
      /// Locales: en, zh-Hant
      var lockEnterPasscodeViewModelInitial: RswiftResources.StringResource { .init(key: "lock.enter.passcode.view.model.initial", tableName: "Localizable", source: source, developmentValue: "Enter your passcode.", comment: nil) }

      /// en translation: Logging in with Touch ID
      ///
      /// Key: lock.enter.passcode.view.model.touch.id
      ///
      /// Locales: en, zh-Hant
      var lockEnterPasscodeViewModelTouchId: RswiftResources.StringResource { .init(key: "lock.enter.passcode.view.model.touch.id", tableName: "Localizable", source: source, developmentValue: "Logging in with Touch ID", comment: nil) }

      /// en translation: Try after 1 minute.
      ///
      /// Key: lock.enter.passcode.view.model.try.after.one.minute
      ///
      /// Locales: en, zh-Hant
      var lockEnterPasscodeViewModelTryAfterOneMinute: RswiftResources.StringResource { .init(key: "lock.enter.passcode.view.model.try.after.one.minute", tableName: "Localizable", source: source, developmentValue: "Try after 1 minute.", comment: nil) }

      /// en translation: Log in to device management
      ///
      /// Key: log_device_management
      ///
      /// Locales: en, zh-Hant
      var log_device_management: RswiftResources.StringResource { .init(key: "log_device_management", tableName: "Localizable", source: source, developmentValue: "Log in to device management", comment: nil) }

      /// en translation: Login
      ///
      /// Key: login
      ///
      /// Locales: en, zh-Hant
      var login: RswiftResources.StringResource { .init(key: "login", tableName: "Localizable", source: source, developmentValue: "Login", comment: nil) }

      /// en translation: Close debug mode?
      ///
      /// Key: login.closeDebugMode
      ///
      /// Locales: en, zh-Hant
      var loginCloseDebugMode: RswiftResources.StringResource { .init(key: "login.closeDebugMode", tableName: "Localizable", source: source, developmentValue: "Close debug mode?", comment: nil) }

      /// en translation: Code Sent
      ///
      /// Key: login.codeSent
      ///
      /// Locales: en, zh-Hant
      var loginCodeSent: RswiftResources.StringResource { .init(key: "login.codeSent", tableName: "Localizable", source: source, developmentValue: "Code Sent", comment: nil) }

      /// en translation: Verification code has been sent to %@
      ///
      /// Key: login.codeSentTo
      ///
      /// Locales: en, zh-Hant
      var loginCodeSentTo: RswiftResources.StringResource1<String> { .init(key: "login.codeSentTo", tableName: "Localizable", source: source, developmentValue: "Verification code has been sent to %@", comment: nil) }

      /// en translation: Please confirm Terms & Policy
      ///
      /// Key: login.confirmTerms
      ///
      /// Locales: en, zh-Hant
      var loginConfirmTerms: RswiftResources.StringResource { .init(key: "login.confirmTerms", tableName: "Localizable", source: source, developmentValue: "Please confirm Terms & Policy", comment: nil) }

      /// en translation: Please enter verification code
      ///
      /// Key: login.enterSmsCode
      ///
      /// Locales: en, zh-Hant
      var loginEnterSmsCode: RswiftResources.StringResource { .init(key: "login.enterSmsCode", tableName: "Localizable", source: source, developmentValue: "Please enter verification code", comment: nil) }

      /// en translation: Get After
      ///
      /// Key: login.getAfter
      ///
      /// Locales: en, zh-Hant
      var loginGetAfter: RswiftResources.StringResource { .init(key: "login.getAfter", tableName: "Localizable", source: source, developmentValue: "Get After", comment: nil) }

      /// en translation: Network Error
      ///
      /// Key: login.networkError
      ///
      /// Locales: en, zh-Hant
      var loginNetworkError: RswiftResources.StringResource { .init(key: "login.networkError", tableName: "Localizable", source: source, developmentValue: "Network Error", comment: nil) }

      /// en translation: Open debug mode?
      ///
      /// Key: login.openDebugMode
      ///
      /// Locales: en, zh-Hant
      var loginOpenDebugMode: RswiftResources.StringResource { .init(key: "login.openDebugMode", tableName: "Localizable", source: source, developmentValue: "Open debug mode?", comment: nil) }

      /// en translation: Get Code
      ///
      /// Key: login.smsCode
      ///
      /// Locales: en, zh-Hant
      var loginSmsCode: RswiftResources.StringResource { .init(key: "login.smsCode", tableName: "Localizable", source: source, developmentValue: "Get Code", comment: nil) }

      /// en translation: Access limit reached
      ///
      /// Key: login.smsCodeLimit
      ///
      /// Locales: en, zh-Hant
      var loginSmsCodeLimit: RswiftResources.StringResource { .init(key: "login.smsCodeLimit", tableName: "Localizable", source: source, developmentValue: "Access limit reached", comment: nil) }

      /// en translation: Login INTO IM
      ///
      /// Key: login.title
      ///
      /// Locales: en, zh-Hant
      var loginTitle: RswiftResources.StringResource { .init(key: "login.title", tableName: "Localizable", source: source, developmentValue: "Login INTO IM", comment: nil) }

      /// en translation: Please wait a moment while trying to send
      ///
      /// Key: login.wait
      ///
      /// Locales: en, zh-Hant
      var loginWait: RswiftResources.StringResource { .init(key: "login.wait", tableName: "Localizable", source: source, developmentValue: "Please wait a moment while trying to send", comment: nil) }

      /// en translation: Please enter correct mobile number
      ///
      /// Key: login.wrongPhone
      ///
      /// Locales: en, zh-Hant
      var loginWrongPhone: RswiftResources.StringResource { .init(key: "login.wrongPhone", tableName: "Localizable", source: source, developmentValue: "Please enter correct mobile number", comment: nil) }

      /// en translation: Incorrect Code
      ///
      /// Key: login.wrongSmsCode
      ///
      /// Locales: en, zh-Hant
      var loginWrongSmsCode: RswiftResources.StringResource { .init(key: "login.wrongSmsCode", tableName: "Localizable", source: source, developmentValue: "Incorrect Code", comment: nil) }

      /// en translation: Login verification
      ///
      /// Key: loginCheck
      ///
      /// Locales: en, zh-Hant
      var loginCheck: RswiftResources.StringResource { .init(key: "loginCheck", tableName: "Localizable", source: source, developmentValue: "Login verification", comment: nil) }

      /// en translation: Login failed, please try again
      ///
      /// Key: loginFailPrompt
      ///
      /// Locales: en, zh-Hant
      var loginFailPrompt: RswiftResources.StringResource { .init(key: "loginFailPrompt", tableName: "Localizable", source: source, developmentValue: "Login failed, please try again", comment: nil) }

      /// en translation: Already logged in on another device
      ///
      /// Key: loginOnOtherDevice
      ///
      /// Locales: en, zh-Hant
      var loginOnOtherDevice: RswiftResources.StringResource { .init(key: "loginOnOtherDevice", tableName: "Localizable", source: source, developmentValue: "Already logged in on another device", comment: nil) }

      /// en translation: Your account is logged in elsewhere.
      ///
      /// Key: loginOtherPrompt
      ///
      /// Locales: en, zh-Hant
      var loginOtherPrompt: RswiftResources.StringResource { .init(key: "loginOtherPrompt", tableName: "Localizable", source: source, developmentValue: "Your account is logged in elsewhere.", comment: nil) }

      /// en translation: Automatic login failed, please login again.
      ///
      /// Key: loginPrompt
      ///
      /// Locales: en, zh-Hant
      var loginPrompt: RswiftResources.StringResource { .init(key: "loginPrompt", tableName: "Localizable", source: source, developmentValue: "Automatic login failed, please login again.", comment: nil) }

      /// en translation: Log in with password
      ///
      /// Key: loginWithPwd
      ///
      /// Locales: en, zh-Hant
      var loginWithPwd: RswiftResources.StringResource { .init(key: "loginWithPwd", tableName: "Localizable", source: source, developmentValue: "Log in with password", comment: nil) }

      /// en translation: Login with token
      ///
      /// Key: loginWithToken
      ///
      /// Locales: en, zh-Hant
      var loginWithToken: RswiftResources.StringResource { .init(key: "loginWithToken", tableName: "Localizable", source: source, developmentValue: "Login with token", comment: nil) }

      /// en translation: The current virtual number is detected. Please change the mobile number
      ///
      /// Key: login_virtual_error_msg
      ///
      /// Locales: en, zh-Hant
      var login_virtual_error_msg: RswiftResources.StringResource { .init(key: "login_virtual_error_msg", tableName: "Localizable", source: source, developmentValue: "The current virtual number is detected. Please change the mobile number", comment: nil) }

      /// en translation: Logging...
      ///
      /// Key: loging..
      ///
      /// Locales: en, zh-Hant
      var loging: RswiftResources.StringResource { .init(key: "loging..", tableName: "Localizable", source: source, developmentValue: "Logging...", comment: nil) }

      /// en translation: Destroy Account
      ///
      /// Key: logoffAccount
      ///
      /// Locales: en, zh-Hant
      var logoffAccount: RswiftResources.StringResource { .init(key: "logoffAccount", tableName: "Localizable", source: source, developmentValue: "Destroy Account", comment: nil) }

      /// en translation: If you log out without a cloud backup wallet or backup mnemonic, you will permanently lose it and all assets. Before resetting, please make sure to back up all wallets and ensure the security of your mnemonics.
      ///
      /// Key: logout.sub.content
      ///
      /// Locales: en, zh-Hant
      var logoutSubContent: RswiftResources.StringResource { .init(key: "logout.sub.content", tableName: "Localizable", source: source, developmentValue: "If you log out without a cloud backup wallet or backup mnemonic, you will permanently lose it and all assets. Before resetting, please make sure to back up all wallets and ensure the security of your mnemonics.", comment: nil) }

      /// en translation: Copy
      ///
      /// Key: longPress.copy
      ///
      /// Locales: en, zh-Hant
      var longPressCopy: RswiftResources.StringResource { .init(key: "longPress.copy", tableName: "Localizable", source: source, developmentValue: "Copy", comment: nil) }

      /// en translation: Preserve
      ///
      /// Key: longPress.download
      ///
      /// Locales: en, zh-Hant
      var longPressDownload: RswiftResources.StringResource { .init(key: "longPress.download", tableName: "Localizable", source: source, developmentValue: "Preserve", comment: nil) }

      /// en translation: Quote
      ///
      /// Key: longPress.quote
      ///
      /// Locales: en, zh-Hant
      var longPressQuote: RswiftResources.StringResource { .init(key: "longPress.quote", tableName: "Localizable", source: source, developmentValue: "Quote", comment: nil) }

      /// en translation: Recall
      ///
      /// Key: longPress.recall
      ///
      /// Locales: en, zh-Hant
      var longPressRecall: RswiftResources.StringResource { .init(key: "longPress.recall", tableName: "Localizable", source: source, developmentValue: "Recall", comment: nil) }

      /// en translation: Convert to text
      ///
      /// Key: longPress.speech.text
      ///
      /// Locales: en, zh-Hant
      var longPressSpeechText: RswiftResources.StringResource { .init(key: "longPress.speech.text", tableName: "Localizable", source: source, developmentValue: "Convert to text", comment: nil) }

      /// en translation: INTO Demo Suggestions
      ///
      /// Key: mail.title
      ///
      /// Locales: en, zh-Hant
      var mailTitle: RswiftResources.StringResource { .init(key: "mail.title", tableName: "Localizable", source: source, developmentValue: "INTO Demo Suggestions", comment: nil) }

      /// en translation: %@ is used for gas expenses for interaction on the platform chain (binding the main wallet, participating in social earning, etc.), and the social journey can be started after receiving %@
      ///
      /// Key: mainCoinDesc
      ///
      /// Locales: en, zh-Hant
      var mainCoinDesc: RswiftResources.StringResource2<String, String> { .init(key: "mainCoinDesc", tableName: "Localizable", source: source, developmentValue: "%@ is used for gas expenses for interaction on the platform chain (binding the main wallet, participating in social earning, etc.), and the social journey can be started after receiving %@", comment: nil) }

      /// en translation: Exception in obtaining wallet master binding status
      ///
      /// Key: mainwalletexception
      ///
      /// Locales: en, zh-Hant
      var mainwalletexception: RswiftResources.StringResource { .init(key: "mainwalletexception", tableName: "Localizable", source: source, developmentValue: "Exception in obtaining wallet master binding status", comment: nil) }

      /// en translation: Please enter a password of 8-16 digits, including both numbers and uppercase and lowercase letters
      ///
      /// Key: makesurepasswordright
      ///
      /// Locales: en, zh-Hant
      var makesurepasswordright: RswiftResources.StringResource { .init(key: "makesurepasswordright", tableName: "Localizable", source: source, developmentValue: "Please enter a password of 8-16 digits, including both numbers and uppercase and lowercase letters", comment: nil) }

      /// en translation: Exchange
      ///
      /// Key: mallconsumption
      ///
      /// Locales: en, zh-Hant
      var mallconsumption: RswiftResources.StringResource { .init(key: "mallconsumption", tableName: "Localizable", source: source, developmentValue: "Exchange", comment: nil) }

      /// en translation: This feature supports Match and Tomo chains
      ///
      /// Key: matchAndTomoSupportonly
      ///
      /// Locales: en, zh-Hant
      var matchAndTomoSupportonly: RswiftResources.StringResource { .init(key: "matchAndTomoSupportonly", tableName: "Localizable", source: source, developmentValue: "This feature supports Match and Tomo chains", comment: nil) }

      /// en translation: This feature only supports Match chains
      ///
      /// Key: matchsupportonly
      ///
      /// Locales: en, zh-Hant
      var matchsupportonly: RswiftResources.StringResource { .init(key: "matchsupportonly", tableName: "Localizable", source: source, developmentValue: "This feature only supports Match chains", comment: nil) }

      /// en translation: A maximum of 5 accounts are allowed to exist at the same time
      ///
      /// Key: max_account_limit
      ///
      /// Locales: en, zh-Hant
      var max_account_limit: RswiftResources.StringResource { .init(key: "max_account_limit", tableName: "Localizable", source: source, developmentValue: "A maximum of 5 accounts are allowed to exist at the same time", comment: nil) }

      /// en translation: The presale quantity cannot exceed the maximum amount that can currently be held
      ///
      /// Key: max_presale_count_limit
      ///
      /// Locales: en, zh-Hant
      var max_presale_count_limit: RswiftResources.StringResource { .init(key: "max_presale_count_limit", tableName: "Localizable", source: source, developmentValue: "The presale quantity cannot exceed the maximum amount that can currently be held", comment: nil) }

      /// en translation: You recalled a message
      ///
      /// Key: meRecall
      ///
      /// Locales: en, zh-Hant
      var meRecall: RswiftResources.StringResource { .init(key: "meRecall", tableName: "Localizable", source: source, developmentValue: "You recalled a message", comment: nil) }

      /// en translation: Remaining: %@ pieces
      ///
      /// Key: medal.balance.formate
      ///
      /// Locales: en, zh-Hant
      var medalBalanceFormate: RswiftResources.StringResource1<String> { .init(key: "medal.balance.formate", tableName: "Localizable", source: source, developmentValue: "Remaining: %@ pieces", comment: nil) }

      /// en translation: The purchased medal can only be used for SBT certification on Match
      ///
      /// Key: medal.desc
      ///
      /// Locales: en, zh-Hant
      var medalDesc: RswiftResources.StringResource { .init(key: "medal.desc", tableName: "Localizable", source: source, developmentValue: "The purchased medal can only be used for SBT certification on Match", comment: nil) }

      /// en translation: %@ medal
      ///
      /// Key: medal.format
      ///
      /// Locales: en, zh-Hant
      var medalFormat: RswiftResources.StringResource1<String> { .init(key: "medal.format", tableName: "Localizable", source: source, developmentValue: "%@ medal", comment: nil) }

      /// en translation: %@ coin
      ///
      /// Key: medal.format2
      ///
      /// Locales: en, zh-Hant
      var medalFormat2: RswiftResources.StringResource1<String> { .init(key: "medal.format2", tableName: "Localizable", source: source, developmentValue: "%@ coin", comment: nil) }

      /// en translation: Use a medal for authentication
      ///
      /// Key: medal.token.auth
      ///
      /// Locales: en, zh-Hant
      var medalTokenAuth: RswiftResources.StringResource { .init(key: "medal.token.auth", tableName: "Localizable", source: source, developmentValue: "Use a medal for authentication", comment: nil) }

      /// en translation: The number of my medals: %@
      ///
      /// Key: medalamount
      ///
      /// Locales: en, zh-Hant
      var medalamount: RswiftResources.StringResource1<String> { .init(key: "medalamount", tableName: "Localizable", source: source, developmentValue: "The number of my medals: %@", comment: nil) }

      /// en translation: Buy medals
      ///
      /// Key: medalbuy
      ///
      /// Locales: en, zh-Hant
      var medalbuy: RswiftResources.StringResource { .init(key: "medalbuy", tableName: "Localizable", source: source, developmentValue: "Buy medals", comment: nil) }

      /// en translation: Medal Details
      ///
      /// Key: medaldetail
      ///
      /// Locales: en, zh-Hant
      var medaldetail: RswiftResources.StringResource { .init(key: "medaldetail", tableName: "Localizable", source: source, developmentValue: "Medal Details", comment: nil) }

      /// en translation: Exchange medal
      ///
      /// Key: medalexchange
      ///
      /// Locales: en, zh-Hant
      var medalexchange: RswiftResources.StringResource { .init(key: "medalexchange", tableName: "Localizable", source: source, developmentValue: "Exchange medal", comment: nil) }

      /// en translation: *Once the medal is transferred, it cannot be withdrawn, please confirm the receiving address
      ///
      /// Key: medaltransferdesc
      ///
      /// Locales: en, zh-Hant
      var medaltransferdesc: RswiftResources.StringResource { .init(key: "medaltransferdesc", tableName: "Localizable", source: source, developmentValue: "*Once the medal is transferred, it cannot be withdrawn, please confirm the receiving address", comment: nil) }

      /// en translation: Medal Transfer Record
      ///
      /// Key: medaltransferrecord
      ///
      /// Locales: en, zh-Hant
      var medaltransferrecord: RswiftResources.StringResource { .init(key: "medaltransferrecord", tableName: "Localizable", source: source, developmentValue: "Medal Transfer Record", comment: nil) }

      /// en translation: Member quantity
      ///
      /// Key: memberCount
      ///
      /// Locales: en, zh-Hant
      var memberCount: RswiftResources.StringResource { .init(key: "memberCount", tableName: "Localizable", source: source, developmentValue: "Member quantity", comment: nil) }

      /// en translation: List of group members
      ///
      /// Key: memberList
      ///
      /// Locales: en, zh-Hant
      var memberList: RswiftResources.StringResource { .init(key: "memberList", tableName: "Localizable", source: source, developmentValue: "List of group members", comment: nil) }

      /// en translation: %@ has lost administrator permissions for group %@
      ///
      /// Key: memberPrompt
      ///
      /// Locales: en, zh-Hant
      var memberPrompt: RswiftResources.StringResource2<String, String> { .init(key: "memberPrompt", tableName: "Localizable", source: source, developmentValue: "%@ has lost administrator permissions for group %@", comment: nil) }

      /// en translation: Group members can invite new members
      ///
      /// Key: memberRight
      ///
      /// Locales: en, zh-Hant
      var memberRight: RswiftResources.StringResource { .init(key: "memberRight", tableName: "Localizable", source: source, developmentValue: "Group members can invite new members", comment: nil) }

      /// en translation: Members to be pulled in
      ///
      /// Key: memberpulled
      ///
      /// Locales: en, zh-Hant
      var memberpulled: RswiftResources.StringResource { .init(key: "memberpulled", tableName: "Localizable", source: source, developmentValue: "Members to be pulled in", comment: nil) }

      /// en translation: Group members
      ///
      /// Key: members
      ///
      /// Locales: en, zh-Hant
      var members: RswiftResources.StringResource { .init(key: "members", tableName: "Localizable", source: source, developmentValue: "Group members", comment: nil) }

      /// en translation: Message online status: %d
      ///
      /// Key: messageonlinestate
      ///
      /// Locales: en, zh-Hant
      var messageonlinestate: RswiftResources.StringResource1<Int> { .init(key: "messageonlinestate", tableName: "Localizable", source: source, developmentValue: "Message online status: %d", comment: nil) }

      /// en translation: %ldMin
      ///
      /// Key: min
      ///
      /// Locales: en, zh-Hant
      var min: RswiftResources.StringResource1<Int> { .init(key: "min", tableName: "Localizable", source: source, developmentValue: "%ldMin", comment: nil) }

      /// en translation: Me
      ///
      /// Key: mine
      ///
      /// Locales: en, zh-Hant
      var mine: RswiftResources.StringResource { .init(key: "mine", tableName: "Localizable", source: source, developmentValue: "Me", comment: nil) }

      /// en translation: Earned today
      ///
      /// Key: minedtoday
      ///
      /// Locales: en, zh-Hant
      var minedtoday: RswiftResources.StringResource { .init(key: "minedtoday", tableName: "Localizable", source: source, developmentValue: "Earned today", comment: nil) }

      /// en translation: Claim
      ///
      /// Key: minig.team.receive
      ///
      /// Locales: en, zh-Hant
      var minigTeamReceive: RswiftResources.StringResource { .init(key: "minig.team.receive", tableName: "Localizable", source: source, developmentValue: "Claim", comment: nil) }

      /// en translation: Ecosystem
      ///
      /// Key: mining
      ///
      /// Locales: en, zh-Hant
      var mining: RswiftResources.StringResource { .init(key: "mining", tableName: "Localizable", source: source, developmentValue: "Ecosystem", comment: nil) }

      /// en translation: %@ Candidates from different regions are running for election
      ///
      /// Key: mining.areanumber
      ///
      /// Locales: en, zh-Hant
      var miningAreanumber: RswiftResources.StringResource1<String> { .init(key: "mining.areanumber", tableName: "Localizable", source: source, developmentValue: "%@ Candidates from different regions are running for election", comment: nil) }

      /// en translation: Can receive:
      ///
      /// Key: mining.availabletitle
      ///
      /// Locales: en, zh-Hant
      var miningAvailabletitle: RswiftResources.StringResource { .init(key: "mining.availabletitle", tableName: "Localizable", source: source, developmentValue: "Can receive:", comment: nil) }

      /// en translation: Basic social weight
      ///
      /// Key: mining.basicsocialweight
      ///
      /// Locales: en, zh-Hant
      var miningBasicsocialweight: RswiftResources.StringResource { .init(key: "mining.basicsocialweight", tableName: "Localizable", source: source, developmentValue: "Basic social weight", comment: nil) }

      /// en translation: Interacted
      ///
      /// Key: mining.chatstate.interactived
      ///
      /// Locales: en, zh-Hant
      var miningChatstateInteractived: RswiftResources.StringResource { .init(key: "mining.chatstate.interactived", tableName: "Localizable", source: source, developmentValue: "Interacted", comment: nil) }

      /// en translation: Received
      ///
      /// Key: mining.chatstate.received
      ///
      /// Locales: en, zh-Hant
      var miningChatstateReceived: RswiftResources.StringResource { .init(key: "mining.chatstate.received", tableName: "Localizable", source: source, developmentValue: "Received", comment: nil) }

      /// en translation: Has been sent
      ///
      /// Key: mining.chatstate.sent
      ///
      /// Locales: en, zh-Hant
      var miningChatstateSent: RswiftResources.StringResource { .init(key: "mining.chatstate.sent", tableName: "Localizable", source: source, developmentValue: "Has been sent", comment: nil) }

      /// en translation: Select chat user
      ///
      /// Key: mining.choosechatuser
      ///
      /// Locales: en, zh-Hant
      var miningChoosechatuser: RswiftResources.StringResource { .init(key: "mining.choosechatuser", tableName: "Localizable", source: source, developmentValue: "Select chat user", comment: nil) }

      /// en translation: City node campaign
      ///
      /// Key: mining.citynode
      ///
      /// Locales: en, zh-Hant
      var miningCitynode: RswiftResources.StringResource { .init(key: "mining.citynode", tableName: "Localizable", source: source, developmentValue: "City node campaign", comment: nil) }

      /// en translation: City Nodes
      ///
      /// Key: mining.citynodetitle
      ///
      /// Locales: en, zh-Hant
      var miningCitynodetitle: RswiftResources.StringResource { .init(key: "mining.citynodetitle", tableName: "Localizable", source: source, developmentValue: "City Nodes", comment: nil) }

      /// en translation: Start my social journey
      ///
      /// Key: mining.congratulations
      ///
      /// Locales: en, zh-Hant
      var miningCongratulations: RswiftResources.StringResource { .init(key: "mining.congratulations", tableName: "Localizable", source: source, developmentValue: "Start my social journey", comment: nil) }

      /// en translation: Consumption balance:
      ///
      /// Key: mining.consumebalance
      ///
      /// Locales: en, zh-Hant
      var miningConsumebalance: RswiftResources.StringResource { .init(key: "mining.consumebalance", tableName: "Localizable", source: source, developmentValue: "Consumption balance:", comment: nil) }

      /// en translation: Countdown to the next social mining
      ///
      /// Key: mining.counttime
      ///
      /// Locales: en, zh-Hant
      var miningCounttime: RswiftResources.StringResource { .init(key: "mining.counttime", tableName: "Localizable", source: source, developmentValue: "Countdown to the next social mining", comment: nil) }

      /// en translation: Do tasks
      ///
      /// Key: mining.do.tasks
      ///
      /// Locales: en, zh-Hant
      var miningDoTasks: RswiftResources.StringResource { .init(key: "mining.do.tasks", tableName: "Localizable", source: source, developmentValue: "Do tasks", comment: nil) }

      /// en translation: Weight
      ///
      /// Key: mining.dotayweight
      ///
      /// Locales: en, zh-Hant
      var miningDotayweight: RswiftResources.StringResource { .init(key: "mining.dotayweight", tableName: "Localizable", source: source, developmentValue: "Weight", comment: nil) }

      /// en translation: Earn more TOX
      ///
      /// Key: mining.earntox
      ///
      /// Locales: en, zh-Hant
      var miningEarntox: RswiftResources.StringResource { .init(key: "mining.earntox", tableName: "Localizable", source: source, developmentValue: "Earn more TOX", comment: nil) }

      /// en translation: Withdraw
      ///
      /// Key: mining.extract
      ///
      /// Locales: en, zh-Hant
      var miningExtract: RswiftResources.StringResource { .init(key: "mining.extract", tableName: "Localizable", source: source, developmentValue: "Withdraw", comment: nil) }

      /// en translation: Team weight
      ///
      /// Key: mining.groupweight
      ///
      /// Locales: en, zh-Hant
      var miningGroupweight: RswiftResources.StringResource { .init(key: "mining.groupweight", tableName: "Localizable", source: source, developmentValue: "Team weight", comment: nil) }

      /// en translation: Join Now
      ///
      /// Key: mining.join
      ///
      /// Locales: en, zh-Hant
      var miningJoin: RswiftResources.StringResource { .init(key: "mining.join", tableName: "Localizable", source: source, developmentValue: "Join Now", comment: nil) }

      /// en translation: My Team
      ///
      /// Key: mining.myteam
      ///
      /// Locales: en, zh-Hant
      var miningMyteam: RswiftResources.StringResource { .init(key: "mining.myteam", tableName: "Localizable", source: source, developmentValue: "My Team", comment: nil) }

      /// en translation: You can participate again after %ld hour %ld minute %ld second
      ///
      /// Key: mining.nexttime
      ///
      /// Locales: en, zh-Hant
      var miningNexttime: RswiftResources.StringResource3<Int, Int, Int> { .init(key: "mining.nexttime", tableName: "Localizable", source: source, developmentValue: "You can participate again after %ld hour %ld minute %ld second", comment: nil) }

      /// en translation: Not earned today
      ///
      /// Key: mining.notmining
      ///
      /// Locales: en, zh-Hant
      var miningNotmining: RswiftResources.StringResource { .init(key: "mining.notmining", tableName: "Localizable", source: source, developmentValue: "Not earned today", comment: nil) }

      /// en translation: Social Earn
      ///
      /// Key: mining.oneclickmining
      ///
      /// Locales: en, zh-Hant
      var miningOneclickmining: RswiftResources.StringResource { .init(key: "mining.oneclickmining", tableName: "Localizable", source: source, developmentValue: "Social Earn", comment: nil) }

      /// en translation: Total output
      ///
      /// Key: mining.outputccount
      ///
      /// Locales: en, zh-Hant
      var miningOutputccount: RswiftResources.StringResource { .init(key: "mining.outputccount", tableName: "Localizable", source: source, developmentValue: "Total output", comment: nil) }

      /// en translation: Staking balance
      ///
      /// Key: mining.pledgebalance
      ///
      /// Locales: en, zh-Hant
      var miningPledgebalance: RswiftResources.StringResource { .init(key: "mining.pledgebalance", tableName: "Localizable", source: source, developmentValue: "Staking balance", comment: nil) }

      /// en translation: Number of Nodes
      ///
      /// Key: mining.pledgecount
      ///
      /// Locales: en, zh-Hant
      var miningPledgecount: RswiftResources.StringResource { .init(key: "mining.pledgecount", tableName: "Localizable", source: source, developmentValue: "Number of Nodes", comment: nil) }

      /// en translation: My Pledge Details
      ///
      /// Key: mining.pledgedetail
      ///
      /// Locales: en, zh-Hant
      var miningPledgedetail: RswiftResources.StringResource { .init(key: "mining.pledgedetail", tableName: "Localizable", source: source, developmentValue: "My Pledge Details", comment: nil) }

      /// en translation: 9 types of personal nodes
      ///
      /// Key: mining.pledgelevel
      ///
      /// Locales: en, zh-Hant
      var miningPledgelevel: RswiftResources.StringResource { .init(key: "mining.pledgelevel", tableName: "Localizable", source: source, developmentValue: "9 types of personal nodes", comment: nil) }

      /// en translation: Community weight
      ///
      /// Key: mining.plotweight
      ///
      /// Locales: en, zh-Hant
      var miningPlotweight: RswiftResources.StringResource { .init(key: "mining.plotweight", tableName: "Localizable", source: source, developmentValue: "Community weight", comment: nil) }

      /// en translation: VS YDAY
      ///
      /// Key: mining.raise
      ///
      /// Locales: en, zh-Hant
      var miningRaise: RswiftResources.StringResource { .init(key: "mining.raise", tableName: "Localizable", source: source, developmentValue: "VS YDAY", comment: nil) }

      /// en translation: Deposit
      ///
      /// Key: mining.recharge
      ///
      /// Locales: en, zh-Hant
      var miningRecharge: RswiftResources.StringResource { .init(key: "mining.recharge", tableName: "Localizable", source: source, developmentValue: "Deposit", comment: nil) }

      /// en translation: Deposit
      ///
      /// Key: mining.recharge.title
      ///
      /// Locales: en, zh-Hant
      var miningRechargeTitle: RswiftResources.StringResource { .init(key: "mining.recharge.title", tableName: "Localizable", source: source, developmentValue: "Deposit", comment: nil) }

      /// en translation: Remaining Social Reward Times
      ///
      /// Key: mining.rewardtime
      ///
      /// Locales: en, zh-Hant
      var miningRewardtime: RswiftResources.StringResource { .init(key: "mining.rewardtime", tableName: "Localizable", source: source, developmentValue: "Remaining Social Reward Times", comment: nil) }

      /// en translation: Team reward
      ///
      /// Key: mining.rewardtype.group
      ///
      /// Locales: en, zh-Hant
      var miningRewardtypeGroup: RswiftResources.StringResource { .init(key: "mining.rewardtype.group", tableName: "Localizable", source: source, developmentValue: "Team reward", comment: nil) }

      /// en translation: Introduction to Mining Rules
      ///
      /// Key: mining.rule
      ///
      /// Locales: en, zh-Hant
      var miningRule: RswiftResources.StringResource { .init(key: "mining.rule", tableName: "Localizable", source: source, developmentValue: "Introduction to Mining Rules", comment: nil) }

      /// en translation: Say Hello
      ///
      /// Key: mining.sayhello
      ///
      /// Locales: en, zh-Hant
      var miningSayhello: RswiftResources.StringResource { .init(key: "mining.sayhello", tableName: "Localizable", source: source, developmentValue: "Say Hello", comment: nil) }

      /// en translation: Social class
      ///
      /// Key: mining.sociallevel
      ///
      /// Locales: en, zh-Hant
      var miningSociallevel: RswiftResources.StringResource { .init(key: "mining.sociallevel", tableName: "Localizable", source: source, developmentValue: "Social class", comment: nil) }

      /// en translation: Social Earn
      ///
      /// Key: mining.socialmining
      ///
      /// Locales: en, zh-Hant
      var miningSocialmining: RswiftResources.StringResource { .init(key: "mining.socialmining", tableName: "Localizable", source: source, developmentValue: "Social Earn", comment: nil) }

      /// en translation: Social Mining Details
      ///
      /// Key: mining.socialminingdetail
      ///
      /// Locales: en, zh-Hant
      var miningSocialminingdetail: RswiftResources.StringResource { .init(key: "mining.socialminingdetail", tableName: "Localizable", source: source, developmentValue: "Social Mining Details", comment: nil) }

      /// en translation: %@ social weight
      ///
      /// Key: mining.socialweight
      ///
      /// Locales: en, zh-Hant
      var miningSocialweight: RswiftResources.StringResource1<String> { .init(key: "mining.socialweight", tableName: "Localizable", source: source, developmentValue: "%@ social weight", comment: nil) }

      /// en translation: Social node
      ///
      /// Key: mining.speedpledge
      ///
      /// Locales: en, zh-Hant
      var miningSpeedpledge: RswiftResources.StringResource { .init(key: "mining.speedpledge", tableName: "Localizable", source: source, developmentValue: "Social node", comment: nil) }

      /// en translation: Let's get started
      ///
      /// Key: mining.start
      ///
      /// Locales: en, zh-Hant
      var miningStart: RswiftResources.StringResource { .init(key: "mining.start", tableName: "Localizable", source: source, developmentValue: "Let's get started", comment: nil) }

      /// en translation: Successfully participated in mining today!
      ///
      /// Key: mining.success
      ///
      /// Locales: en, zh-Hant
      var miningSuccess: RswiftResources.StringResource { .init(key: "mining.success", tableName: "Localizable", source: source, developmentValue: "Successfully participated in mining today!", comment: nil) }

      /// en translation: *Reminder: The received social weight rewards are only counted into the social weight of the day
      ///
      /// Key: mining.team.alert
      ///
      /// Locales: en, zh-Hant
      var miningTeamAlert: RswiftResources.StringResource { .init(key: "mining.team.alert", tableName: "Localizable", source: source, developmentValue: "*Reminder: The received social weight rewards are only counted into the social weight of the day", comment: nil) }

      /// en translation: Go buy
      ///
      /// Key: mining.tobuy
      ///
      /// Locales: en, zh-Hant
      var miningTobuy: RswiftResources.StringResource { .init(key: "mining.tobuy", tableName: "Localizable", source: source, developmentValue: "Go buy", comment: nil) }

      /// en translation: Social Weight Today
      ///
      /// Key: mining.todaysocialweight
      ///
      /// Locales: en, zh-Hant
      var miningTodaysocialweight: RswiftResources.StringResource { .init(key: "mining.todaysocialweight", tableName: "Localizable", source: source, developmentValue: "Social Weight Today", comment: nil) }

      /// en translation: The highest holding: %@
      ///
      /// Key: mining.topholding
      ///
      /// Locales: en, zh-Hant
      var miningTopholding: RswiftResources.StringResource1<String> { .init(key: "mining.topholding", tableName: "Localizable", source: source, developmentValue: "The highest holding: %@", comment: nil) }

      /// en translation: Total Mining
      ///
      /// Key: mining.totalamount
      ///
      /// Locales: en, zh-Hant
      var miningTotalamount: RswiftResources.StringResource { .init(key: "mining.totalamount", tableName: "Localizable", source: source, developmentValue: "Total Mining", comment: nil) }

      /// en translation: TOX balance
      ///
      /// Key: mining.toxamount
      ///
      /// Locales: en, zh-Hant
      var miningToxamount: RswiftResources.StringResource { .init(key: "mining.toxamount", tableName: "Localizable", source: source, developmentValue: "TOX balance", comment: nil) }

      /// en translation: Contract balance
      ///
      /// Key: mining.toxbalance
      ///
      /// Locales: en, zh-Hant
      var miningToxbalance: RswiftResources.StringResource { .init(key: "mining.toxbalance", tableName: "Localizable", source: source, developmentValue: "Contract balance", comment: nil) }

      /// en translation: User
      ///
      /// Key: mining.user
      ///
      /// Locales: en, zh-Hant
      var miningUser: RswiftResources.StringResource { .init(key: "mining.user", tableName: "Localizable", source: source, developmentValue: "User", comment: nil) }

      /// en translation: User details
      ///
      /// Key: mining.userdetail
      ///
      /// Locales: en, zh-Hant
      var miningUserdetail: RswiftResources.StringResource { .init(key: "mining.userdetail", tableName: "Localizable", source: source, developmentValue: "User details", comment: nil) }

      /// en translation: Wallet address
      ///
      /// Key: mining.walletaddress
      ///
      /// Locales: en, zh-Hant
      var miningWalletaddress: RswiftResources.StringResource { .init(key: "mining.walletaddress", tableName: "Localizable", source: source, developmentValue: "Wallet address", comment: nil) }

      /// en translation: Weights
      ///
      /// Key: mining.weightcount
      ///
      /// Locales: en, zh-Hant
      var miningWeightcount: RswiftResources.StringResource { .init(key: "mining.weightcount", tableName: "Localizable", source: source, developmentValue: "Weights", comment: nil) }

      /// en translation: Weight increase
      ///
      /// Key: mining.weightraise
      ///
      /// Locales: en, zh-Hant
      var miningWeightraise: RswiftResources.StringResource { .init(key: "mining.weightraise", tableName: "Localizable", source: source, developmentValue: "Weight increase", comment: nil) }

      /// en translation: Emission rewards period: %@ times
      ///
      /// Key: mining.weighttime
      ///
      /// Locales: en, zh-Hant
      var miningWeighttime: RswiftResources.StringResource1<String> { .init(key: "mining.weighttime", tableName: "Localizable", source: source, developmentValue: "Emission rewards period: %@ times", comment: nil) }

      /// en translation: 🎉Newbie Benefits
      ///
      /// Key: mining.welfare
      ///
      /// Locales: en, zh-Hant
      var miningWelfare: RswiftResources.StringResource { .init(key: "mining.welfare", tableName: "Localizable", source: source, developmentValue: "🎉Newbie Benefits", comment: nil) }

      /// en translation: Yesterday's social weight
      ///
      /// Key: mining.yesterdaysocialweight
      ///
      /// Locales: en, zh-Hant
      var miningYesterdaysocialweight: RswiftResources.StringResource { .init(key: "mining.yesterdaysocialweight", tableName: "Localizable", source: source, developmentValue: "Yesterday's social weight", comment: nil) }

      /// en translation: Already hold：
      ///
      /// Key: mining_already_hold
      ///
      /// Locales: en, zh-Hant
      var mining_already_hold: RswiftResources.StringResource { .init(key: "mining_already_hold", tableName: "Localizable", source: source, developmentValue: "Already hold：", comment: nil) }

      /// en translation: Current holdings：
      ///
      /// Key: mining_currently_held
      ///
      /// Locales: en, zh-Hant
      var mining_currently_held: RswiftResources.StringResource { .init(key: "mining_currently_held", tableName: "Localizable", source: source, developmentValue: "Current holdings：", comment: nil) }

      /// en translation: Highest holding：
      ///
      /// Key: mining_highest_hold
      ///
      /// Locales: en, zh-Hant
      var mining_highest_hold: RswiftResources.StringResource { .init(key: "mining_highest_hold", tableName: "Localizable", source: source, developmentValue: "Highest holding：", comment: nil) }

      /// en translation: Historical participation
      ///
      /// Key: mining_historical_participation
      ///
      /// Locales: en, zh-Hant
      var mining_historical_participation: RswiftResources.StringResource { .init(key: "mining_historical_participation", tableName: "Localizable", source: source, developmentValue: "Historical participation", comment: nil) }

      /// en translation: Hour
      ///
      /// Key: mining_hour
      ///
      /// Locales: en, zh-Hant
      var mining_hour: RswiftResources.StringResource { .init(key: "mining_hour", tableName: "Localizable", source: source, developmentValue: "Hour", comment: nil) }

      /// en translation: Minute
      ///
      /// Key: mining_minute
      ///
      /// Locales: en, zh-Hant
      var mining_minute: RswiftResources.StringResource { .init(key: "mining_minute", tableName: "Localizable", source: source, developmentValue: "Minute", comment: nil) }

      /// en translation: (Not yet open)
      ///
      /// Key: mining_not_open_yet
      ///
      /// Locales: en, zh-Hant
      var mining_not_open_yet: RswiftResources.StringResource { .init(key: "mining_not_open_yet", tableName: "Localizable", source: source, developmentValue: "(Not yet open)", comment: nil) }

      /// en translation: Release cycle：
      ///
      /// Key: mining_pledge_times
      ///
      /// Locales: en, zh-Hant
      var mining_pledge_times: RswiftResources.StringResource { .init(key: "mining_pledge_times", tableName: "Localizable", source: source, developmentValue: "Release cycle：", comment: nil) }

      /// en translation: Advance sale
      ///
      /// Key: mining_pre_sale
      ///
      /// Locales: en, zh-Hant
      var mining_pre_sale: RswiftResources.StringResource { .init(key: "mining_pre_sale", tableName: "Localizable", source: source, developmentValue: "Advance sale", comment: nil) }

      /// en translation: Pre-sold：
      ///
      /// Key: mining_pre_sold
      ///
      /// Locales: en, zh-Hant
      var mining_pre_sold: RswiftResources.StringResource { .init(key: "mining_pre_sold", tableName: "Localizable", source: source, developmentValue: "Pre-sold：", comment: nil) }

      /// en translation: Pre-sold quantity：
      ///
      /// Key: mining_pre_sold_quantity
      ///
      /// Locales: en, zh-Hant
      var mining_pre_sold_quantity: RswiftResources.StringResource { .init(key: "mining_pre_sold_quantity", tableName: "Localizable", source: source, developmentValue: "Pre-sold quantity：", comment: nil) }

      /// en translation: Go to verify
      ///
      /// Key: mining_sbt_authentication
      ///
      /// Locales: en, zh-Hant
      var mining_sbt_authentication: RswiftResources.StringResource { .init(key: "mining_sbt_authentication", tableName: "Localizable", source: source, developmentValue: "Go to verify", comment: nil) }

      /// en translation: SBT
      ///
      /// Key: mining_sbt_auto
      ///
      /// Locales: en, zh-Hant
      var mining_sbt_auto: RswiftResources.StringResource { .init(key: "mining_sbt_auto", tableName: "Localizable", source: source, developmentValue: "SBT", comment: nil) }

      /// en translation: You have completed the SBT certification at the end of the present, please complete the certification before proceeding
      ///
      /// Key: mining_sbt_info
      ///
      /// Locales: en, zh-Hant
      var mining_sbt_info: RswiftResources.StringResource { .init(key: "mining_sbt_info", tableName: "Localizable", source: source, developmentValue: "You have completed the SBT certification at the end of the present, please complete the certification before proceeding", comment: nil) }

      /// en translation: Second
      ///
      /// Key: mining_second
      ///
      /// Locales: en, zh-Hant
      var mining_second: RswiftResources.StringResource { .init(key: "mining_second", tableName: "Localizable", source: source, developmentValue: "Second", comment: nil) }

      /// en translation: times
      ///
      /// Key: mining_second_rate
      ///
      /// Locales: en, zh-Hant
      var mining_second_rate: RswiftResources.StringResource { .init(key: "mining_second_rate", tableName: "Localizable", source: source, developmentValue: "times", comment: nil) }

      /// en translation: Hold：
      ///
      /// Key: mining_sold
      ///
      /// Locales: en, zh-Hant
      var mining_sold: RswiftResources.StringResource { .init(key: "mining_sold", tableName: "Localizable", source: source, developmentValue: "Hold：", comment: nil) }

      /// en translation: Create a group chat with everyone I recommend
      ///
      /// Key: mining_team_create_group_hint
      ///
      /// Locales: en, zh-Hant
      var mining_team_create_group_hint: RswiftResources.StringResource { .init(key: "mining_team_create_group_hint", tableName: "Localizable", source: source, developmentValue: "Create a group chat with everyone I recommend", comment: nil) }

      /// en translation: Total pending output approx
      ///
      /// Key: mining_total_about
      ///
      /// Locales: en, zh-Hant
      var mining_total_about: RswiftResources.StringResource { .init(key: "mining_total_about", tableName: "Localizable", source: source, developmentValue: "Total pending output approx", comment: nil) }

      /// en translation: Total de la production
      ///
      /// Key: mining_total_output
      ///
      /// Locales: en, zh-Hant
      var mining_total_output: RswiftResources.StringResource { .init(key: "mining_total_output", tableName: "Localizable", source: source, developmentValue: "Total de la production", comment: nil) }

      /// en translation: Total quantity
      ///
      /// Key: mining_total_quantity
      ///
      /// Locales: en, zh-Hant
      var mining_total_quantity: RswiftResources.StringResource { .init(key: "mining_total_quantity", tableName: "Localizable", source: source, developmentValue: "Total quantity", comment: nil) }

      /// en translation: Successfully participate in Social Earn Today!
      ///
      /// Key: miningsuccess
      ///
      /// Locales: en, zh-Hant
      var miningsuccess: RswiftResources.StringResource { .init(key: "miningsuccess", tableName: "Localizable", source: source, developmentValue: "Successfully participate in Social Earn Today!", comment: nil) }

      /// en translation: Referrer details
      ///
      /// Key: mininig.recommenddetail
      ///
      /// Locales: en, zh-Hant
      var mininigRecommenddetail: RswiftResources.StringResource { .init(key: "mininig.recommenddetail", tableName: "Localizable", source: source, developmentValue: "Referrer details", comment: nil) }

      /// en translation: %Ld minutes ago
      ///
      /// Key: minuteago
      ///
      /// Locales: en, zh-Hant
      var minuteago: RswiftResources.StringResource1<Int> { .init(key: "minuteago", tableName: "Localizable", source: source, developmentValue: "%Ld minutes ago", comment: nil) }

      /// en translation: Seed Phrase
      ///
      /// Key: mnemonic
      ///
      /// Locales: en, zh-Hant
      var mnemonic: RswiftResources.StringResource { .init(key: "mnemonic", tableName: "Localizable", source: source, developmentValue: "Seed Phrase", comment: nil) }

      /// en translation: Seed
      ///
      /// Key: mnemonic.shorter
      ///
      /// Locales: en, zh-Hant
      var mnemonicShorter: RswiftResources.StringResource { .init(key: "mnemonic.shorter", tableName: "Localizable", source: source, developmentValue: "Seed", comment: nil) }

      /// en translation: Attention:   Please do not disclose seed phrase to anyone. Once seed phrase are lost, assets cannot be restored.   Please do not backup and save through screenshots or network transmission.   In any case, please do not easily uninstall the wallet app
      ///
      /// Key: mnemonicalertdesc
      ///
      /// Locales: en, zh-Hant
      var mnemonicalertdesc: RswiftResources.StringResource { .init(key: "mnemonicalertdesc", tableName: "Localizable", source: source, developmentValue: "Attention: \n Please do not disclose seed phrase to anyone. Once seed phrase are lost, assets cannot be restored. \n Please do not backup and save through screenshots or network transmission. \n In any case, please do not easily uninstall the wallet app", comment: nil) }

      /// en translation: Seed phrases are used to restore wallets or reset wallet passwords, accurately transcribing them on paper and storing them in a safe place that only you know.
      ///
      /// Key: mnemonicdescprition
      ///
      /// Locales: en, zh-Hant
      var mnemonicdescprition: RswiftResources.StringResource { .init(key: "mnemonicdescprition", tableName: "Localizable", source: source, developmentValue: "Seed phrases are used to restore wallets or reset wallet passwords, accurately transcribing them on paper and storing them in a safe place that only you know.", comment: nil) }

      /// en translation: Modify nickname
      ///
      /// Key: modify_username
      ///
      /// Locales: en, zh-Hant
      var modify_username: RswiftResources.StringResource { .init(key: "modify_username", tableName: "Localizable", source: source, developmentValue: "Modify nickname", comment: nil) }

      /// en translation: Modify wallet name
      ///
      /// Key: modify_wallet_name
      ///
      /// Locales: en, zh-Hant
      var modify_wallet_name: RswiftResources.StringResource { .init(key: "modify_wallet_name", tableName: "Localizable", source: source, developmentValue: "Modify wallet name", comment: nil) }

      /// en translation: Monday
      ///
      /// Key: monday
      ///
      /// Locales: en, zh-Hant
      var monday: RswiftResources.StringResource { .init(key: "monday", tableName: "Localizable", source: source, developmentValue: "Monday", comment: nil) }

      /// en translation: month
      ///
      /// Key: month
      ///
      /// Locales: en, zh-Hant
      var month: RswiftResources.StringResource { .init(key: "month", tableName: "Localizable", source: source, developmentValue: "month", comment: nil) }

      /// en translation: %Ld months ago
      ///
      /// Key: monthago
      ///
      /// Locales: en, zh-Hant
      var monthago: RswiftResources.StringResource1<Int> { .init(key: "monthago", tableName: "Localizable", source: source, developmentValue: "%Ld months ago", comment: nil) }

      /// en translation: %ldMonth
      ///
      /// Key: moon
      ///
      /// Locales: en, zh-Hant
      var moon: RswiftResources.StringResource1<Int> { .init(key: "moon", tableName: "Localizable", source: source, developmentValue: "%ldMonth", comment: nil) }

      /// en translation: Files have been moved to sandbox.
      ///
      /// Key: moveLog
      ///
      /// Locales: en, zh-Hant
      var moveLog: RswiftResources.StringResource { .init(key: "moveLog", tableName: "Localizable", source: source, developmentValue: "Files have been moved to sandbox.", comment: nil) }

      /// en translation: %@ moved to blocklist.
      ///
      /// Key: moveToBL
      ///
      /// Locales: en, zh-Hant
      var moveToBL: RswiftResources.StringResource1<String> { .init(key: "moveToBL", tableName: "Localizable", source: source, developmentValue: "%@ moved to blocklist.", comment: nil) }

      /// en translation: Failed to move to blocklist
      ///
      /// Key: moveToBLFail
      ///
      /// Locales: en, zh-Hant
      var moveToBLFail: RswiftResources.StringResource { .init(key: "moveToBLFail", tableName: "Localizable", source: source, developmentValue: "Failed to move to blocklist", comment: nil) }

      /// en translation: Moved to blocklist
      ///
      /// Key: moveToBLSuccess
      ///
      /// Locales: en, zh-Hant
      var moveToBLSuccess: RswiftResources.StringResource { .init(key: "moveToBLSuccess", tableName: "Localizable", source: source, developmentValue: "Moved to blocklist", comment: nil) }

      /// en translation: Message Details
      ///
      /// Key: msgInfo
      ///
      /// Locales: en, zh-Hant
      var msgInfo: RswiftResources.StringResource { .init(key: "msgInfo", tableName: "Localizable", source: source, developmentValue: "Message Details", comment: nil) }

      /// en translation: Chat history
      ///
      /// Key: msgList
      ///
      /// Locales: en, zh-Hant
      var msgList: RswiftResources.StringResource { .init(key: "msgList", tableName: "Localizable", source: source, developmentValue: "Chat history", comment: nil) }

      /// en translation: New Messages
      ///
      /// Key: msgPrompt
      ///
      /// Locales: en, zh-Hant
      var msgPrompt: RswiftResources.StringResource { .init(key: "msgPrompt", tableName: "Localizable", source: source, developmentValue: "New Messages", comment: nil) }

      /// en translation: Translate
      ///
      /// Key: msgTranslate
      ///
      /// Locales: en, zh-Hant
      var msgTranslate: RswiftResources.StringResource { .init(key: "msgTranslate", tableName: "Localizable", source: source, developmentValue: "Translate", comment: nil) }

      /// en translation: Multi-Device [Contact]
      ///
      /// Key: multiDevices[Contact]
      ///
      /// Locales: en, zh-Hant
      var multiDevicesContact: RswiftResources.StringResource { .init(key: "multiDevices[Contact]", tableName: "Localizable", source: source, developmentValue: "Multi-Device [Contact]", comment: nil) }

      /// en translation: Multi-Device [group]
      ///
      /// Key: multiDevices[Group]
      ///
      /// Locales: en, zh-Hant
      var multiDevicesGroup: RswiftResources.StringResource { .init(key: "multiDevices[Group]", tableName: "Localizable", source: source, developmentValue: "Multi-Device [group]", comment: nil) }

      /// en translation: Multiple Choice
      ///
      /// Key: multiSelect
      ///
      /// Locales: en, zh-Hant
      var multiSelect: RswiftResources.StringResource { .init(key: "multiSelect", tableName: "Localizable", source: source, developmentValue: "Multiple Choice", comment: nil) }

      /// en translation: Required
      ///
      /// Key: must
      ///
      /// Locales: en, zh-Hant
      var must: RswiftResources.StringResource { .init(key: "must", tableName: "Localizable", source: source, developmentValue: "Required", comment: nil) }

      /// en translation: Mute
      ///
      /// Key: mute
      ///
      /// Locales: en, zh-Hant
      var mute: RswiftResources.StringResource { .init(key: "mute", tableName: "Localizable", source: source, developmentValue: "Mute", comment: nil) }

      /// en translation: Mute adminstrator...
      ///
      /// Key: muteAdminsing
      ///
      /// Locales: en, zh-Hant
      var muteAdminsing: RswiftResources.StringResource { .init(key: "muteAdminsing", tableName: "Localizable", source: source, developmentValue: "Mute adminstrator...", comment: nil) }

      /// en translation: Failed to mute
      ///
      /// Key: muteFail
      ///
      /// Locales: en, zh-Hant
      var muteFail: RswiftResources.StringResource { .init(key: "muteFail", tableName: "Localizable", source: source, developmentValue: "Failed to mute", comment: nil) }

      /// en translation: Block group messages
      ///
      /// Key: muteGroup
      ///
      /// Locales: en, zh-Hant
      var muteGroup: RswiftResources.StringResource { .init(key: "muteGroup", tableName: "Localizable", source: source, developmentValue: "Block group messages", comment: nil) }

      /// en translation: Mute group administrator %@
      ///
      /// Key: muteGroupAdmins
      ///
      /// Locales: en, zh-Hant
      var muteGroupAdmins: RswiftResources.StringResource1<String> { .init(key: "muteGroupAdmins", tableName: "Localizable", source: source, developmentValue: "Mute group administrator %@", comment: nil) }

      /// en translation: Mute group member %@
      ///
      /// Key: muteGroupMember
      ///
      /// Locales: en, zh-Hant
      var muteGroupMember: RswiftResources.StringResource1<String> { .init(key: "muteGroupMember", tableName: "Localizable", source: source, developmentValue: "Mute group member %@", comment: nil) }

      /// en translation: Mute management
      ///
      /// Key: muteManager
      ///
      /// Locales: en, zh-Hant
      var muteManager: RswiftResources.StringResource { .init(key: "muteManager", tableName: "Localizable", source: source, developmentValue: "Mute management", comment: nil) }

      /// en translation: Mute member...
      ///
      /// Key: muteMembering
      ///
      /// Locales: en, zh-Hant
      var muteMembering: RswiftResources.StringResource { .init(key: "muteMembering", tableName: "Localizable", source: source, developmentValue: "Mute member...", comment: nil) }

      /// en translation: Muted
      ///
      /// Key: muteSuccess
      ///
      /// Locales: en, zh-Hant
      var muteSuccess: RswiftResources.StringResource { .init(key: "muteSuccess", tableName: "Localizable", source: source, developmentValue: "Muted", comment: nil) }

      /// en translation: You have been muted in group %@ 
      ///
      /// Key: mutedPrompt
      ///
      /// Locales: en, zh-Hant
      var mutedPrompt: RswiftResources.StringResource1<String> { .init(key: "mutedPrompt", tableName: "Localizable", source: source, developmentValue: "You have been muted in group %@ ", comment: nil) }

      /// en translation: You have been muted.
      ///
      /// Key: muteePrompt
      ///
      /// Locales: en, zh-Hant
      var muteePrompt: RswiftResources.StringResource { .init(key: "muteePrompt", tableName: "Localizable", source: source, developmentValue: "You have been muted.", comment: nil) }

      /// en translation: Mute list
      ///
      /// Key: mutes
      ///
      /// Locales: en, zh-Hant
      var mutes: RswiftResources.StringResource { .init(key: "mutes", tableName: "Localizable", source: source, developmentValue: "Mute list", comment: nil) }

      /// en translation: My Bookmarks
      ///
      /// Key: myBookmarks
      ///
      /// Locales: en, zh-Hant
      var myBookmarks: RswiftResources.StringResource { .init(key: "myBookmarks", tableName: "Localizable", source: source, developmentValue: "My Bookmarks", comment: nil) }

      /// en translation: My Bookmarks
      ///
      /// Key: myDappsButton.imageLabel
      ///
      /// Locales: en, zh-Hant
      var myDappsButtonImageLabel: RswiftResources.StringResource { .init(key: "myDappsButton.imageLabel", tableName: "Localizable", source: source, developmentValue: "My Bookmarks", comment: nil) }

      /// en translation: My recommended
      ///
      /// Key: myRecommondCount
      ///
      /// Locales: en, zh-Hant
      var myRecommondCount: RswiftResources.StringResource { .init(key: "myRecommondCount", tableName: "Localizable", source: source, developmentValue: "My recommended", comment: nil) }

      /// en translation: My broadcast robot
      ///
      /// Key: myRelayRobot
      ///
      /// Locales: en, zh-Hant
      var myRelayRobot: RswiftResources.StringResource { .init(key: "myRelayRobot", tableName: "Localizable", source: source, developmentValue: "My broadcast robot", comment: nil) }

      /// en translation: Expected promotion reward this time: %@ TOX
      ///
      /// Key: myRewardCount
      ///
      /// Locales: en, zh-Hant
      var myRewardCount: RswiftResources.StringResource1<String> { .init(key: "myRewardCount", tableName: "Localizable", source: source, developmentValue: "Expected promotion reward this time: %@ TOX", comment: nil) }

      /// en translation: Create a group
      ///
      /// Key: myTeamCreateGroup
      ///
      /// Locales: en, zh-Hant
      var myTeamCreateGroup: RswiftResources.StringResource { .init(key: "myTeamCreateGroup", tableName: "Localizable", source: source, developmentValue: "Create a group", comment: nil) }

      /// en translation: Update group members
      ///
      /// Key: myTeamGoGroup
      ///
      /// Locales: en, zh-Hant
      var myTeamGoGroup: RswiftResources.StringResource { .init(key: "myTeamGoGroup", tableName: "Localizable", source: source, developmentValue: "Update group members", comment: nil) }

      /// en translation: %@ team group
      ///
      /// Key: myTeamGroupName
      ///
      /// Locales: en, zh-Hant
      var myTeamGroupName: RswiftResources.StringResource1<String> { .init(key: "myTeamGroupName", tableName: "Localizable", source: source, developmentValue: "%@ team group", comment: nil) }

      /// en translation: My INID
      ///
      /// Key: my_inid
      ///
      /// Locales: en, zh-Hant
      var my_inid: RswiftResources.StringResource { .init(key: "my_inid", tableName: "Localizable", source: source, developmentValue: "My INID", comment: nil) }

      /// en translation: The number of my medals
      ///
      /// Key: mymedal
      ///
      /// Locales: en, zh-Hant
      var mymedal: RswiftResources.StringResource { .init(key: "mymedal", tableName: "Localizable", source: source, developmentValue: "The number of my medals", comment: nil) }

      /// en translation: My Medal Details
      ///
      /// Key: mymedaldetail
      ///
      /// Locales: en, zh-Hant
      var mymedaldetail: RswiftResources.StringResource { .init(key: "mymedaldetail", tableName: "Localizable", source: source, developmentValue: "My Medal Details", comment: nil) }

      /// en translation: Building name
      ///
      /// Key: nameofbuilding
      ///
      /// Locales: en, zh-Hant
      var nameofbuilding: RswiftResources.StringResource { .init(key: "nameofbuilding", tableName: "Localizable", source: source, developmentValue: "Building name", comment: nil) }

      /// en translation: Camera permission not enabled
      ///
      /// Key: needCameraRight
      ///
      /// Locales: en, zh-Hant
      var needCameraRight: RswiftResources.StringResource { .init(key: "needCameraRight", tableName: "Localizable", source: source, developmentValue: "Camera permission not enabled", comment: nil) }

      /// en translation: Enter the group name
      ///
      /// Key: needGroupSubject
      ///
      /// Locales: en, zh-Hant
      var needGroupSubject: RswiftResources.StringResource { .init(key: "needGroupSubject", tableName: "Localizable", source: source, developmentValue: "Enter the group name", comment: nil) }

      /// en translation: Microphone permission not enabled
      ///
      /// Key: needMicRight
      ///
      /// Locales: en, zh-Hant
      var needMicRight: RswiftResources.StringResource { .init(key: "needMicRight", tableName: "Localizable", source: source, developmentValue: "Microphone permission not enabled", comment: nil) }

      /// en translation: Are you sure you want to delete Cloud Backup?
      ///
      /// Key: need_delete_cloud
      ///
      /// Locales: en, zh-Hant
      var need_delete_cloud: RswiftResources.StringResource { .init(key: "need_delete_cloud", tableName: "Localizable", source: source, developmentValue: "Are you sure you want to delete Cloud Backup?", comment: nil) }

      /// en translation: Negative
      ///
      /// Key: negative
      ///
      /// Locales: en, zh-Hant
      var negative: RswiftResources.StringResource { .init(key: "negative", tableName: "Localizable", source: source, developmentValue: "Negative", comment: nil) }

      /// en translation: Network failure
      ///
      /// Key: neterror
      ///
      /// Locales: en, zh-Hant
      var neterror: RswiftResources.StringResource { .init(key: "neterror", tableName: "Localizable", source: source, developmentValue: "Network failure", comment: nil) }

      /// en translation: Your network may be abnormal, please check and click Retry
      ///
      /// Key: network_abnormal_Retry
      ///
      /// Locales: en, zh-Hant
      var network_abnormal_Retry: RswiftResources.StringResource { .init(key: "network_abnormal_Retry", tableName: "Localizable", source: source, developmentValue: "Your network may be abnormal, please check and click Retry", comment: nil) }

      /// en translation: Error parsing network data
      ///
      /// Key: networkdatafailed
      ///
      /// Locales: en, zh-Hant
      var networkdatafailed: RswiftResources.StringResource { .init(key: "networkdatafailed", tableName: "Localizable", source: source, developmentValue: "Error parsing network data", comment: nil) }

      /// en translation: Network request failed
      ///
      /// Key: networkrequestfailed
      ///
      /// Locales: en, zh-Hant
      var networkrequestfailed: RswiftResources.StringResource { .init(key: "networkrequestfailed", tableName: "Localizable", source: source, developmentValue: "Network request failed", comment: nil) }

      /// en translation: New friend
      ///
      /// Key: newContact
      ///
      /// Locales: en, zh-Hant
      var newContact: RswiftResources.StringResource { .init(key: "newContact", tableName: "Localizable", source: source, developmentValue: "New friend", comment: nil) }

      /// en translation: New Message Notification
      ///
      /// Key: newMsgNotice
      ///
      /// Locales: en, zh-Hant
      var newMsgNotice: RswiftResources.StringResource { .init(key: "newMsgNotice", tableName: "Localizable", source: source, developmentValue: "New Message Notification", comment: nil) }

      /// en translation: Total new weight: %@
      ///
      /// Key: new_pioneer_all_weight
      ///
      /// Locales: en, zh-Hant
      var new_pioneer_all_weight: RswiftResources.StringResource1<String> { .init(key: "new_pioneer_all_weight", tableName: "Localizable", source: source, developmentValue: "Total new weight: %@", comment: nil) }

      /// en translation: Add new weight:
      ///
      /// Key: new_pioneer_weight
      ///
      /// Locales: en, zh-Hant
      var new_pioneer_weight: RswiftResources.StringResource { .init(key: "new_pioneer_weight", tableName: "Localizable", source: source, developmentValue: "Add new weight:", comment: nil) }

      /// en translation: Newbie rewards
      ///
      /// Key: new_user_reward
      ///
      /// Locales: en, zh-Hant
      var new_user_reward: RswiftResources.StringResource { .init(key: "new_user_reward", tableName: "Localizable", source: source, developmentValue: "Newbie rewards", comment: nil) }

      /// en translation: Newuser Reward
      ///
      /// Key: newcomerbonus
      ///
      /// Locales: en, zh-Hant
      var newcomerbonus: RswiftResources.StringResource { .init(key: "newcomerbonus", tableName: "Localizable", source: source, developmentValue: "Newuser Reward", comment: nil) }

      /// en translation: %D new messages
      ///
      /// Key: newmessage
      ///
      /// Locales: en, zh-Hant
      var newmessage: RswiftResources.StringResource1<Int> { .init(key: "newmessage", tableName: "Localizable", source: source, developmentValue: "%D new messages", comment: nil) }

      /// en translation: You have a new message.
      ///
      /// Key: newmsg
      ///
      /// Locales: en, zh-Hant
      var newmsg: RswiftResources.StringResource { .init(key: "newmsg", tableName: "Localizable", source: source, developmentValue: "You have a new message.", comment: nil) }

      /// en translation: Let's talk about it next time
      ///
      /// Key: next.again
      ///
      /// Locales: en, zh-Hant
      var nextAgain: RswiftResources.StringResource { .init(key: "next.again", tableName: "Localizable", source: source, developmentValue: "Let's talk about it next time", comment: nil) }

      /// en translation: Nickname
      ///
      /// Key: nickname
      ///
      /// Locales: en, zh-Hant
      var nickname: RswiftResources.StringResource { .init(key: "nickname", tableName: "Localizable", source: source, developmentValue: "Nickname", comment: nil) }

      /// en translation: HH:mm
      ///
      /// Key: nighttime
      ///
      /// Locales: en, zh-Hant
      var nighttime: RswiftResources.StringResource { .init(key: "nighttime", tableName: "Localizable", source: source, developmentValue: "HH:mm", comment: nil) }

      /// en translation: nine
      ///
      /// Key: nine
      ///
      /// Locales: en, zh-Hant
      var nine: RswiftResources.StringResource { .init(key: "nine", tableName: "Localizable", source: source, developmentValue: "nine", comment: nil) }

      /// en translation: nine
      ///
      /// Key: nine_traditional
      ///
      /// Locales: en, zh-Hant
      var nine_traditional: RswiftResources.StringResource { .init(key: "nine_traditional", tableName: "Localizable", source: source, developmentValue: "nine", comment: nil) }

      /// en translation: Payment information not detected, please wait or pay again
      ///
      /// Key: no.payment.info
      ///
      /// Locales: en, zh-Hant
      var noPaymentInfo: RswiftResources.StringResource { .init(key: "no.payment.info", tableName: "Localizable", source: source, developmentValue: "Payment information not detected, please wait or pay again", comment: nil) }

      /// en translation: There is currently no blacklist available
      ///
      /// Key: noBlacklist
      ///
      /// Locales: en, zh-Hant
      var noBlacklist: RswiftResources.StringResource { .init(key: "noBlacklist", tableName: "Localizable", source: source, developmentValue: "There is currently no blacklist available", comment: nil) }

      /// en translation: No data
      ///
      /// Key: noData
      ///
      /// Locales: en, zh-Hant
      var noData: RswiftResources.StringResource { .init(key: "noData", tableName: "Localizable", source: source, developmentValue: "No data", comment: nil) }

      /// en translation: No group announcement
      ///
      /// Key: noGroupAnn
      ///
      /// Locales: en, zh-Hant
      var noGroupAnn: RswiftResources.StringResource { .init(key: "noGroupAnn", tableName: "Localizable", source: source, developmentValue: "No group announcement", comment: nil) }

      /// en translation: The group owner is very lazy. There is no group profile~
      ///
      /// Key: noGroupDescription
      ///
      /// Locales: en, zh-Hant
      var noGroupDescription: RswiftResources.StringResource { .init(key: "noGroupDescription", tableName: "Localizable", source: source, developmentValue: "The group owner is very lazy. There is no group profile~", comment: nil) }

      /// en translation: Do not disturb
      ///
      /// Key: noNotice
      ///
      /// Locales: en, zh-Hant
      var noNotice: RswiftResources.StringResource { .init(key: "noNotice", tableName: "Localizable", source: source, developmentValue: "Do not disturb", comment: nil) }

      /// en translation: Do not disturb
      ///
      /// Key: noNoticeTimes
      ///
      /// Locales: en, zh-Hant
      var noNoticeTimes: RswiftResources.StringResource { .init(key: "noNoticeTimes", tableName: "Localizable", source: source, developmentValue: "Do not disturb", comment: nil) }

      /// en translation: Not answered
      ///
      /// Key: noResponse
      ///
      /// Locales: en, zh-Hant
      var noResponse: RswiftResources.StringResource { .init(key: "noResponse", tableName: "Localizable", source: source, developmentValue: "Not answered", comment: nil) }

      /// en translation: Group not found
      ///
      /// Key: noSearchGroups
      ///
      /// Locales: en, zh-Hant
      var noSearchGroups: RswiftResources.StringResource { .init(key: "noSearchGroups", tableName: "Localizable", source: source, developmentValue: "Group not found", comment: nil) }

      /// en translation: No participation details yet
      ///
      /// Key: no_revenue_presentse_cycle
      ///
      /// Locales: en, zh-Hant
      var no_revenue_presentse_cycle: RswiftResources.StringResource { .init(key: "no_revenue_presentse_cycle", tableName: "Localizable", source: source, developmentValue: "No participation details yet", comment: nil) }

      /// en translation: No one wallet, 
      ///
      /// Key: no_wallet_create_prefix
      ///
      /// Locales: en, zh-Hant
      var no_wallet_create_prefix: RswiftResources.StringResource { .init(key: "no_wallet_create_prefix", tableName: "Localizable", source: source, developmentValue: "No one wallet, ", comment: nil) }

      /// en translation: create one now
      ///
      /// Key: no_wallet_create_surfix
      ///
      /// Locales: en, zh-Hant
      var no_wallet_create_surfix: RswiftResources.StringResource { .init(key: "no_wallet_create_surfix", tableName: "Localizable", source: source, developmentValue: "create one now", comment: nil) }

      /// en translation: Missed call. Tap to call back.
      ///
      /// Key: nocallresponse
      ///
      /// Locales: en, zh-Hant
      var nocallresponse: RswiftResources.StringResource { .init(key: "nocallresponse", tableName: "Localizable", source: source, developmentValue: "Missed call. Tap to call back.", comment: nil) }

      /// en translation: Camera device not detected
      ///
      /// Key: nocameradevice
      ///
      /// Locales: en, zh-Hant
      var nocameradevice: RswiftResources.StringResource { .init(key: "nocameradevice", tableName: "Localizable", source: source, developmentValue: "Camera device not detected", comment: nil) }

      /// en translation: Node Info
      ///
      /// Key: node_detail_title
      ///
      /// Locales: en, zh-Hant
      var node_detail_title: RswiftResources.StringResource { .init(key: "node_detail_title", tableName: "Localizable", source: source, developmentValue: "Node Info", comment: nil) }

      /// en translation: Node Details
      ///
      /// Key: node_details_list_title
      ///
      /// Locales: en, zh-Hant
      var node_details_list_title: RswiftResources.StringResource { .init(key: "node_details_list_title", tableName: "Localizable", source: source, developmentValue: "Node Details", comment: nil) }

      /// en translation: Indicates the number of ongoing participation, and those that have ended are not counted; the welfare packages sent by INTO, such as star rewards, are not counted in the number of holdings.
      ///
      /// Key: node_hold_content
      ///
      /// Locales: en, zh-Hant
      var node_hold_content: RswiftResources.StringResource { .init(key: "node_hold_content", tableName: "Localizable", source: source, developmentValue: "Indicates the number of ongoing participation, and those that have ended are not counted; the welfare packages sent by INTO, such as star rewards, are not counted in the number of holdings.", comment: nil) }

      /// en translation: The city node has not been opened, please stay tuned
      ///
      /// Key: node_not_open
      ///
      /// Locales: en, zh-Hant
      var node_not_open: RswiftResources.StringResource { .init(key: "node_not_open", tableName: "Localizable", source: source, developmentValue: "The city node has not been opened, please stay tuned", comment: nil) }

      /// en translation: Social node rewards
      ///
      /// Key: node_reward
      ///
      /// Locales: en, zh-Hant
      var node_reward: RswiftResources.StringResource { .init(key: "node_reward", tableName: "Localizable", source: source, developmentValue: "Social node rewards", comment: nil) }

      /// en translation: No message notification
      ///
      /// Key: nomessage
      ///
      /// Locales: en, zh-Hant
      var nomessage: RswiftResources.StringResource { .init(key: "nomessage", tableName: "Localizable", source: source, developmentValue: "No message notification", comment: nil) }

      /// en translation: Average Price
      ///
      /// Key: nonfungibles.value.averagePrice
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueAveragePrice: RswiftResources.StringResource { .init(key: "nonfungibles.value.averagePrice", tableName: "Localizable", source: source, developmentValue: "Average Price", comment: nil) }

      /// en translation: Blockchain
      ///
      /// Key: nonfungibles.value.blockchain
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueBlockchain: RswiftResources.StringResource { .init(key: "nonfungibles.value.blockchain", tableName: "Localizable", source: source, developmentValue: "Blockchain", comment: nil) }

      /// en translation: Contract
      ///
      /// Key: nonfungibles.value.contract
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueContract: RswiftResources.StringResource { .init(key: "nonfungibles.value.contract", tableName: "Localizable", source: source, developmentValue: "Contract", comment: nil) }

      /// en translation: Floor Price
      ///
      /// Key: nonfungibles.value.floorPrice
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueFloorPrice: RswiftResources.StringResource { .init(key: "nonfungibles.value.floorPrice", tableName: "Localizable", source: source, developmentValue: "Floor Price", comment: nil) }

      /// en translation: Items
      ///
      /// Key: nonfungibles.value.itemsCount
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueItemsCount: RswiftResources.StringResource { .init(key: "nonfungibles.value.itemsCount", tableName: "Localizable", source: source, developmentValue: "Items", comment: nil) }

      /// en translation: Market Cap
      ///
      /// Key: nonfungibles.value.marketCap
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueMarketCap: RswiftResources.StringResource { .init(key: "nonfungibles.value.marketCap", tableName: "Localizable", source: source, developmentValue: "Market Cap", comment: nil) }

      /// en translation: Num Reports
      ///
      /// Key: nonfungibles.value.numReports
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueNumReports: RswiftResources.StringResource { .init(key: "nonfungibles.value.numReports", tableName: "Localizable", source: source, developmentValue: "Num Reports", comment: nil) }

      /// en translation: Owned Asset Count
      ///
      /// Key: nonfungibles.value.ownedAssetCount
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueOwnedAssetCount: RswiftResources.StringResource { .init(key: "nonfungibles.value.ownedAssetCount", tableName: "Localizable", source: source, developmentValue: "Owned Asset Count", comment: nil) }

      /// en translation: Owners
      ///
      /// Key: nonfungibles.value.owners
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueOwners: RswiftResources.StringResource { .init(key: "nonfungibles.value.owners", tableName: "Localizable", source: source, developmentValue: "Owners", comment: nil) }

      /// en translation: %d%@ have this trait
      ///
      /// Key: nonfungibles.value.rarity
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueRarity: RswiftResources.StringResource2<Int, String> { .init(key: "nonfungibles.value.rarity", tableName: "Localizable", source: source, developmentValue: "%d%@ have this trait", comment: nil) }

      /// en translation: Unique
      ///
      /// Key: nonfungibles.value.rarity.unique
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueRarityUnique: RswiftResources.StringResource { .init(key: "nonfungibles.value.rarity.unique", tableName: "Localizable", source: source, developmentValue: "Unique", comment: nil) }

      /// en translation: Token Standard
      ///
      /// Key: nonfungibles.value.tokenStandard
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueTokenStandard: RswiftResources.StringResource { .init(key: "nonfungibles.value.tokenStandard", tableName: "Localizable", source: source, developmentValue: "Token Standard", comment: nil) }

      /// en translation: Total Sales
      ///
      /// Key: nonfungibles.value.totalSales
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueTotalSales: RswiftResources.StringResource { .init(key: "nonfungibles.value.totalSales", tableName: "Localizable", source: source, developmentValue: "Total Sales", comment: nil) }

      /// en translation: Total Supply
      ///
      /// Key: nonfungibles.value.totalSupply
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueTotalSupply: RswiftResources.StringResource { .init(key: "nonfungibles.value.totalSupply", tableName: "Localizable", source: source, developmentValue: "Total Supply", comment: nil) }

      /// en translation: Total Volume
      ///
      /// Key: nonfungibles.value.totalVolume
      ///
      /// Locales: en, zh-Hant
      var nonfungiblesValueTotalVolume: RswiftResources.StringResource { .init(key: "nonfungibles.value.totalVolume", tableName: "Localizable", source: source, developmentValue: "Total Volume", comment: nil) }

      /// en translation: There are currently no recommended users
      ///
      /// Key: norecommenduser
      ///
      /// Locales: en, zh-Hant
      var norecommenduser: RswiftResources.StringResource { .init(key: "norecommenduser", tableName: "Localizable", source: source, developmentValue: "There are currently no recommended users", comment: nil) }

      /// en translation: No result
      ///
      /// Key: noresult
      ///
      /// Locales: en, zh-Hant
      var noresult: RswiftResources.StringResource { .init(key: "noresult", tableName: "Localizable", source: source, developmentValue: "No result", comment: nil) }

      /// en translation: This application is only used for INTO product functions, please do not use it for illegal purposes. No screenshots allowed...
      ///
      /// Key: noscreenshots
      ///
      /// Locales: en, zh-Hant
      var noscreenshots: RswiftResources.StringResource { .init(key: "noscreenshots", tableName: "Localizable", source: source, developmentValue: "This application is only used for INTO product functions, please do not use it for illegal purposes. No screenshots allowed...", comment: nil) }

      /// en translation: This mining machine is only available to users who have not purchased L3 or above
      ///
      /// Key: not.staking
      ///
      /// Locales: en, zh-Hant
      var notStaking: RswiftResources.StringResource { .init(key: "not.staking", tableName: "Localizable", source: source, developmentValue: "This mining machine is only available to users who have not purchased L3 or above", comment: nil) }

      /// en translation: This feature currently does not support %@ chains
      ///
      /// Key: not.support.ethereum.chain
      ///
      /// Locales: en, zh-Hant
      var notSupportEthereumChain: RswiftResources.StringResource1<String> { .init(key: "not.support.ethereum.chain", tableName: "Localizable", source: source, developmentValue: "This feature currently does not support %@ chains", comment: nil) }

      /// en translation: The user is not in the blocklist.
      ///
      /// Key: notInBlackList
      ///
      /// Locales: en, zh-Hant
      var notInBlackList: RswiftResources.StringResource { .init(key: "notInBlackList", tableName: "Localizable", source: source, developmentValue: "The user is not in the blocklist.", comment: nil) }

      /// en translation: Can’t connect to server
      ///
      /// Key: notReachServer
      ///
      /// Locales: en, zh-Hant
      var notReachServer: RswiftResources.StringResource { .init(key: "notReachServer", tableName: "Localizable", source: source, developmentValue: "Can’t connect to server", comment: nil) }

      /// en translation: The message does not exist.
      ///
      /// Key: not_exist_message
      ///
      /// Locales: en, zh-Hant
      var not_exist_message: RswiftResources.StringResource { .init(key: "not_exist_message", tableName: "Localizable", source: source, developmentValue: "The message does not exist.", comment: nil) }

      /// en translation: You have not turned on positioning and cannot participate
      ///
      /// Key: not_located_prompt
      ///
      /// Locales: en, zh-Hant
      var not_located_prompt: RswiftResources.StringResource { .init(key: "not_located_prompt", tableName: "Localizable", source: source, developmentValue: "You have not turned on positioning and cannot participate", comment: nil) }

      /// en translation: Unlocked
      ///
      /// Key: notunlocked
      ///
      /// Locales: en, zh-Hant
      var notunlocked: RswiftResources.StringResource { .init(key: "notunlocked", tableName: "Localizable", source: source, developmentValue: "Unlocked", comment: nil) }

      /// en translation: Number of rewards
      ///
      /// Key: number_of_rewards
      ///
      /// Locales: en, zh-Hant
      var number_of_rewards: RswiftResources.StringResource { .init(key: "number_of_rewards", tableName: "Localizable", source: source, developmentValue: "Number of rewards", comment: nil) }

      /// en translation: Your account is offline.
      ///
      /// Key: offlinePrompt
      ///
      /// Locales: en, zh-Hant
      var offlinePrompt: RswiftResources.StringResource { .init(key: "offlinePrompt", tableName: "Localizable", source: source, developmentValue: "Your account is offline.", comment: nil) }

      /// en translation: OK
      ///
      /// Key: ok
      ///
      /// Locales: en, zh-Hant
      var ok: RswiftResources.StringResource { .init(key: "ok", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Your funds will be at risk if you do not back up before using your wallet
      ///
      /// Key: onboarding.newWallet.backupWallet.description
      ///
      /// Locales: en, zh-Hant
      var onboardingNewWalletBackupWalletDescription: RswiftResources.StringResource { .init(key: "onboarding.newWallet.backupWallet.description", tableName: "Localizable", source: source, developmentValue: "Your funds will be at risk if you do not back up before using your wallet", comment: nil) }

      /// en translation: Back up your Wallet
      ///
      /// Key: onboarding.newWallet.backupWallet.title
      ///
      /// Locales: en, zh-Hant
      var onboardingNewWalletBackupWalletTitle: RswiftResources.StringResource { .init(key: "onboarding.newWallet.backupWallet.title", tableName: "Localizable", source: source, developmentValue: "Back up your Wallet", comment: nil) }

      /// en translation: one
      ///
      /// Key: one
      ///
      /// Locales: en, zh-Hant
      var one: RswiftResources.StringResource { .init(key: "one", tableName: "Localizable", source: source, developmentValue: "one", comment: nil) }

      /// en translation: one
      ///
      /// Key: one_traditional
      ///
      /// Locales: en, zh-Hant
      var one_traditional: RswiftResources.StringResource { .init(key: "one_traditional", tableName: "Localizable", source: source, developmentValue: "one", comment: nil) }

      /// en translation: Only allow group owner to invite new members
      ///
      /// Key: onlyOwnerInvite
      ///
      /// Locales: en, zh-Hant
      var onlyOwnerInvite: RswiftResources.StringResource { .init(key: "onlyOwnerInvite", tableName: "Localizable", source: source, developmentValue: "Only allow group owner to invite new members", comment: nil) }

      /// en translation: Open
      ///
      /// Key: open
      ///
      /// Locales: en, zh-Hant
      var `open`: RswiftResources.StringResource { .init(key: "open", tableName: "Localizable", source: source, developmentValue: "Open", comment: nil) }

      /// en translation: Public group information
      ///
      /// Key: openGroupData
      ///
      /// Locales: en, zh-Hant
      var openGroupData: RswiftResources.StringResource { .init(key: "openGroupData", tableName: "Localizable", source: source, developmentValue: "Public group information", comment: nil) }

      /// en translation: Successfully sent the request, waiting for the group leader's consent
      ///
      /// Key: openGroupJoinToast
      ///
      /// Locales: en, zh-Hant
      var openGroupJoinToast: RswiftResources.StringResource { .init(key: "openGroupJoinToast", tableName: "Localizable", source: source, developmentValue: "Successfully sent the request, waiting for the group leader's consent", comment: nil) }

      /// en translation: View on Discord
      ///
      /// Key: openOnDiscord
      ///
      /// Locales: en, zh-Hant
      var openOnDiscord: RswiftResources.StringResource { .init(key: "openOnDiscord", tableName: "Localizable", source: source, developmentValue: "View on Discord", comment: nil) }

      /// en translation: View on Instagram
      ///
      /// Key: openOnInstagram
      ///
      /// Locales: en, zh-Hant
      var openOnInstagram: RswiftResources.StringResource { .init(key: "openOnInstagram", tableName: "Localizable", source: source, developmentValue: "View on Instagram", comment: nil) }

      /// en translation: View in OpenSea
      ///
      /// Key: openOnOpenSea
      ///
      /// Locales: en, zh-Hant
      var openOnOpenSea: RswiftResources.StringResource { .init(key: "openOnOpenSea", tableName: "Localizable", source: source, developmentValue: "View in OpenSea", comment: nil) }

      /// en translation: View on Telegram
      ///
      /// Key: openOnTelegram
      ///
      /// Locales: en, zh-Hant
      var openOnTelegram: RswiftResources.StringResource { .init(key: "openOnTelegram", tableName: "Localizable", source: source, developmentValue: "View on Telegram", comment: nil) }

      /// en translation: View on Twitter
      ///
      /// Key: openOnTwitter
      ///
      /// Locales: en, zh-Hant
      var openOnTwitter: RswiftResources.StringResource { .init(key: "openOnTwitter", tableName: "Localizable", source: source, developmentValue: "View on Twitter", comment: nil) }

      /// en translation: Open on %@
      ///
      /// Key: openSeaNonFungibleTokens.url.open
      ///
      /// Locales: en, zh-Hant
      var openSeaNonFungibleTokensUrlOpen: RswiftResources.StringResource1<String> { .init(key: "openSeaNonFungibleTokens.url.open", tableName: "Localizable", source: source, developmentValue: "Open on %@", comment: nil) }

      /// en translation: You can open it next time in 「Contacts」- 「Discover Communities」
      ///
      /// Key: open_discover_communities
      ///
      /// Locales: en, zh-Hant
      var open_discover_communities: RswiftResources.StringResource { .init(key: "open_discover_communities", tableName: "Localizable", source: source, developmentValue: "You can open it next time in 「Contacts」- 「Discover Communities」", comment: nil) }

      /// en translation: Open
      ///
      /// Key: open_traditional
      ///
      /// Locales: en, zh-Hant
      var open_traditional: RswiftResources.StringResource { .init(key: "open_traditional", tableName: "Localizable", source: source, developmentValue: "Open", comment: nil) }

      /// en translation: Please open the photo album in settings
      ///
      /// Key: openalbum
      ///
      /// Locales: en, zh-Hant
      var openalbum: RswiftResources.StringResource { .init(key: "openalbum", tableName: "Localizable", source: source, developmentValue: "Please open the photo album in settings", comment: nil) }

      /// en translation: The camera access permission has not been enabled, please go to the system settings to enable it
      ///
      /// Key: opencameraauthority
      ///
      /// Locales: en, zh-Hant
      var opencameraauthority: RswiftResources.StringResource { .init(key: "opencameraauthority", tableName: "Localizable", source: source, developmentValue: "The camera access permission has not been enabled, please go to the system settings to enable it", comment: nil) }

      /// en translation: The permission to write to the album has not been enabled, which will affect the use of the save function after taking photos. Do you want to enable it?
      ///
      /// Key: opencameralimit
      ///
      /// Locales: en, zh-Hant
      var opencameralimit: RswiftResources.StringResource { .init(key: "opencameralimit", tableName: "Localizable", source: source, developmentValue: "The permission to write to the album has not been enabled, which will affect the use of the save function after taking photos. Do you want to enable it?", comment: nil) }

      /// en translation: Opening failed
      ///
      /// Key: openfailed
      ///
      /// Locales: en, zh-Hant
      var openfailed: RswiftResources.StringResource { .init(key: "openfailed", tableName: "Localizable", source: source, developmentValue: "Opening failed", comment: nil) }

      /// en translation: Successfully opened
      ///
      /// Key: opensuccess
      ///
      /// Locales: en, zh-Hant
      var opensuccess: RswiftResources.StringResource { .init(key: "opensuccess", tableName: "Localizable", source: source, developmentValue: "Successfully opened", comment: nil) }

      /// en translation: Optional
      ///
      /// Key: option
      ///
      /// Locales: en, zh-Hant
      var option: RswiftResources.StringResource { .init(key: "option", tableName: "Localizable", source: source, developmentValue: "Optional", comment: nil) }

      /// en translation: Already processed on other end
      ///
      /// Key: otherDevice
      ///
      /// Locales: en, zh-Hant
      var otherDevice: RswiftResources.StringResource { .init(key: "otherDevice", tableName: "Localizable", source: source, developmentValue: "Already processed on other end", comment: nil) }

      /// en translation: Non-members can not find this group
      ///
      /// Key: othersCannotFindGroup
      ///
      /// Locales: en, zh-Hant
      var othersCannotFindGroup: RswiftResources.StringResource { .init(key: "othersCannotFindGroup", tableName: "Localizable", source: source, developmentValue: "Non-members can not find this group", comment: nil) }

      /// en translation: Non-members can find this group
      ///
      /// Key: othersFindGroup
      ///
      /// Locales: en, zh-Hant
      var othersFindGroup: RswiftResources.StringResource { .init(key: "othersFindGroup", tableName: "Localizable", source: source, developmentValue: "Non-members can find this group", comment: nil) }

      /// en translation: You have been removed from the allowlist.
      ///
      /// Key: outwhitelist
      ///
      /// Locales: en, zh-Hant
      var outwhitelist: RswiftResources.StringResource { .init(key: "outwhitelist", tableName: "Localizable", source: source, developmentValue: "You have been removed from the allowlist.", comment: nil) }

      /// en translation: Creator
      ///
      /// Key: owner
      ///
      /// Locales: en, zh-Hant
      var owner: RswiftResources.StringResource { .init(key: "owner", tableName: "Localizable", source: source, developmentValue: "Creator", comment: nil) }

      /// en translation: parent
      ///
      /// Key: parent
      ///
      /// Locales: en, zh-Hant
      var parent: RswiftResources.StringResource { .init(key: "parent", tableName: "Localizable", source: source, developmentValue: "parent", comment: nil) }

      /// en translation: After the INID is associated, the wallet address and INID will be able to participate in the TOX ecosystem, invite friends, send red packet, interact on the chain and other rich functions
      ///
      /// Key: participate_invite_functions
      ///
      /// Locales: en, zh-Hant
      var participate_invite_functions: RswiftResources.StringResource { .init(key: "participate_invite_functions", tableName: "Localizable", source: source, developmentValue: "After the INID is associated, the wallet address and INID will be able to participate in the TOX ecosystem, invite friends, send red packet, interact on the chain and other rich functions", comment: nil) }

      /// en translation: Write this down, and keep it private and secure. You won't be able to restore your wallet if you lose this!
      ///
      /// Key: passphrase.remember.label.title
      ///
      /// Locales: en, zh-Hant
      var passphraseRememberLabelTitle: RswiftResources.StringResource { .init(key: "passphrase.remember.label.title", tableName: "Localizable", source: source, developmentValue: "Write this down, and keep it private and secure. You won't be able to restore your wallet if you lose this!", comment: nil) }

      /// en translation: Password
      ///
      /// Key: password
      ///
      /// Locales: en, zh-Hant
      var password: RswiftResources.StringResource { .init(key: "password", tableName: "Localizable", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: Password can not be blank
      ///
      /// Key: password_blank
      ///
      /// Locales: en, zh-Hant
      var password_blank: RswiftResources.StringResource { .init(key: "password_blank", tableName: "Localizable", source: source, developmentValue: "Password can not be blank", comment: nil) }

      /// en translation: This is the password you entered when you first created your cloud backup.
      ///
      /// Key: password_created_cloud_backup
      ///
      /// Locales: en, zh-Hant
      var password_created_cloud_backup: RswiftResources.StringResource { .init(key: "password_created_cloud_backup", tableName: "Localizable", source: source, developmentValue: "This is the password you entered when you first created your cloud backup.", comment: nil) }

      /// en translation: Password cannot be longer than 16 characters
      ///
      /// Key: password_longer_characters
      ///
      /// Locales: en, zh-Hant
      var password_longer_characters: RswiftResources.StringResource { .init(key: "password_longer_characters", tableName: "Localizable", source: source, developmentValue: "Password cannot be longer than 16 characters", comment: nil) }

      /// en translation: The unlock password is used to recover the cloud wallet, lost will not be able to unlock the cloud wallet
      ///
      /// Key: password_recover_cloud_wallet
      ///
      /// Locales: en, zh-Hant
      var password_recover_cloud_wallet: RswiftResources.StringResource { .init(key: "password_recover_cloud_wallet", tableName: "Localizable", source: source, developmentValue: "The unlock password is used to recover the cloud wallet, lost will not be able to unlock the cloud wallet", comment: nil) }

      /// en translation: Please pay the deposit first and then view the details
      ///
      /// Key: pay_deposit_view_details
      ///
      /// Locales: en, zh-Hant
      var pay_deposit_view_details: RswiftResources.StringResource { .init(key: "pay_deposit_view_details", tableName: "Localizable", source: source, developmentValue: "Please pay the deposit first and then view the details", comment: nil) }

      /// en translation: Payment chain
      ///
      /// Key: paychain
      ///
      /// Locales: en, zh-Hant
      var paychain: RswiftResources.StringResource { .init(key: "paychain", tableName: "Localizable", source: source, developmentValue: "Payment chain", comment: nil) }

      /// en translation: Payment failed
      ///
      /// Key: payfailed
      ///
      /// Locales: en, zh-Hant
      var payfailed: RswiftResources.StringResource { .init(key: "payfailed", tableName: "Localizable", source: source, developmentValue: "Payment failed", comment: nil) }

      /// en translation: Choose the group building level and pay
      ///
      /// Key: payforgroup
      ///
      /// Locales: en, zh-Hant
      var payforgroup: RswiftResources.StringResource { .init(key: "payforgroup", tableName: "Localizable", source: source, developmentValue: "Choose the group building level and pay", comment: nil) }

      /// en translation: Choose a level and pay
      ///
      /// Key: payforlevel
      ///
      /// Locales: en, zh-Hant
      var payforlevel: RswiftResources.StringResource { .init(key: "payforlevel", tableName: "Localizable", source: source, developmentValue: "Choose a level and pay", comment: nil) }

      /// en translation: Payment successful
      ///
      /// Key: paysuccess
      ///
      /// Locales: en, zh-Hant
      var paysuccess: RswiftResources.StringResource { .init(key: "paysuccess", tableName: "Localizable", source: source, developmentValue: "Payment successful", comment: nil) }

      /// en translation: Personal profile
      ///
      /// Key: personalInfo
      ///
      /// Locales: en, zh-Hant
      var personalInfo: RswiftResources.StringResource { .init(key: "personalInfo", tableName: "Localizable", source: source, developmentValue: "Personal profile", comment: nil) }

      /// en translation: Mobile Number
      ///
      /// Key: phoneNumber
      ///
      /// Locales: en, zh-Hant
      var phoneNumber: RswiftResources.StringResource { .init(key: "phoneNumber", tableName: "Localizable", source: source, developmentValue: "Mobile Number", comment: nil) }

      /// en translation: Browse
      ///
      /// Key: photos
      ///
      /// Locales: en, zh-Hant
      var photos: RswiftResources.StringResource { .init(key: "photos", tableName: "Localizable", source: source, developmentValue: "Browse", comment: nil) }

      /// en translation: In the next step, you will see the seed phrase (12 words) that can be used to restore your wallet. Please keep the following safety points in mind!
      ///
      /// Key: phrase_points_mind
      ///
      /// Locales: en, zh-Hant
      var phrase_points_mind: RswiftResources.StringResource { .init(key: "phrase_points_mind", tableName: "Localizable", source: source, developmentValue: "In the next step, you will see the seed phrase (12 words) that can be used to restore your wallet. Please keep the following safety points in mind!", comment: nil) }

      /// en translation: Image evidence (up to 4 uploaded)
      ///
      /// Key: pictorialevidence
      ///
      /// Locales: en, zh-Hant
      var pictorialevidence: RswiftResources.StringResource { .init(key: "pictorialevidence", tableName: "Localizable", source: source, developmentValue: "Image evidence (up to 4 uploaded)", comment: nil) }

      /// en translation: Please control the alignment of the puzzle block and the gap
      ///
      /// Key: piecestogap
      ///
      /// Locales: en, zh-Hant
      var piecestogap: RswiftResources.StringResource { .init(key: "piecestogap", tableName: "Localizable", source: source, developmentValue: "Please control the alignment of the puzzle block and the gap", comment: nil) }

      /// en translation: Automatically jump to %@
      ///
      /// Key: pioneer_auto_jump
      ///
      /// Locales: en, zh-Hant
      var pioneer_auto_jump: RswiftResources.StringResource1<String> { .init(key: "pioneer_auto_jump", tableName: "Localizable", source: source, developmentValue: "Automatically jump to %@", comment: nil) }

      /// en translation: Security deposit paid
      ///
      /// Key: pioneer_deposit_paid
      ///
      /// Locales: en, zh-Hant
      var pioneer_deposit_paid: RswiftResources.StringResource { .init(key: "pioneer_deposit_paid", tableName: "Localizable", source: source, developmentValue: "Security deposit paid", comment: nil) }

      /// en translation: Participation successful!
      ///
      /// Key: pioneer_join_suc
      ///
      /// Locales: en, zh-Hant
      var pioneer_join_suc: RswiftResources.StringResource { .init(key: "pioneer_join_suc", tableName: "Localizable", source: source, developmentValue: "Participation successful!", comment: nil) }

      /// en translation: Pioneer Program
      ///
      /// Key: pioneer_plan
      ///
      /// Locales: en, zh-Hant
      var pioneer_plan: RswiftResources.StringResource { .init(key: "pioneer_plan", tableName: "Localizable", source: source, developmentValue: "Pioneer Program", comment: nil) }

      /// en translation: Please select a wallet to log in
      ///
      /// Key: please_select_wallet_log_in
      ///
      /// Locales: en, zh-Hant
      var please_select_wallet_log_in: RswiftResources.StringResource { .init(key: "please_select_wallet_log_in", tableName: "Localizable", source: source, developmentValue: "Please select a wallet to log in", comment: nil) }

      /// en translation: Please bind the main wallet
      ///
      /// Key: pleasebindmainwallet
      ///
      /// Locales: en, zh-Hant
      var pleasebindmainwallet: RswiftResources.StringResource { .init(key: "pleasebindmainwallet", tableName: "Localizable", source: source, developmentValue: "Please bind the main wallet", comment: nil) }

      /// en translation: Please bind the wallet
      ///
      /// Key: pleasebindwallet
      ///
      /// Locales: en, zh-Hant
      var pleasebindwallet: RswiftResources.StringResource { .init(key: "pleasebindwallet", tableName: "Localizable", source: source, developmentValue: "Please bind the wallet", comment: nil) }

      /// en translation: Please use the main wallet
      ///
      /// Key: pleaseusermainwallet
      ///
      /// Locales: en, zh-Hant
      var pleaseusermainwallet: RswiftResources.StringResource { .init(key: "pleaseusermainwallet", tableName: "Localizable", source: source, developmentValue: "Please use the main wallet", comment: nil) }

      /// en translation: Star Award
      ///
      /// Key: pledgeLevelRewards
      ///
      /// Locales: en, zh-Hant
      var pledgeLevelRewards: RswiftResources.StringResource { .init(key: "pledgeLevelRewards", tableName: "Localizable", source: source, developmentValue: "Star Award", comment: nil) }

      /// en translation: Node balance: %@
      ///
      /// Key: pledgedbalance
      ///
      /// Locales: en, zh-Hant
      var pledgedbalance: RswiftResources.StringResource1<String> { .init(key: "pledgedbalance", tableName: "Localizable", source: source, developmentValue: "Node balance: %@", comment: nil) }

      /// en translation: Purchase the default priority to deduct the node balance, and if it is insufficient, the combined TOX balance will be deducted
      ///
      /// Key: pledgedescription
      ///
      /// Locales: en, zh-Hant
      var pledgedescription: RswiftResources.StringResource { .init(key: "pledgedescription", tableName: "Localizable", source: source, developmentValue: "Purchase the default priority to deduct the node balance, and if it is insufficient, the combined TOX balance will be deducted", comment: nil) }

      /// en translation: Pledge Mining Details
      ///
      /// Key: pledgeminingdetail
      ///
      /// Locales: en, zh-Hant
      var pledgeminingdetail: RswiftResources.StringResource { .init(key: "pledgeminingdetail", tableName: "Localizable", source: source, developmentValue: "Pledge Mining Details", comment: nil) }

      /// en translation: Node Earnings
      ///
      /// Key: pledgeproceeds
      ///
      /// Locales: en, zh-Hant
      var pledgeproceeds: RswiftResources.StringResource { .init(key: "pledgeproceeds", tableName: "Localizable", source: source, developmentValue: "Node Earnings", comment: nil) }

      /// en translation: Node Team Contribution
      ///
      /// Key: pledgeteamcontribution
      ///
      /// Locales: en, zh-Hant
      var pledgeteamcontribution: RswiftResources.StringResource { .init(key: "pledgeteamcontribution", tableName: "Localizable", source: source, developmentValue: "Node Team Contribution", comment: nil) }

      /// en translation: HH:mm
      ///
      /// Key: pmtime
      ///
      /// Locales: en, zh-Hant
      var pmtime: RswiftResources.StringResource { .init(key: "pmtime", tableName: "Localizable", source: source, developmentValue: "HH:mm", comment: nil) }

      /// en translation: Indicates the current number of presale purchases, when the maximum number of holdings is purchased, presale purchases can be purchased, the number of presale purchases cannot exceed the current maximum number of holdings; successful presale purchases will automatically take effect after the release of the current node is completed.
      ///
      /// Key: pre_sale_content
      ///
      /// Locales: en, zh-Hant
      var pre_sale_content: RswiftResources.StringResource { .init(key: "pre_sale_content", tableName: "Localizable", source: source, developmentValue: "Indicates the current number of presale purchases, when the maximum number of holdings is purchased, presale purchases can be purchased, the number of presale purchases cannot exceed the current maximum number of holdings; successful presale purchases will automatically take effect after the release of the current node is completed.", comment: nil) }

      /// en translation: Pre-sold
      ///
      /// Key: pre_saled
      ///
      /// Locales: en, zh-Hant
      var pre_saled: RswiftResources.StringResource { .init(key: "pre_saled", tableName: "Localizable", source: source, developmentValue: "Pre-sold", comment: nil) }

      /// en translation: Purchase pre-sale
      ///
      /// Key: presale.purchase
      ///
      /// Locales: en, zh-Hant
      var presalePurchase: RswiftResources.StringResource { .init(key: "presale.purchase", tableName: "Localizable", source: source, developmentValue: "Purchase pre-sale", comment: nil) }

      /// en translation: Successfully purchased pre-sale
      ///
      /// Key: presale.purchase.suc
      ///
      /// Locales: en, zh-Hant
      var presalePurchaseSuc: RswiftResources.StringResource { .init(key: "presale.purchase.suc", tableName: "Localizable", source: source, developmentValue: "Successfully purchased pre-sale", comment: nil) }

      /// en translation: Purchase pre-sale will automatically replenish when the holding amount is insufficient
      ///
      /// Key: presale.tips
      ///
      /// Locales: en, zh-Hant
      var presaleTips: RswiftResources.StringResource { .init(key: "presale.tips", tableName: "Localizable", source: source, developmentValue: "Purchase pre-sale will automatically replenish when the holding amount is insufficient", comment: nil) }

      /// en translation: Pre sold quantity
      ///
      /// Key: presaled.count
      ///
      /// Locales: en, zh-Hant
      var presaledCount: RswiftResources.StringResource { .init(key: "presaled.count", tableName: "Localizable", source: source, developmentValue: "Pre sold quantity", comment: nil) }

      /// en translation: Unit price
      ///
      /// Key: price
      ///
      /// Locales: en, zh-Hant
      var price: RswiftResources.StringResource { .init(key: "price", tableName: "Localizable", source: source, developmentValue: "Unit price", comment: nil) }

      /// en translation: Above
      ///
      /// Key: priceAlert.above
      ///
      /// Locales: en, zh-Hant
      var priceAlertAbove: RswiftResources.StringResource { .init(key: "priceAlert.above", tableName: "Localizable", source: source, developmentValue: "Above", comment: nil) }

      /// en translation: Below
      ///
      /// Key: priceAlert.below
      ///
      /// Locales: en, zh-Hant
      var priceAlertBelow: RswiftResources.StringResource { .init(key: "priceAlert.below", tableName: "Localizable", source: source, developmentValue: "Below", comment: nil) }

      /// en translation: Edit Alert
      ///
      /// Key: priceAlert.edit
      ///
      /// Locales: en, zh-Hant
      var priceAlertEdit: RswiftResources.StringResource { .init(key: "priceAlert.edit", tableName: "Localizable", source: source, developmentValue: "Edit Alert", comment: nil) }

      /// en translation: Alerts will appear here
      ///
      /// Key: priceAlert.emptyList
      ///
      /// Locales: en, zh-Hant
      var priceAlertEmptyList: RswiftResources.StringResource { .init(key: "priceAlert.emptyList", tableName: "Localizable", source: source, developmentValue: "Alerts will appear here", comment: nil) }

      /// en translation: Enter target price
      ///
      /// Key: priceAlert.enterTargetPrice
      ///
      /// Locales: en, zh-Hant
      var priceAlertEnterTargetPrice: RswiftResources.StringResource { .init(key: "priceAlert.enterTargetPrice", tableName: "Localizable", source: source, developmentValue: "Enter target price", comment: nil) }

      /// en translation: Alerts
      ///
      /// Key: priceAlert.navigationTitle
      ///
      /// Locales: en, zh-Hant
      var priceAlertNavigationTitle: RswiftResources.StringResource { .init(key: "priceAlert.navigationTitle", tableName: "Localizable", source: source, developmentValue: "Alerts", comment: nil) }

      /// en translation: Add New Price Alert
      ///
      /// Key: priceAlert.newAlert
      ///
      /// Locales: en, zh-Hant
      var priceAlertNewAlert: RswiftResources.StringResource { .init(key: "priceAlert.newAlert", tableName: "Localizable", source: source, developmentValue: "Add New Price Alert", comment: nil) }

      /// en translation: Set Alert
      ///
      /// Key: priceAlert.set
      ///
      /// Locales: en, zh-Hant
      var priceAlertSet: RswiftResources.StringResource { .init(key: "priceAlert.set", tableName: "Localizable", source: source, developmentValue: "Set Alert", comment: nil) }

      /// en translation: Set New Alert
      ///
      /// Key: priceAlert.setNewAlert
      ///
      /// Locales: en, zh-Hant
      var priceAlertSetNewAlert: RswiftResources.StringResource { .init(key: "priceAlert.setNewAlert", tableName: "Localizable", source: source, developmentValue: "Set New Alert", comment: nil) }

      /// en translation: Privacy Policy
      ///
      /// Key: privacyPrompt
      ///
      /// Locales: en, zh-Hant
      var privacyPrompt: RswiftResources.StringResource { .init(key: "privacyPrompt", tableName: "Localizable", source: source, developmentValue: "Privacy Policy", comment: nil) }

      /// en translation: Privacy
      ///
      /// Key: private
      ///
      /// Locales: en, zh-Hant
      var `private`: RswiftResources.StringResource { .init(key: "private", tableName: "Localizable", source: source, developmentValue: "Privacy", comment: nil) }

      /// en translation: Product introduction
      ///
      /// Key: product
      ///
      /// Locales: en, zh-Hant
      var product: RswiftResources.StringResource { .init(key: "product", tableName: "Localizable", source: source, developmentValue: "Product introduction", comment: nil) }

      /// en translation: Basic Group
      ///
      /// Key: project_group_basic
      ///
      /// Locales: en, zh-Hant
      var project_group_basic: RswiftResources.StringResource { .init(key: "project_group_basic", tableName: "Localizable", source: source, developmentValue: "Basic Group", comment: nil) }

      /// en translation: Complete Group
      ///
      /// Key: project_group_complete
      ///
      /// Locales: en, zh-Hant
      var project_group_complete: RswiftResources.StringResource { .init(key: "project_group_complete", tableName: "Localizable", source: source, developmentValue: "Complete Group", comment: nil) }

      /// en translation: Standard Group
      ///
      /// Key: project_group_standard
      ///
      /// Locales: en, zh-Hant
      var project_group_standard: RswiftResources.StringResource { .init(key: "project_group_standard", tableName: "Localizable", source: source, developmentValue: "Standard Group", comment: nil) }

      /// en translation: Tip
      ///
      /// Key: prompt
      ///
      /// Locales: en, zh-Hant
      var prompt: RswiftResources.StringResource { .init(key: "prompt", tableName: "Localizable", source: source, developmentValue: "Tip", comment: nil) }

      /// en translation: Encrypt the seed phrase to INTO Cloud to protect the wallet security
      ///
      /// Key: protect_wallet_security
      ///
      /// Locales: en, zh-Hant
      var protect_wallet_security: RswiftResources.StringResource { .init(key: "protect_wallet_security", tableName: "Localizable", source: source, developmentValue: "Encrypt the seed phrase to INTO Cloud to protect the wallet security", comment: nil) }

      /// en translation: The seed phrase only exists in my mobile phone, and the responsibility for protecting the safety of the seed phrase lies entirely with me!
      ///
      /// Key: protecting_entirely_me
      ///
      /// Locales: en, zh-Hant
      var protecting_entirely_me: RswiftResources.StringResource { .init(key: "protecting_entirely_me", tableName: "Localizable", source: source, developmentValue: "The seed phrase only exists in my mobile phone, and the responsibility for protecting the safety of the seed phrase lies entirely with me!", comment: nil) }

      /// en translation: Buy social nodes
      ///
      /// Key: purchase_socail_node
      ///
      /// Locales: en, zh-Hant
      var purchase_socail_node: RswiftResources.StringResource { .init(key: "purchase_socail_node", tableName: "Localizable", source: source, developmentValue: "Buy social nodes", comment: nil) }

      /// en translation: Purchase Price:
      ///
      /// Key: purchaseprice
      ///
      /// Locales: en, zh-Hant
      var purchaseprice: RswiftResources.StringResource { .init(key: "purchaseprice", tableName: "Localizable", source: source, developmentValue: "Purchase Price:", comment: nil) }

      /// en translation: Purchase price:
      ///
      /// Key: purchaseprice_ge
      ///
      /// Locales: en, zh-Hant
      var purchaseprice_ge: RswiftResources.StringResource { .init(key: "purchaseprice_ge", tableName: "Localizable", source: source, developmentValue: "Purchase price:", comment: nil) }

      /// en translation: The purchase of medals can be used for SBT certification or transferred to other users for use
      ///
      /// Key: purchasepricedescription
      ///
      /// Locales: en, zh-Hant
      var purchasepricedescription: RswiftResources.StringResource { .init(key: "purchasepricedescription", tableName: "Localizable", source: source, developmentValue: "The purchase of medals can be used for SBT certification or transferred to other users for use", comment: nil) }

      /// en translation: By default, the node balance will be deducted first when purchasing, and if it is insufficient, the combined TOX balance will be deducted
      ///
      /// Key: purchaseprioritydeductionpledged
      ///
      /// Locales: en, zh-Hant
      var purchaseprioritydeductionpledged: RswiftResources.StringResource { .init(key: "purchaseprioritydeductionpledged", tableName: "Localizable", source: source, developmentValue: "By default, the node balance will be deducted first when purchasing, and if it is insufficient, the combined TOX balance will be deducted", comment: nil) }

      /// en translation: Push content
      ///
      /// Key: pushInfo
      ///
      /// Locales: en, zh-Hant
      var pushInfo: RswiftResources.StringResource { .init(key: "pushInfo", tableName: "Localizable", source: source, developmentValue: "Push content", comment: nil) }

      /// en translation: Display nickname used for iOS APNs push
      ///
      /// Key: pushPrompt
      ///
      /// Locales: en, zh-Hant
      var pushPrompt: RswiftResources.StringResource { .init(key: "pushPrompt", tableName: "Localizable", source: source, developmentValue: "Display nickname used for iOS APNs push", comment: nil) }

      /// en translation: Enter current account password
      ///
      /// Key: pwd
      ///
      /// Locales: en, zh-Hant
      var pwd: RswiftResources.StringResource { .init(key: "pwd", tableName: "Localizable", source: source, developmentValue: "Enter current account password", comment: nil) }

      /// en translation: The two passwords do not match.
      ///
      /// Key: pwdWrong
      ///
      /// Locales: en, zh-Hant
      var pwdWrong: RswiftResources.StringResource { .init(key: "pwdWrong", tableName: "Localizable", source: source, developmentValue: "The two passwords do not match.", comment: nil) }

      /// en translation: The two passwords do not match. Please enter them again.
      ///
      /// Key: pwdWrongInput
      ///
      /// Locales: en, zh-Hant
      var pwdWrongInput: RswiftResources.StringResource { .init(key: "pwdWrongInput", tableName: "Localizable", source: source, developmentValue: "The two passwords do not match. Please enter them again.", comment: nil) }

      /// en translation: thousand
      ///
      /// Key: qian
      ///
      /// Locales: en, zh-Hant
      var qian: RswiftResources.StringResource { .init(key: "qian", tableName: "Localizable", source: source, developmentValue: "thousand", comment: nil) }

      /// en translation: Thousand
      ///
      /// Key: qian_traditional
      ///
      /// Locales: en, zh-Hant
      var qian_traditional: RswiftResources.StringResource { .init(key: "qian_traditional", tableName: "Localizable", source: source, developmentValue: "Thousand", comment: nil) }

      /// en translation: Add Custom Token
      ///
      /// Key: qrCode.addCustomToken.title
      ///
      /// Locales: en, zh-Hant
      var qrCodeAddCustomTokenTitle: RswiftResources.StringResource { .init(key: "qrCode.addCustomToken.title", tableName: "Localizable", source: source, developmentValue: "Add Custom Token", comment: nil) }

      /// en translation: My QR Code
      ///
      /// Key: qrCode.myqrCode.title
      ///
      /// Locales: en, zh-Hant
      var qrCodeMyqrCodeTitle: RswiftResources.StringResource { .init(key: "qrCode.myqrCode.title", tableName: "Localizable", source: source, developmentValue: "My QR Code", comment: nil) }

      /// en translation: Open in Browser
      ///
      /// Key: qrCode.openInBrowser.title
      ///
      /// Locales: en, zh-Hant
      var qrCodeOpenInBrowserTitle: RswiftResources.StringResource { .init(key: "qrCode.openInBrowser.title", tableName: "Localizable", source: source, developmentValue: "Open in Browser", comment: nil) }

      /// en translation: Open in Etherscan
      ///
      /// Key: qrCode.openInEtherscan.title
      ///
      /// Locales: en, zh-Hant
      var qrCodeOpenInEtherscanTitle: RswiftResources.StringResource { .init(key: "qrCode.openInEtherscan.title", tableName: "Localizable", source: source, developmentValue: "Open in Etherscan", comment: nil) }

      /// en translation: Send to this Address
      ///
      /// Key: qrCode.sendToAddress.title
      ///
      /// Locales: en, zh-Hant
      var qrCodeSendToAddressTitle: RswiftResources.StringResource { .init(key: "qrCode.sendToAddress.title", tableName: "Localizable", source: source, developmentValue: "Send to this Address", comment: nil) }

      /// en translation: Point your camera on QR code
      ///
      /// Key: qrCode.title
      ///
      /// Locales: en, zh-Hant
      var qrCodeTitle: RswiftResources.StringResource { .init(key: "qrCode.title", tableName: "Localizable", source: source, developmentValue: "Point your camera on QR code", comment: nil) }

      /// en translation: Watch Wallet
      ///
      /// Key: qrCode.watchWallet.title
      ///
      /// Locales: en, zh-Hant
      var qrCodeWatchWalletTitle: RswiftResources.StringResource { .init(key: "qrCode.watchWallet.title", tableName: "Localizable", source: source, developmentValue: "Watch Wallet", comment: nil) }

      /// en translation: Problem description
      ///
      /// Key: question
      ///
      /// Locales: en, zh-Hant
      var question: RswiftResources.StringResource { .init(key: "question", tableName: "Localizable", source: source, developmentValue: "Problem description", comment: nil) }

      /// en translation: Log out
      ///
      /// Key: quitaccount
      ///
      /// Locales: en, zh-Hant
      var quitaccount: RswiftResources.StringResource { .init(key: "quitaccount", tableName: "Localizable", source: source, developmentValue: "Log out", comment: nil) }

      /// en translation: After logging out, the chat history within 7 days will still be kept, but the wallet will not be kept. After the next login, you can restore the cloud backup wallet through the password. Please keep the cloud backup wallet password and the mnemonic words and private keys of other wallets
      ///
      /// Key: quitdescription
      ///
      /// Locales: en, zh-Hant
      var quitdescription: RswiftResources.StringResource { .init(key: "quitdescription", tableName: "Localizable", source: source, developmentValue: "After logging out, the chat history within 7 days will still be kept, but the wallet will not be kept. After the next login, you can restore the cloud backup wallet through the password. Please keep the cloud backup wallet password and the mnemonic words and private keys of other wallets", comment: nil) }

      /// en translation: After logging out, the chat history within 7 days will still be kept
      ///
      /// Key: quitdescriptionAppstore
      ///
      /// Locales: en, zh-Hant
      var quitdescriptionAppstore: RswiftResources.StringResource { .init(key: "quitdescriptionAppstore", tableName: "Localizable", source: source, developmentValue: "After logging out, the chat history within 7 days will still be kept", comment: nil) }

      /// en translation: Sign out
      ///
      /// Key: quitlogin
      ///
      /// Locales: en, zh-Hant
      var quitlogin: RswiftResources.StringResource { .init(key: "quitlogin", tableName: "Localizable", source: source, developmentValue: "Sign out", comment: nil) }

      /// en translation: Select a problem type
      ///
      /// Key: qustionType
      ///
      /// Locales: en, zh-Hant
      var qustionType: RswiftResources.StringResource { .init(key: "qustionType", tableName: "Localizable", source: source, developmentValue: "Select a problem type", comment: nil) }

      /// en translation: Failed to read file!
      ///
      /// Key: readFileFail
      ///
      /// Locales: en, zh-Hant
      var readFileFail: RswiftResources.StringResource { .init(key: "readFileFail", tableName: "Localizable", source: source, developmentValue: "Failed to read file!", comment: nil) }

      /// en translation: Read receipt
      ///
      /// Key: readSync
      ///
      /// Locales: en, zh-Hant
      var readSync: RswiftResources.StringResource { .init(key: "readSync", tableName: "Localizable", source: source, developmentValue: "Read receipt", comment: nil) }

      /// en translation: Read receipt details
      ///
      /// Key: readSyncInfo
      ///
      /// Locales: en, zh-Hant
      var readSyncInfo: RswiftResources.StringResource { .init(key: "readSyncInfo", tableName: "Localizable", source: source, developmentValue: "Read receipt details", comment: nil) }

      /// en translation: Read
      ///
      /// Key: readed
      ///
      /// Locales: en, zh-Hant
      var readed: RswiftResources.StringResource { .init(key: "readed", tableName: "Localizable", source: source, developmentValue: "Read", comment: nil) }

      /// en translation: Read by:
      ///
      /// Key: readers
      ///
      /// Locales: en, zh-Hant
      var readers: RswiftResources.StringResource { .init(key: "readers", tableName: "Localizable", source: source, developmentValue: "Read by:", comment: nil) }

      /// en translation: Read list：%d
      ///
      /// Key: readersing
      ///
      /// Locales: en, zh-Hant
      var readersing: RswiftResources.StringResource1<Int> { .init(key: "readersing", tableName: "Localizable", source: source, developmentValue: "Read list：%d", comment: nil) }

      /// en translation: Verified
      ///
      /// Key: realnameauthentication
      ///
      /// Locales: en, zh-Hant
      var realnameauthentication: RswiftResources.StringResource { .init(key: "realnameauthentication", tableName: "Localizable", source: source, developmentValue: "Verified", comment: nil) }

      /// en translation: Reauthorize
      ///
      /// Key: reauthorization
      ///
      /// Locales: en, zh-Hant
      var reauthorization: RswiftResources.StringResource { .init(key: "reauthorization", tableName: "Localizable", source: source, developmentValue: "Reauthorize", comment: nil) }

      /// en translation: recalled a message
      ///
      /// Key: recalledMessage
      ///
      /// Locales: en, zh-Hant
      var recalledMessage: RswiftResources.StringResource { .init(key: "recalledMessage", tableName: "Localizable", source: source, developmentValue: "recalled a message", comment: nil) }

      /// en translation: Claim dividends
      ///
      /// Key: receiveDevToken
      ///
      /// Locales: en, zh-Hant
      var receiveDevToken: RswiftResources.StringResource { .init(key: "receiveDevToken", tableName: "Localizable", source: source, developmentValue: "Claim dividends", comment: nil) }

      /// en translation: Receive %@ for free
      ///
      /// Key: receiveFaucetCoin
      ///
      /// Locales: en, zh-Hant
      var receiveFaucetCoin: RswiftResources.StringResource1<String> { .init(key: "receiveFaucetCoin", tableName: "Localizable", source: source, developmentValue: "Receive %@ for free", comment: nil) }

      /// en translation: Failed to receive
      ///
      /// Key: receiveFaucetFailed
      ///
      /// Locales: en, zh-Hant
      var receiveFaucetFailed: RswiftResources.StringResource { .init(key: "receiveFaucetFailed", tableName: "Localizable", source: source, developmentValue: "Failed to receive", comment: nil) }

      /// en translation: By time received
      ///
      /// Key: receiveOrder
      ///
      /// Locales: en, zh-Hant
      var receiveOrder: RswiftResources.StringResource { .init(key: "receiveOrder", tableName: "Localizable", source: source, developmentValue: "By time received", comment: nil) }

      /// en translation: Received successfully
      ///
      /// Key: receiveSuccess
      ///
      /// Locales: en, zh-Hant
      var receiveSuccess: RswiftResources.StringResource { .init(key: "receiveSuccess", tableName: "Localizable", source: source, developmentValue: "Received successfully", comment: nil) }

      /// en translation: Received
      ///
      /// Key: received
      ///
      /// Locales: en, zh-Hant
      var received: RswiftResources.StringResource { .init(key: "received", tableName: "Localizable", source: source, developmentValue: "Received", comment: nil) }

      /// en translation: Dividend income received: %@ TOX
      ///
      /// Key: received_income
      ///
      /// Locales: en, zh-Hant
      var received_income: RswiftResources.StringResource1<String> { .init(key: "received_income", tableName: "Localizable", source: source, developmentValue: "Dividend income received: %@ TOX", comment: nil) }

      /// en translation: Recent Transactions
      ///
      /// Key: recent.transactions
      ///
      /// Locales: en, zh-Hant
      var recentTransactions: RswiftResources.StringResource { .init(key: "recent.transactions", tableName: "Localizable", source: source, developmentValue: "Recent Transactions", comment: nil) }

      /// en translation: Please enter the recharge amount
      ///
      /// Key: rechargeintoquantity
      ///
      /// Locales: en, zh-Hant
      var rechargeintoquantity: RswiftResources.StringResource { .init(key: "rechargeintoquantity", tableName: "Localizable", source: source, developmentValue: "Please enter the recharge amount", comment: nil) }

      /// en translation: Recharge to TOX balance
      ///
      /// Key: rechargeintotox
      ///
      /// Locales: en, zh-Hant
      var rechargeintotox: RswiftResources.StringResource { .init(key: "rechargeintotox", tableName: "Localizable", source: source, developmentValue: "Recharge to TOX balance", comment: nil) }

      /// en translation: Recharged successfully
      ///
      /// Key: rechargesuccess
      ///
      /// Locales: en, zh-Hant
      var rechargesuccess: RswiftResources.StringResource { .init(key: "rechargesuccess", tableName: "Localizable", source: source, developmentValue: "Recharged successfully", comment: nil) }

      /// en translation: Deposit
      ///
      /// Key: rechargetoaccount
      ///
      /// Locales: en, zh-Hant
      var rechargetoaccount: RswiftResources.StringResource { .init(key: "rechargetoaccount", tableName: "Localizable", source: source, developmentValue: "Deposit", comment: nil) }

      /// en translation: Recommended community
      ///
      /// Key: recommended_community
      ///
      /// Locales: en, zh-Hant
      var recommended_community: RswiftResources.StringResource { .init(key: "recommended_community", tableName: "Localizable", source: source, developmentValue: "Recommended community", comment: nil) }

      /// en translation: Recover from the cloud
      ///
      /// Key: recover_from_cloud
      ///
      /// Locales: en, zh-Hant
      var recover_from_cloud: RswiftResources.StringResource { .init(key: "recover_from_cloud", tableName: "Localizable", source: source, developmentValue: "Recover from the cloud", comment: nil) }

      /// en translation: Recovery Phrase
      ///
      /// Key: recoveryPhrase.navigation.title
      ///
      /// Locales: en, zh-Hant
      var recoveryPhraseNavigationTitle: RswiftResources.StringResource { .init(key: "recoveryPhrase.navigation.title", tableName: "Localizable", source: source, developmentValue: "Recovery Phrase", comment: nil) }

      /// en translation: Receive and prompt group messages
      ///
      /// Key: recvGroupMsg
      ///
      /// Locales: en, zh-Hant
      var recvGroupMsg: RswiftResources.StringResource { .init(key: "recvGroupMsg", tableName: "Localizable", source: source, developmentValue: "Receive and prompt group messages", comment: nil) }

      /// en translation: Receive messages and show message notifications
      ///
      /// Key: recvMsgPrompt
      ///
      /// Locales: en, zh-Hant
      var recvMsgPrompt: RswiftResources.StringResource { .init(key: "recvMsgPrompt", tableName: "Localizable", source: source, developmentValue: "Receive messages and show message notifications", comment: nil) }

      /// en translation: Enable notifications for new messages
      ///
      /// Key: recvNewMsgNotice
      ///
      /// Locales: en, zh-Hant
      var recvNewMsgNotice: RswiftResources.StringResource { .init(key: "recvNewMsgNotice", tableName: "Localizable", source: source, developmentValue: "Enable notifications for new messages", comment: nil) }

      /// en translation: Receive but won't prompt group messages
      ///
      /// Key: recvWithoutNoticeMsg
      ///
      /// Locales: en, zh-Hant
      var recvWithoutNoticeMsg: RswiftResources.StringResource { .init(key: "recvWithoutNoticeMsg", tableName: "Localizable", source: source, developmentValue: "Receive but won't prompt group messages", comment: nil) }

      /// en translation: Red envelope details
      ///
      /// Key: red.envelope.details
      ///
      /// Locales: en, zh-Hant
      var redEnvelopeDetails: RswiftResources.StringResource { .init(key: "red.envelope.details", tableName: "Localizable", source: source, developmentValue: "Red envelope details", comment: nil) }

      /// en translation: Please switch to the %@ chain to view the red envelope
      ///
      /// Key: redEnvelopeChainMessage
      ///
      /// Locales: en, zh-Hant
      var redEnvelopeChainMessage: RswiftResources.StringResource1<String> { .init(key: "redEnvelopeChainMessage", tableName: "Localizable", source: source, developmentValue: "Please switch to the %@ chain to view the red envelope", comment: nil) }

      /// en translation: Please switch to the %@ chain to receive a red envelope
      ///
      /// Key: redEnvelopeReceiveChainMessage
      ///
      /// Locales: en, zh-Hant
      var redEnvelopeReceiveChainMessage: RswiftResources.StringResource1<String> { .init(key: "redEnvelopeReceiveChainMessage", tableName: "Localizable", source: source, developmentValue: "Please switch to the %@ chain to receive a red envelope", comment: nil) }

      /// en translation: Number of red envelopes
      ///
      /// Key: redPacketCount
      ///
      /// Locales: en, zh-Hant
      var redPacketCount: RswiftResources.StringResource { .init(key: "redPacketCount", tableName: "Localizable", source: source, developmentValue: "Number of red envelopes", comment: nil) }

      /// en translation: Best luck
      ///
      /// Key: red_packet_luckiest
      ///
      /// Locales: en, zh-Hant
      var red_packet_luckiest: RswiftResources.StringResource { .init(key: "red_packet_luckiest", tableName: "Localizable", source: source, developmentValue: "Best luck", comment: nil) }

      /// en translation: Received %1$s/%2$s of %3$s %4$s
      ///
      /// Key: red_packet_receive_desc_formate
      ///
      /// Locales: en, zh-Hant
      var red_packet_receive_desc_formate: RswiftResources.StringResource4<UnsafePointer<CChar>, UnsafePointer<CChar>, UnsafePointer<CChar>, UnsafePointer<CChar>> { .init(key: "red_packet_receive_desc_formate", tableName: "Localizable", source: source, developmentValue: "Received %1$s/%2$s of %3$s %4$s", comment: nil) }

      /// en translation: Has been collected completely
      ///
      /// Key: red_packet_received
      ///
      /// Locales: en, zh-Hant
      var red_packet_received: RswiftResources.StringResource { .init(key: "red_packet_received", tableName: "Localizable", source: source, developmentValue: "Has been collected completely", comment: nil) }

      /// en translation: %@ received %@
      ///
      /// Key: red_received
      ///
      /// Locales: en, zh-Hant
      var red_received: RswiftResources.StringResource2<String, String> { .init(key: "red_received", tableName: "Localizable", source: source, developmentValue: "%@ received %@", comment: nil) }

      /// en translation: you received the %@
      ///
      /// Key: red_received_msg
      ///
      /// Locales: en, zh-Hant
      var red_received_msg: RswiftResources.StringResource1<String> { .init(key: "red_received_msg", tableName: "Localizable", source: source, developmentValue: "you received the %@", comment: nil) }

      /// en translation: Number of red envelopes
      ///
      /// Key: redpackagecount
      ///
      /// Locales: en, zh-Hant
      var redpackagecount: RswiftResources.StringResource { .init(key: "redpackagecount", tableName: "Localizable", source: source, developmentValue: "Number of red envelopes", comment: nil) }

      /// en translation: Red envelope
      ///
      /// Key: redpacket
      ///
      /// Locales: en, zh-Hant
      var redpacket: RswiftResources.StringResource { .init(key: "redpacket", tableName: "Localizable", source: source, developmentValue: "Red envelope", comment: nil) }

      /// en translation: Red envelope amount cannot be empty
      ///
      /// Key: redpacketcannotbeempty
      ///
      /// Locales: en, zh-Hant
      var redpacketcannotbeempty: RswiftResources.StringResource { .init(key: "redpacketcannotbeempty", tableName: "Localizable", source: source, developmentValue: "Red envelope amount cannot be empty", comment: nil) }

      /// en translation: The red envelope has been in place for over 24 hours
      ///
      /// Key: redpacketovertime
      ///
      /// Locales: en, zh-Hant
      var redpacketovertime: RswiftResources.StringResource { .init(key: "redpacketovertime", tableName: "Localizable", source: source, developmentValue: "The red envelope has been in place for over 24 hours", comment: nil) }

      /// en translation: Red envelope sent by xx
      ///
      /// Key: redpacketsent
      ///
      /// Locales: en, zh-Hant
      var redpacketsent: RswiftResources.StringResource { .init(key: "redpacketsent", tableName: "Localizable", source: source, developmentValue: "Red envelope sent by xx", comment: nil) }

      /// en translation: %@ Red envelopes sent out
      ///
      /// Key: redpacketsentby
      ///
      /// Locales: en, zh-Hant
      var redpacketsentby: RswiftResources.StringResource1<String> { .init(key: "redpacketsentby", tableName: "Localizable", source: source, developmentValue: "%@ Red envelopes sent out", comment: nil) }

      /// en translation: Reduce to regular binding
      ///
      /// Key: reducedtonormalbinding
      ///
      /// Locales: en, zh-Hant
      var reducedtonormalbinding: RswiftResources.StringResource { .init(key: "reducedtonormalbinding", tableName: "Localizable", source: source, developmentValue: "Reduce to regular binding", comment: nil) }

      /// en translation: Restore
      ///
      /// Key: reduction
      ///
      /// Locales: en, zh-Hant
      var reduction: RswiftResources.StringResource { .init(key: "reduction", tableName: "Localizable", source: source, developmentValue: "Restore", comment: nil) }

      /// en translation: Refundable deposit ratio
      ///
      /// Key: refundable_deposit_ratio
      ///
      /// Locales: en, zh-Hant
      var refundable_deposit_ratio: RswiftResources.StringResource { .init(key: "refundable_deposit_ratio", tableName: "Localizable", source: source, developmentValue: "Refundable deposit ratio", comment: nil) }

      /// en translation: Decline
      ///
      /// Key: refuse
      ///
      /// Locales: en, zh-Hant
      var refuse: RswiftResources.StringResource { .init(key: "refuse", tableName: "Localizable", source: source, developmentValue: "Decline", comment: nil) }

      /// en translation: Call rejected
      ///
      /// Key: refuseCall
      ///
      /// Locales: en, zh-Hant
      var refuseCall: RswiftResources.StringResource { .init(key: "refuseCall", tableName: "Localizable", source: source, developmentValue: "Call rejected", comment: nil) }

      /// en translation: '%@' has declined your friend request.
      ///
      /// Key: refuseContactPrompt
      ///
      /// Locales: en, zh-Hant
      var refuseContactPrompt: RswiftResources.StringResource1<String> { .init(key: "refuseContactPrompt", tableName: "Localizable", source: source, developmentValue: "'%@' has declined your friend request.", comment: nil) }

      /// en translation: %@ declined your invitation to join the group 「%@」
      ///
      /// Key: refuseJoinPrompt
      ///
      /// Locales: en, zh-Hant
      var refuseJoinPrompt: RswiftResources.StringResource2<String, String> { .init(key: "refuseJoinPrompt", tableName: "Localizable", source: source, developmentValue: "%@ declined your invitation to join the group 「%@」", comment: nil) }

      /// en translation: You've rejected %@’s friend request.
      ///
      /// Key: refusePrompt
      ///
      /// Locales: en, zh-Hant
      var refusePrompt: RswiftResources.StringResource1<String> { .init(key: "refusePrompt", tableName: "Localizable", source: source, developmentValue: "You've rejected %@’s friend request.", comment: nil) }

      /// en translation: Rejected
      ///
      /// Key: refused
      ///
      /// Locales: en, zh-Hant
      var refused: RswiftResources.StringResource { .init(key: "refused", tableName: "Localizable", source: source, developmentValue: "Rejected", comment: nil) }

      /// en translation: Register
      ///
      /// Key: regist
      ///
      /// Locales: en, zh-Hant
      var regist: RswiftResources.StringResource { .init(key: "regist", tableName: "Localizable", source: source, developmentValue: "Register", comment: nil) }

      /// en translation: Failed to register device token
      ///
      /// Key: registefail
      ///
      /// Locales: en, zh-Hant
      var registefail: RswiftResources.StringResource { .init(key: "registefail", tableName: "Localizable", source: source, developmentValue: "Failed to register device token", comment: nil) }

      /// en translation: Account registration
      ///
      /// Key: register
      ///
      /// Locales: en, zh-Hant
      var register: RswiftResources.StringResource { .init(key: "register", tableName: "Localizable", source: source, developmentValue: "Account registration", comment: nil) }

      /// en translation: Message Code
      ///
      /// Key: register.getMessageCode
      ///
      /// Locales: en, zh-Hant
      var registerGetMessageCode: RswiftResources.StringResource { .init(key: "register.getMessageCode", tableName: "Localizable", source: source, developmentValue: "Message Code", comment: nil) }

      /// en translation: Image Code
      ///
      /// Key: register.imageCode
      ///
      /// Locales: en, zh-Hant
      var registerImageCode: RswiftResources.StringResource { .init(key: "register.imageCode", tableName: "Localizable", source: source, developmentValue: "Image Code", comment: nil) }

      /// en translation: Please input image code first
      ///
      /// Key: register.inputImageCode
      ///
      /// Locales: en, zh-Hant
      var registerInputImageCode: RswiftResources.StringResource { .init(key: "register.inputImageCode", tableName: "Localizable", source: source, developmentValue: "Please input image code first", comment: nil) }

      /// en translation: Please input phone number first
      ///
      /// Key: register.inputPhoneNumber
      ///
      /// Locales: en, zh-Hant
      var registerInputPhoneNumber: RswiftResources.StringResource { .init(key: "register.inputPhoneNumber", tableName: "Localizable", source: source, developmentValue: "Please input phone number first", comment: nil) }

      /// en translation: Please input sms message code first
      ///
      /// Key: register.inputSMSCode
      ///
      /// Locales: en, zh-Hant
      var registerInputSMSCode: RswiftResources.StringResource { .init(key: "register.inputSMSCode", tableName: "Localizable", source: source, developmentValue: "Please input sms message code first", comment: nil) }

      /// en translation: Verification Code
      ///
      /// Key: register.messageCode
      ///
      /// Locales: en, zh-Hant
      var registerMessageCode: RswiftResources.StringResource { .init(key: "register.messageCode", tableName: "Localizable", source: source, developmentValue: "Verification Code", comment: nil) }

      /// en translation: Please update image code first
      ///
      /// Key: register.updateImageCode
      ///
      /// Locales: en, zh-Hant
      var registerUpdateImageCode: RswiftResources.StringResource { .init(key: "register.updateImageCode", tableName: "Localizable", source: source, developmentValue: "Please update image code first", comment: nil) }

      /// en translation: Registration failed, please try again.
      ///
      /// Key: registerFail
      ///
      /// Locales: en, zh-Hant
      var registerFail: RswiftResources.StringResource { .init(key: "registerFail", tableName: "Localizable", source: source, developmentValue: "Registration failed, please try again.", comment: nil) }

      /// en translation: Registration complete, please login.
      ///
      /// Key: registerSuccess
      ///
      /// Locales: en, zh-Hant
      var registerSuccess: RswiftResources.StringResource { .init(key: "registerSuccess", tableName: "Localizable", source: source, developmentValue: "Registration complete, please login.", comment: nil) }

      /// en translation: Add or Register new account
      ///
      /// Key: register_new_account
      ///
      /// Locales: en, zh-Hant
      var register_new_account: RswiftResources.StringResource { .init(key: "register_new_account", tableName: "Localizable", source: source, developmentValue: "Add or Register new account", comment: nil) }

      /// en translation: You have rejected the request to join the group for %@
      ///
      /// Key: rejectedjoingroup
      ///
      /// Locales: en, zh-Hant
      var rejectedjoingroup: RswiftResources.StringResource1<String> { .init(key: "rejectedjoingroup", tableName: "Localizable", source: source, developmentValue: "You have rejected the request to join the group for %@", comment: nil) }

      /// en translation: Broadcast robot
      ///
      /// Key: relayRobot.title
      ///
      /// Locales: en, zh-Hant
      var relayRobotTitle: RswiftResources.StringResource { .init(key: "relayRobot.title", tableName: "Localizable", source: source, developmentValue: "Broadcast robot", comment: nil) }

      /// en translation: Release Cycle
      ///
      /// Key: release_cycle
      ///
      /// Locales: en, zh-Hant
      var release_cycle: RswiftResources.StringResource { .init(key: "release_cycle", tableName: "Localizable", source: source, developmentValue: "Release Cycle", comment: nil) }

      /// en translation: Release Cancel
      ///
      /// Key: releasecancel
      ///
      /// Locales: en, zh-Hant
      var releasecancel: RswiftResources.StringResource { .init(key: "releasecancel", tableName: "Localizable", source: source, developmentValue: "Release Cancel", comment: nil) }

      /// en translation: Release Redraw
      ///
      /// Key: releaserefresh
      ///
      /// Locales: en, zh-Hant
      var releaserefresh: RswiftResources.StringResource { .init(key: "releaserefresh", tableName: "Localizable", source: source, developmentValue: "Release Redraw", comment: nil) }

      /// en translation: Release Send
      ///
      /// Key: releasesend
      ///
      /// Locales: en, zh-Hant
      var releasesend: RswiftResources.StringResource { .init(key: "releasesend", tableName: "Localizable", source: source, developmentValue: "Release Send", comment: nil) }

      /// en translation: Balance details
      ///
      /// Key: remainingdetail
      ///
      /// Locales: en, zh-Hant
      var remainingdetail: RswiftResources.StringResource { .init(key: "remainingdetail", tableName: "Localizable", source: source, developmentValue: "Balance details", comment: nil) }

      /// en translation: Remark
      ///
      /// Key: remark.title
      ///
      /// Locales: en, zh-Hant
      var remarkTitle: RswiftResources.StringResource { .init(key: "remark.title", tableName: "Localizable", source: source, developmentValue: "Remark", comment: nil) }

      /// en translation: Annotation
      ///
      /// Key: remonend
      ///
      /// Locales: en, zh-Hant
      var remonend: RswiftResources.StringResource { .init(key: "remonend", tableName: "Localizable", source: source, developmentValue: "Annotation", comment: nil) }

      /// en translation: The other party is busy
      ///
      /// Key: remoteBusy
      ///
      /// Locales: en, zh-Hant
      var remoteBusy: RswiftResources.StringResource { .init(key: "remoteBusy", tableName: "Localizable", source: source, developmentValue: "The other party is busy", comment: nil) }

      /// en translation: The other party canceled.
      ///
      /// Key: remoteCancl
      ///
      /// Locales: en, zh-Hant
      var remoteCancl: RswiftResources.StringResource { .init(key: "remoteCancl", tableName: "Localizable", source: source, developmentValue: "The other party canceled.", comment: nil) }

      /// en translation: The other party is typing.
      ///
      /// Key: remoteInputing
      ///
      /// Locales: en, zh-Hant
      var remoteInputing: RswiftResources.StringResource { .init(key: "remoteInputing", tableName: "Localizable", source: source, developmentValue: "The other party is typing.", comment: nil) }

      /// en translation: The other party did not answer
      ///
      /// Key: remoteNoResponse
      ///
      /// Locales: en, zh-Hant
      var remoteNoResponse: RswiftResources.StringResource { .init(key: "remoteNoResponse", tableName: "Localizable", source: source, developmentValue: "The other party did not answer", comment: nil) }

      /// en translation: The other party withdrew a message
      ///
      /// Key: remoteRecall
      ///
      /// Locales: en, zh-Hant
      var remoteRecall: RswiftResources.StringResource { .init(key: "remoteRecall", tableName: "Localizable", source: source, developmentValue: "The other party withdrew a message", comment: nil) }

      /// en translation: The other party rejected the call.
      ///
      /// Key: remoteRefuse
      ///
      /// Locales: en, zh-Hant
      var remoteRefuse: RswiftResources.StringResource { .init(key: "remoteRefuse", tableName: "Localizable", source: source, developmentValue: "The other party rejected the call.", comment: nil) }

      /// en translation: Remove
      ///
      /// Key: remove
      ///
      /// Locales: en, zh-Hant
      var remove: RswiftResources.StringResource { .init(key: "remove", tableName: "Localizable", source: source, developmentValue: "Remove", comment: nil) }

      /// en translation: Delete and leave
      ///
      /// Key: remove&exit
      ///
      /// Locales: en, zh-Hant
      var removeExit: RswiftResources.StringResource { .init(key: "remove&exit", tableName: "Localizable", source: source, developmentValue: "Delete and leave", comment: nil) }

      /// en translation: Failed to delete administrator
      ///
      /// Key: removeAdminFail
      ///
      /// Locales: en, zh-Hant
      var removeAdminFail: RswiftResources.StringResource { .init(key: "removeAdminFail", tableName: "Localizable", source: source, developmentValue: "Failed to delete administrator", comment: nil) }

      /// en translation: Administrator deleted
      ///
      /// Key: removeAdminSuccess
      ///
      /// Locales: en, zh-Hant
      var removeAdminSuccess: RswiftResources.StringResource { .init(key: "removeAdminSuccess", tableName: "Localizable", source: source, developmentValue: "Administrator deleted", comment: nil) }

      /// en translation: Delete adminstrator...
      ///
      /// Key: removeAdmining
      ///
      /// Locales: en, zh-Hant
      var removeAdmining: RswiftResources.StringResource { .init(key: "removeAdmining", tableName: "Localizable", source: source, developmentValue: "Delete adminstrator...", comment: nil) }

      /// en translation: Failed to remove from blocklist
      ///
      /// Key: removeBLFail
      ///
      /// Locales: en, zh-Hant
      var removeBLFail: RswiftResources.StringResource { .init(key: "removeBLFail", tableName: "Localizable", source: source, developmentValue: "Failed to remove from blocklist", comment: nil) }

      /// en translation: Removed from blocklist
      ///
      /// Key: removeBLSuccess
      ///
      /// Locales: en, zh-Hant
      var removeBLSuccess: RswiftResources.StringResource { .init(key: "removeBLSuccess", tableName: "Localizable", source: source, developmentValue: "Removed from blocklist", comment: nil) }

      /// en translation: Remove from group blocklist...
      ///
      /// Key: removeBLing
      ///
      /// Locales: en, zh-Hant
      var removeBLing: RswiftResources.StringResource { .init(key: "removeBLing", tableName: "Localizable", source: source, developmentValue: "Remove from group blocklist...", comment: nil) }

      /// en translation: Remove
      ///
      /// Key: removeButton.title
      ///
      /// Locales: en, zh-Hant
      var removeButtonTitle: RswiftResources.StringResource { .init(key: "removeButton.title", tableName: "Localizable", source: source, developmentValue: "Remove", comment: nil) }

      /// en translation: Failed to delete friend
      ///
      /// Key: removeContactFail
      ///
      /// Locales: en, zh-Hant
      var removeContactFail: RswiftResources.StringResource { .init(key: "removeContactFail", tableName: "Localizable", source: source, developmentValue: "Failed to delete friend", comment: nil) }

      /// en translation: Remove group administrator %@
      ///
      /// Key: removeGroupAdmins
      ///
      /// Locales: en, zh-Hant
      var removeGroupAdmins: RswiftResources.StringResource1<String> { .init(key: "removeGroupAdmins", tableName: "Localizable", source: source, developmentValue: "Remove group administrator %@", comment: nil) }

      /// en translation: Failed to delete group members
      ///
      /// Key: removeGroupContactFail
      ///
      /// Locales: en, zh-Hant
      var removeGroupContactFail: RswiftResources.StringResource { .init(key: "removeGroupContactFail", tableName: "Localizable", source: source, developmentValue: "Failed to delete group members", comment: nil) }

      /// en translation: Group members deleted
      ///
      /// Key: removeGroupContactSucess
      ///
      /// Locales: en, zh-Hant
      var removeGroupContactSucess: RswiftResources.StringResource { .init(key: "removeGroupContactSucess", tableName: "Localizable", source: source, developmentValue: "Group members deleted", comment: nil) }

      /// en translation: Remove group member %@
      ///
      /// Key: removeGroupMember
      ///
      /// Locales: en, zh-Hant
      var removeGroupMember: RswiftResources.StringResource1<String> { .init(key: "removeGroupMember", tableName: "Localizable", source: source, developmentValue: "Remove group member %@", comment: nil) }

      /// en translation: Are you sure you want to clear the group chat history?
      ///
      /// Key: removeGroupMsgs
      ///
      /// Locales: en, zh-Hant
      var removeGroupMsgs: RswiftResources.StringResource { .init(key: "removeGroupMsgs", tableName: "Localizable", source: source, developmentValue: "Are you sure you want to clear the group chat history?", comment: nil) }

      /// en translation: Failed to delete member
      ///
      /// Key: removeMemberFail
      ///
      /// Locales: en, zh-Hant
      var removeMemberFail: RswiftResources.StringResource { .init(key: "removeMemberFail", tableName: "Localizable", source: source, developmentValue: "Failed to delete member", comment: nil) }

      /// en translation: Member deleted
      ///
      /// Key: removeMemberSuccess
      ///
      /// Locales: en, zh-Hant
      var removeMemberSuccess: RswiftResources.StringResource { .init(key: "removeMemberSuccess", tableName: "Localizable", source: source, developmentValue: "Member deleted", comment: nil) }

      /// en translation: Delete member...
      ///
      /// Key: removeMembering
      ///
      /// Locales: en, zh-Hant
      var removeMembering: RswiftResources.StringResource { .init(key: "removeMembering", tableName: "Localizable", source: source, developmentValue: "Delete member...", comment: nil) }

      /// en translation: Are you sure you want to clear all chat history?
      ///
      /// Key: removeMsgPrompt
      ///
      /// Locales: en, zh-Hant
      var removeMsgPrompt: RswiftResources.StringResource { .init(key: "removeMsgPrompt", tableName: "Localizable", source: source, developmentValue: "Are you sure you want to clear all chat history?", comment: nil) }

      /// en translation: Remove from mute list...
      ///
      /// Key: removeMuteList
      ///
      /// Locales: en, zh-Hant
      var removeMuteList: RswiftResources.StringResource { .init(key: "removeMuteList", tableName: "Localizable", source: source, developmentValue: "Remove from mute list...", comment: nil) }

      /// en translation: Are you sure you want to delete chat history with %@
      ///
      /// Key: removePrompt
      ///
      /// Locales: en, zh-Hant
      var removePrompt: RswiftResources.StringResource1<String> { .init(key: "removePrompt", tableName: "Localizable", source: source, developmentValue: "Are you sure you want to delete chat history with %@", comment: nil) }

      /// en translation: Move to blocklist...
      ///
      /// Key: removeToBLing
      ///
      /// Locales: en, zh-Hant
      var removeToBLing: RswiftResources.StringResource { .init(key: "removeToBLing", tableName: "Localizable", source: source, developmentValue: "Move to blocklist...", comment: nil) }

      /// en translation: Whether to remove from the blacklist
      ///
      /// Key: removeblacklist
      ///
      /// Locales: en, zh-Hant
      var removeblacklist: RswiftResources.StringResource { .init(key: "removeblacklist", tableName: "Localizable", source: source, developmentValue: "Whether to remove from the blacklist", comment: nil) }

      /// en translation: User removed from blocklist
      ///
      /// Key: removedBlacklist
      ///
      /// Locales: en, zh-Hant
      var removedBlacklist: RswiftResources.StringResource { .init(key: "removedBlacklist", tableName: "Localizable", source: source, developmentValue: "User removed from blocklist", comment: nil) }

      /// en translation: Your account has been removed from the server.
      ///
      /// Key: removedByServerPrompt
      ///
      /// Locales: en, zh-Hant
      var removedByServerPrompt: RswiftResources.StringResource { .init(key: "removedByServerPrompt", tableName: "Localizable", source: source, developmentValue: "Your account has been removed from the server.", comment: nil) }

      /// en translation: You have been removed from chatroom %@
      ///
      /// Key: removedChatroom
      ///
      /// Locales: en, zh-Hant
      var removedChatroom: RswiftResources.StringResource1<String> { .init(key: "removedChatroom", tableName: "Localizable", source: source, developmentValue: "You have been removed from chatroom %@", comment: nil) }

      /// en translation: You have been removed from group: %@
      ///
      /// Key: removedFromGroupPrompt
      ///
      /// Locales: en, zh-Hant
      var removedFromGroupPrompt: RswiftResources.StringResource1<String> { .init(key: "removedFromGroupPrompt", tableName: "Localizable", source: source, developmentValue: "You have been removed from group: %@", comment: nil) }

      /// en translation: You have been removed from the allowlist of group %@
      ///
      /// Key: removefromwhitelistPrompt
      ///
      /// Locales: en, zh-Hant
      var removefromwhitelistPrompt: RswiftResources.StringResource1<String> { .init(key: "removefromwhitelistPrompt", tableName: "Localizable", source: source, developmentValue: "You have been removed from the allowlist of group %@", comment: nil) }

      /// en translation: Failed to delete shared files
      ///
      /// Key: removesharedFileFail
      ///
      /// Locales: en, zh-Hant
      var removesharedFileFail: RswiftResources.StringResource { .init(key: "removesharedFileFail", tableName: "Localizable", source: source, developmentValue: "Failed to delete shared files", comment: nil) }

      /// en translation: remove from the blocklist...
      ///
      /// Key: removingBL
      ///
      /// Locales: en, zh-Hant
      var removingBL: RswiftResources.StringResource { .init(key: "removingBL", tableName: "Localizable", source: source, developmentValue: "remove from the blocklist...", comment: nil) }

      /// en translation: Removing...
      ///
      /// Key: removinging
      ///
      /// Locales: en, zh-Hant
      var removinging: RswiftResources.StringResource { .init(key: "removinging", tableName: "Localizable", source: source, developmentValue: "Removing...", comment: nil) }

      /// en translation: %@ You can participate again in hours, minutes, and seconds
      ///
      /// Key: reparticipation
      ///
      /// Locales: en, zh-Hant
      var reparticipation: RswiftResources.StringResource3<String, String, String> { .init(key: "reparticipation", tableName: "Localizable", source: source, developmentValue: "%@ You can participate again in hours, minutes, and seconds", comment: nil) }

      /// en translation: abuse
      ///
      /// Key: report.abuse
      ///
      /// Locales: en, zh-Hant
      var reportAbuse: RswiftResources.StringResource { .init(key: "report.abuse", tableName: "Localizable", source: source, developmentValue: "abuse", comment: nil) }

      /// en translation: advertisement
      ///
      /// Key: report.advertisement
      ///
      /// Locales: en, zh-Hant
      var reportAdvertisement: RswiftResources.StringResource { .init(key: "report.advertisement", tableName: "Localizable", source: source, developmentValue: "advertisement", comment: nil) }

      /// en translation: contraband
      ///
      /// Key: report.contraband
      ///
      /// Locales: en, zh-Hant
      var reportContraband: RswiftResources.StringResource { .init(key: "report.contraband", tableName: "Localizable", source: source, developmentValue: "contraband", comment: nil) }

      /// en translation: Report failed.Reason:%@
      ///
      /// Key: report.failed
      ///
      /// Locales: en, zh-Hant
      var reportFailed: RswiftResources.StringResource1<String> { .init(key: "report.failed", tableName: "Localizable", source: source, developmentValue: "Report failed.Reason:%@", comment: nil) }

      /// en translation: other
      ///
      /// Key: report.other
      ///
      /// Locales: en, zh-Hant
      var reportOther: RswiftResources.StringResource { .init(key: "report.other", tableName: "Localizable", source: source, developmentValue: "other", comment: nil) }

      /// en translation: politics
      ///
      /// Key: report.politics
      ///
      /// Locales: en, zh-Hant
      var reportPolitics: RswiftResources.StringResource { .init(key: "report.politics", tableName: "Localizable", source: source, developmentValue: "politics", comment: nil) }

      /// en translation: pornography
      ///
      /// Key: report.pornography
      ///
      /// Locales: en, zh-Hant
      var reportPornography: RswiftResources.StringResource { .init(key: "report.pornography", tableName: "Localizable", source: source, developmentValue: "pornography", comment: nil) }

      /// en translation: Report Reason
      ///
      /// Key: report.reason
      ///
      /// Locales: en, zh-Hant
      var reportReason: RswiftResources.StringResource { .init(key: "report.reason", tableName: "Localizable", source: source, developmentValue: "Report Reason", comment: nil) }

      /// en translation: Report success
      ///
      /// Key: report.success
      ///
      /// Locales: en, zh-Hant
      var reportSuccess: RswiftResources.StringResource { .init(key: "report.success", tableName: "Localizable", source: source, developmentValue: "Report success", comment: nil) }

      /// en translation: violent
      ///
      /// Key: report.violent
      ///
      /// Locales: en, zh-Hant
      var reportViolent: RswiftResources.StringResource { .init(key: "report.violent", tableName: "Localizable", source: source, developmentValue: "violent", comment: nil) }

      /// en translation: report
      ///
      /// Key: reportMessage
      ///
      /// Locales: en, zh-Hant
      var reportMessage: RswiftResources.StringResource { .init(key: "reportMessage", tableName: "Localizable", source: source, developmentValue: "report", comment: nil) }

      /// en translation: Copy wallet address
      ///
      /// Key: request.copyWallet.button.title
      ///
      /// Locales: en, zh-Hant
      var requestCopyWalletButtonTitle: RswiftResources.StringResource { .init(key: "request.copyWallet.button.title", tableName: "Localizable", source: source, developmentValue: "Copy wallet address", comment: nil) }

      /// en translation: You have a new friend invitation.
      ///
      /// Key: requestapplyContact
      ///
      /// Locales: en, zh-Hant
      var requestapplyContact: RswiftResources.StringResource { .init(key: "requestapplyContact", tableName: "Localizable", source: source, developmentValue: "You have a new friend invitation.", comment: nil) }

      /// en translation: URL
      ///
      /// Key: requester.field.url
      ///
      /// Locales: en, zh-Hant
      var requesterFieldUrl: RswiftResources.StringResource { .init(key: "requester.field.url", tableName: "Localizable", source: source, developmentValue: "URL", comment: nil) }

      /// en translation: Resend(%lds)
      ///
      /// Key: resend
      ///
      /// Locales: en, zh-Hant
      var resend: RswiftResources.StringResource1<Int> { .init(key: "resend", tableName: "Localizable", source: source, developmentValue: "Resend(%lds)", comment: nil) }

      /// en translation: Resend
      ///
      /// Key: resend_text
      ///
      /// Locales: en, zh-Hant
      var resend_text: RswiftResources.StringResource { .init(key: "resend_text", tableName: "Localizable", source: source, developmentValue: "Resend", comment: nil) }

      /// en translation: Complete
      ///
      /// Key: reset.complete
      ///
      /// Locales: en, zh-Hant
      var resetComplete: RswiftResources.StringResource { .init(key: "reset.complete", tableName: "Localizable", source: source, developmentValue: "Complete", comment: nil) }

      /// en translation: Next Step
      ///
      /// Key: reset.next
      ///
      /// Locales: en, zh-Hant
      var resetNext: RswiftResources.StringResource { .init(key: "reset.next", tableName: "Localizable", source: source, developmentValue: "Next Step", comment: nil) }

      /// en translation: Reset Password
      ///
      /// Key: resetPassword
      ///
      /// Locales: en, zh-Hant
      var resetPassword: RswiftResources.StringResource { .init(key: "resetPassword", tableName: "Localizable", source: source, developmentValue: "Reset Password", comment: nil) }

      /// en translation: You can later restore your wallet by backing up and importing your seed phrase.
      ///
      /// Key: restore_importing_mnemonic
      ///
      /// Locales: en, zh-Hant
      var restore_importing_mnemonic: RswiftResources.StringResource { .init(key: "restore_importing_mnemonic", tableName: "Localizable", source: source, developmentValue: "You can later restore your wallet by backing up and importing your seed phrase.", comment: nil) }

      /// en translation: You can later restore your wallet from the cloud by unlocking the password.
      ///
      /// Key: restore_wallet_unlocking_password
      ///
      /// Locales: en, zh-Hant
      var restore_wallet_unlocking_password: RswiftResources.StringResource { .init(key: "restore_wallet_unlocking_password", tableName: "Localizable", source: source, developmentValue: "You can later restore your wallet from the cloud by unlocking the password.", comment: nil) }

      /// en translation: Supports restoring any Cloud Backup wallet
      ///
      /// Key: restoring_Cloud_Backup_wallet
      ///
      /// Locales: en, zh-Hant
      var restoring_Cloud_Backup_wallet: RswiftResources.StringResource { .init(key: "restoring_Cloud_Backup_wallet", tableName: "Localizable", source: source, developmentValue: "Supports restoring any Cloud Backup wallet", comment: nil) }

      /// en translation:  Supports restoring any Cloud Backup wallet
      ///
      /// Key: restoring_cloud_backup_wallet
      ///
      /// Locales: en, zh-Hant
      var restoring_cloud_backup_wallet: RswiftResources.StringResource { .init(key: "restoring_cloud_backup_wallet", tableName: "Localizable", source: source, developmentValue: "\nSupports restoring any Cloud Backup wallet", comment: nil) }

      /// en translation: Re-Tran
      ///
      /// Key: retranslate
      ///
      /// Locales: en, zh-Hant
      var retranslate: RswiftResources.StringResource { .init(key: "retranslate", tableName: "Localizable", source: source, developmentValue: "Re-Tran", comment: nil) }

      /// en translation: Each translation can be retranslated only once.The translation provided is to reference only
      ///
      /// Key: retranslatePrompt
      ///
      /// Locales: en, zh-Hant
      var retranslatePrompt: RswiftResources.StringResource { .init(key: "retranslatePrompt", tableName: "Localizable", source: source, developmentValue: "Each translation can be retranslated only once.The translation provided is to reference only", comment: nil) }

      /// en translation: Deposit refund
      ///
      /// Key: return_deposit
      ///
      /// Locales: en, zh-Hant
      var return_deposit: RswiftResources.StringResource { .init(key: "return_deposit", tableName: "Localizable", source: source, developmentValue: "Deposit refund", comment: nil) }

      /// en translation: Refundable deposit ratio: %@
      ///
      /// Key: return_deposit_proportion
      ///
      /// Locales: en, zh-Hant
      var return_deposit_proportion: RswiftResources.StringResource1<String> { .init(key: "return_deposit_proportion", tableName: "Localizable", source: source, developmentValue: "Refundable deposit ratio: %@", comment: nil) }

      /// en translation: Deposit refundable：%@
      ///
      /// Key: return_tox
      ///
      /// Locales: en, zh-Hant
      var return_tox: RswiftResources.StringResource1<String> { .init(key: "return_tox", tableName: "Localizable", source: source, developmentValue: "Deposit refundable：%@", comment: nil) }

      /// en translation: Returned
      ///
      /// Key: returned
      ///
      /// Locales: en, zh-Hant
      var returned: RswiftResources.StringResource { .init(key: "returned", tableName: "Localizable", source: source, developmentValue: "Returned", comment: nil) }

      /// en translation: Deposit refunded: %@
      ///
      /// Key: returned_deposit
      ///
      /// Locales: en, zh-Hant
      var returned_deposit: RswiftResources.StringResource1<String> { .init(key: "returned_deposit", tableName: "Localizable", source: source, developmentValue: "Deposit refunded: %@", comment: nil) }

      /// en translation: If I share or reveal my seed phrase to anyone, my assets could be stolen!
      ///
      /// Key: reveal_assets_stolen
      ///
      /// Locales: en, zh-Hant
      var reveal_assets_stolen: RswiftResources.StringResource { .init(key: "reveal_assets_stolen", tableName: "Localizable", source: source, developmentValue: "If I share or reveal my seed phrase to anyone, my assets could be stolen!", comment: nil) }

      /// en translation: The recipient is not bound to the main wallet
      ///
      /// Key: reveivernotbindwallet
      ///
      /// Locales: en, zh-Hant
      var reveivernotbindwallet: RswiftResources.StringResource { .init(key: "reveivernotbindwallet", tableName: "Localizable", source: source, developmentValue: "The recipient is not bound to the main wallet", comment: nil) }

      /// en translation: Claimed
      ///
      /// Key: rewardClaimed
      ///
      /// Locales: en, zh-Hant
      var rewardClaimed: RswiftResources.StringResource { .init(key: "rewardClaimed", tableName: "Localizable", source: source, developmentValue: "Claimed", comment: nil) }

      /// en translation: Benefits Package
      ///
      /// Key: rewardPack
      ///
      /// Locales: en, zh-Hant
      var rewardPack: RswiftResources.StringResource { .init(key: "rewardPack", tableName: "Localizable", source: source, developmentValue: "Benefits Package", comment: nil) }

      /// en translation: Claim rewards
      ///
      /// Key: rewardReceive
      ///
      /// Locales: en, zh-Hant
      var rewardReceive: RswiftResources.StringResource { .init(key: "rewardReceive", tableName: "Localizable", source: source, developmentValue: "Claim rewards", comment: nil) }

      /// en translation: You have no permission！
      ///
      /// Key: rightFail
      ///
      /// Locales: en, zh-Hant
      var rightFail: RswiftResources.StringResource { .init(key: "rightFail", tableName: "Localizable", source: source, developmentValue: "You have no permission！", comment: nil) }

      /// en translation: Rule
      ///
      /// Key: rule_new
      ///
      /// Locales: en, zh-Hant
      var rule_new: RswiftResources.StringResource { .init(key: "rule_new", tableName: "Localizable", source: source, developmentValue: "Rule", comment: nil) }

      /// en translation: Wallet assets will be safer if you transcribe the seed phrase for safekeeping
      ///
      /// Key: safer_transcribe_seed_phrase
      ///
      /// Locales: en, zh-Hant
      var safer_transcribe_seed_phrase: RswiftResources.StringResource { .init(key: "safer_transcribe_seed_phrase", tableName: "Localizable", source: source, developmentValue: "Wallet assets will be safer if you transcribe the seed phrase for safekeeping", comment: nil) }

      /// en translation: Saturday 
      ///
      /// Key: saturday
      ///
      /// Locales: en, zh-Hant
      var saturday: RswiftResources.StringResource { .init(key: "saturday", tableName: "Localizable", source: source, developmentValue: "Saturday ", comment: nil) }

      /// en translation: Save
      ///
      /// Key: save
      ///
      /// Locales: en, zh-Hant
      var save: RswiftResources.StringResource { .init(key: "save", tableName: "Localizable", source: source, developmentValue: "Save", comment: nil) }

      /// en translation: Save configuration
      ///
      /// Key: saveConfig
      ///
      /// Locales: en, zh-Hant
      var saveConfig: RswiftResources.StringResource { .init(key: "saveConfig", tableName: "Localizable", source: source, developmentValue: "Save configuration", comment: nil) }

      /// en translation: Save failed
      ///
      /// Key: savefailed
      ///
      /// Locales: en, zh-Hant
      var savefailed: RswiftResources.StringResource { .init(key: "savefailed", tableName: "Localizable", source: source, developmentValue: "Save failed", comment: nil) }

      /// en translation: Save Picture
      ///
      /// Key: savephoto
      ///
      /// Locales: en, zh-Hant
      var savephoto: RswiftResources.StringResource { .init(key: "savephoto", tableName: "Localizable", source: source, developmentValue: "Save Picture", comment: nil) }

      /// en translation: Successfully saved
      ///
      /// Key: savesuccessfully
      ///
      /// Locales: en, zh-Hant
      var savesuccessfully: RswiftResources.StringResource { .init(key: "savesuccessfully", tableName: "Localizable", source: source, developmentValue: "Successfully saved", comment: nil) }

      /// en translation: Scanning result: %@
      ///
      /// Key: scanResulting
      ///
      /// Locales: en, zh-Hant
      var scanResulting: RswiftResources.StringResource1<String> { .init(key: "scanResulting", tableName: "Localizable", source: source, developmentValue: "Scanning result: %@", comment: nil) }

      /// en translation: Back to the top
      ///
      /// Key: scroll_top
      ///
      /// Locales: en, zh-Hant
      var scroll_top: RswiftResources.StringResource { .init(key: "scroll_top", tableName: "Localizable", source: source, developmentValue: "Back to the top", comment: nil) }

      /// en translation: No results for token you are searching for
      ///
      /// Key: seachToken.noresults.title
      ///
      /// Locales: en, zh-Hant
      var seachTokenNoresultsTitle: RswiftResources.StringResource { .init(key: "seachToken.noresults.title", tableName: "Localizable", source: source, developmentValue: "No results for token you are searching for", comment: nil) }

      /// en translation: Search
      ///
      /// Key: search
      ///
      /// Locales: en, zh-Hant
      var search: RswiftResources.StringResource { .init(key: "search", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: No results for network you are searching for
      ///
      /// Key: search.network.result.empty
      ///
      /// Locales: en, zh-Hant
      var searchNetworkResultEmpty: RswiftResources.StringResource { .init(key: "search.network.result.empty", tableName: "Localizable", source: source, developmentValue: "No results for network you are searching for", comment: nil) }

      /// en translation: Failed to find chat room
      ///
      /// Key: searchChatroom
      ///
      /// Locales: en, zh-Hant
      var searchChatroom: RswiftResources.StringResource { .init(key: "searchChatroom", tableName: "Localizable", source: source, developmentValue: "Failed to find chat room", comment: nil) }

      /// en translation: Find someone
      ///
      /// Key: searchContact
      ///
      /// Locales: en, zh-Hant
      var searchContact: RswiftResources.StringResource { .init(key: "searchContact", tableName: "Localizable", source: source, developmentValue: "Find someone", comment: nil) }

      /// en translation: Search group
      ///
      /// Key: searchGroup
      ///
      /// Locales: en, zh-Hant
      var searchGroup: RswiftResources.StringResource { .init(key: "searchGroup", tableName: "Localizable", source: source, developmentValue: "Search group", comment: nil) }

      /// en translation: Find chat history
      ///
      /// Key: searchMsgList
      ///
      /// Locales: en, zh-Hant
      var searchMsgList: RswiftResources.StringResource { .init(key: "searchMsgList", tableName: "Localizable", source: source, developmentValue: "Find chat history", comment: nil) }

      /// en translation: Search groupID
      ///
      /// Key: searchingGroupId
      ///
      /// Locales: en, zh-Hant
      var searchingGroupId: RswiftResources.StringResource { .init(key: "searchingGroupId", tableName: "Localizable", source: source, developmentValue: "Search groupID", comment: nil) }

      /// en translation: Search groups...
      ///
      /// Key: searchingGrouping
      ///
      /// Locales: en, zh-Hant
      var searchingGrouping: RswiftResources.StringResource { .init(key: "searchingGrouping", tableName: "Localizable", source: source, developmentValue: "Search groups...", comment: nil) }

      /// en translation: Search chatroom...
      ///
      /// Key: searingChatrooming
      ///
      /// Locales: en, zh-Hant
      var searingChatrooming: RswiftResources.StringResource { .init(key: "searingChatrooming", tableName: "Localizable", source: source, developmentValue: "Search chatroom...", comment: nil) }

      /// en translation: %ld Sec
      ///
      /// Key: second
      ///
      /// Locales: en, zh-Hant
      var second: RswiftResources.StringResource1<Int> { .init(key: "second", tableName: "Localizable", source: source, developmentValue: "%ld Sec", comment: nil) }

      /// en translation: Second-tier cities
      ///
      /// Key: second_city
      ///
      /// Locales: en, zh-Hant
      var second_city: RswiftResources.StringResource { .init(key: "second_city", tableName: "Localizable", source: source, developmentValue: "Second-tier cities", comment: nil) }

      /// en translation: Security verification
      ///
      /// Key: securityverification
      ///
      /// Locales: en, zh-Hant
      var securityverification: RswiftResources.StringResource { .init(key: "securityverification", tableName: "Localizable", source: source, developmentValue: "Security verification", comment: nil) }

      /// en translation: If I lose my seed phrase, my assets will be lost forever
      ///
      /// Key: seed_be_lost_forever
      ///
      /// Locales: en, zh-Hant
      var seed_be_lost_forever: RswiftResources.StringResource { .init(key: "seed_be_lost_forever", tableName: "Localizable", source: source, developmentValue: "If I lose my seed phrase, my assets will be lost forever", comment: nil) }

      /// en translation: Anyone who has access to your seed phrase can control your assets
      ///
      /// Key: seed_phrase_control_assets
      ///
      /// Locales: en, zh-Hant
      var seed_phrase_control_assets: RswiftResources.StringResource { .init(key: "seed_phrase_control_assets", tableName: "Localizable", source: source, developmentValue: "Anyone who has access to your seed phrase can control your assets", comment: nil) }

      /// en translation: Please enter the seed phrase in order, with each word separated by a space
      ///
      /// Key: seed_phrase_order
      ///
      /// Locales: en, zh-Hant
      var seed_phrase_order: RswiftResources.StringResource { .init(key: "seed_phrase_order", tableName: "Localizable", source: source, developmentValue: "Please enter the seed phrase in order, with each word separated by a space", comment: nil) }

      /// en translation: Support importing seed phrase or private keys from any wallet
      ///
      /// Key: seed_phrase_private_keys
      ///
      /// Locales: en, zh-Hant
      var seed_phrase_private_keys: RswiftResources.StringResource { .init(key: "seed_phrase_private_keys", tableName: "Localizable", source: source, developmentValue: "Support importing seed phrase or private keys from any wallet", comment: nil) }

      /// en translation: If you find that the device is lost, the app is uninstalled, etc., you will lose the wallet forever and cannot be recovered, and the seed phrase is the credentials to restore the wallet, be sure to make a backup so that you can restore it in the future when needed
      ///
      /// Key: seed_phrase_restore_wallet
      ///
      /// Locales: en, zh-Hant
      var seed_phrase_restore_wallet: RswiftResources.StringResource { .init(key: "seed_phrase_restore_wallet", tableName: "Localizable", source: source, developmentValue: "If you find that the device is lost, the app is uninstalled, etc., you will lose the wallet forever and cannot be recovered, and the seed phrase is the credentials to restore the wallet, be sure to make a backup so that you can restore it in the future when needed", comment: nil) }

      /// en translation: Select all
      ///
      /// Key: selectAll
      ///
      /// Locales: en, zh-Hant
      var selectAll: RswiftResources.StringResource { .init(key: "selectAll", tableName: "Localizable", source: source, developmentValue: "Select all", comment: nil) }

      /// en translation: Select group
      ///
      /// Key: selectGroup
      ///
      /// Locales: en, zh-Hant
      var selectGroup: RswiftResources.StringResource { .init(key: "selectGroup", tableName: "Localizable", source: source, developmentValue: "Select group", comment: nil) }

      /// en translation: A maximum of 50 groups can be sent each time, and only the group owner or group manager can be used.
      ///
      /// Key: selectGroup.text
      ///
      /// Locales: en, zh-Hant
      var selectGroupText: RswiftResources.StringResource { .init(key: "selectGroup.text", tableName: "Localizable", source: source, developmentValue: "A maximum of 50 groups can be sent each time, and only the group owner or group manager can be used.", comment: nil) }

      /// en translation: Select recipient group
      ///
      /// Key: selectReceiveGroup
      ///
      /// Locales: en, zh-Hant
      var selectReceiveGroup: RswiftResources.StringResource { .init(key: "selectReceiveGroup", tableName: "Localizable", source: source, developmentValue: "Select recipient group", comment: nil) }

      /// en translation: Please select each word in the correct order
      ///
      /// Key: select_word__correct_order
      ///
      /// Locales: en, zh-Hant
      var select_word__correct_order: RswiftResources.StringResource { .init(key: "select_word__correct_order", tableName: "Localizable", source: source, developmentValue: "Please select each word in the correct order", comment: nil) }

      /// en translation: Select appointment time
      ///
      /// Key: selectappointmenttime
      ///
      /// Locales: en, zh-Hant
      var selectappointmenttime: RswiftResources.StringResource { .init(key: "selectappointmenttime", tableName: "Localizable", source: source, developmentValue: "Select appointment time", comment: nil) }

      /// en translation: Select from album
      ///
      /// Key: selectfromalbum
      ///
      /// Locales: en, zh-Hant
      var selectfromalbum: RswiftResources.StringResource { .init(key: "selectfromalbum", tableName: "Localizable", source: source, developmentValue: "Select from album", comment: nil) }

      /// en translation: Select Month
      ///
      /// Key: selectmonth
      ///
      /// Locales: en, zh-Hant
      var selectmonth: RswiftResources.StringResource { .init(key: "selectmonth", tableName: "Localizable", source: source, developmentValue: "Select Month", comment: nil) }

      /// en translation: Edcon is a game centered around breedable, collectible, and adorable creatures where digital pandas live in the blockchain! Each panda comes from descendants of 50 giant pandas that have been officially licensed by China Panda Conservation and Research Center.
      ///
      /// Key: semifungibles.Edcon.description
      ///
      /// Locales: en, zh-Hant
      var semifungiblesEdconDescription: RswiftResources.StringResource { .init(key: "semifungibles.Edcon.description", tableName: "Localizable", source: source, developmentValue: "Edcon is a game centered around breedable, collectible, and adorable creatures where digital pandas live in the blockchain! Each panda comes from descendants of 50 giant pandas that have been officially licensed by China Panda Conservation and Research Center.", comment: nil) }

      /// en translation: Assets
      ///
      /// Key: semifungibles.assets.title
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAssetsTitle: RswiftResources.StringResource { .init(key: "semifungibles.assets.title", tableName: "Localizable", source: source, developmentValue: "Assets", comment: nil) }

      /// en translation: %d Assets
      ///
      /// Key: semifungibles.assetsCount
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAssetsCount: RswiftResources.StringResource1<Int> { .init(key: "semifungibles.assetsCount", tableName: "Localizable", source: source, developmentValue: "%d Assets", comment: nil) }

      /// en translation: Available To Mint
      ///
      /// Key: semifungibles.attribute.availableToMint
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeAvailableToMint: RswiftResources.StringResource { .init(key: "semifungibles.attribute.availableToMint", tableName: "Localizable", source: source, developmentValue: "Available To Mint", comment: nil) }

      /// en translation: Circulating Supply
      ///
      /// Key: semifungibles.attribute.circulatingSupply
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeCirculatingSupply: RswiftResources.StringResource { .init(key: "semifungibles.attribute.circulatingSupply", tableName: "Localizable", source: source, developmentValue: "Circulating Supply", comment: nil) }

      /// en translation: Issuer
      ///
      /// Key: semifungibles.attribute.issuer
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeIssuer: RswiftResources.StringResource { .init(key: "semifungibles.attribute.issuer", tableName: "Localizable", source: source, developmentValue: "Issuer", comment: nil) }

      /// en translation: Melt
      ///
      /// Key: semifungibles.attribute.melt
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeMelt: RswiftResources.StringResource { .init(key: "semifungibles.attribute.melt", tableName: "Localizable", source: source, developmentValue: "Melt", comment: nil) }

      /// en translation: Melt Fee Max Ratio
      ///
      /// Key: semifungibles.attribute.meltFeeMaxRatio
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeMeltFeeMaxRatio: RswiftResources.StringResource { .init(key: "semifungibles.attribute.meltFeeMaxRatio", tableName: "Localizable", source: source, developmentValue: "Melt Fee Max Ratio", comment: nil) }

      /// en translation: Melt Fee Ratio
      ///
      /// Key: semifungibles.attribute.meltFeeRatio
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeMeltFeeRatio: RswiftResources.StringResource { .init(key: "semifungibles.attribute.meltFeeRatio", tableName: "Localizable", source: source, developmentValue: "Melt Fee Ratio", comment: nil) }

      /// en translation: Non Fungible
      ///
      /// Key: semifungibles.attribute.nonFungible
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeNonFungible: RswiftResources.StringResource { .init(key: "semifungibles.attribute.nonFungible", tableName: "Localizable", source: source, developmentValue: "Non Fungible", comment: nil) }

      /// en translation: Reserve
      ///
      /// Key: semifungibles.attribute.reserve
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeReserve: RswiftResources.StringResource { .init(key: "semifungibles.attribute.reserve", tableName: "Localizable", source: source, developmentValue: "Reserve", comment: nil) }

      /// en translation: Supply Type
      ///
      /// Key: semifungibles.attribute.supplyType
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeSupplyType: RswiftResources.StringResource { .init(key: "semifungibles.attribute.supplyType", tableName: "Localizable", source: source, developmentValue: "Supply Type", comment: nil) }

      /// en translation: Total Supply
      ///
      /// Key: semifungibles.attribute.totalSupply
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeTotalSupply: RswiftResources.StringResource { .init(key: "semifungibles.attribute.totalSupply", tableName: "Localizable", source: source, developmentValue: "Total Supply", comment: nil) }

      /// en translation: Transfer Fee
      ///
      /// Key: semifungibles.attribute.transferFee
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeTransferFee: RswiftResources.StringResource { .init(key: "semifungibles.attribute.transferFee", tableName: "Localizable", source: source, developmentValue: "Transfer Fee", comment: nil) }

      /// en translation: Transferable
      ///
      /// Key: semifungibles.attribute.transferable
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributeTransferable: RswiftResources.StringResource { .init(key: "semifungibles.attribute.transferable", tableName: "Localizable", source: source, developmentValue: "Transferable", comment: nil) }

      /// en translation: Properties
      ///
      /// Key: semifungibles.attributes
      ///
      /// Locales: en, zh-Hant
      var semifungiblesAttributes: RswiftResources.StringResource { .init(key: "semifungibles.attributes", tableName: "Localizable", source: source, developmentValue: "Properties", comment: nil) }

      /// en translation: Created
      ///
      /// Key: semifungibles.createdDate
      ///
      /// Locales: en, zh-Hant
      var semifungiblesCreatedDate: RswiftResources.StringResource { .init(key: "semifungibles.createdDate", tableName: "Localizable", source: source, developmentValue: "Created", comment: nil) }

      /// en translation: Description
      ///
      /// Key: semifungibles.description
      ///
      /// Locales: en, zh-Hant
      var semifungiblesDescription: RswiftResources.StringResource { .init(key: "semifungibles.description", tableName: "Localizable", source: source, developmentValue: "Description", comment: nil) }

      /// en translation: Details
      ///
      /// Key: semifungibles.details
      ///
      /// Locales: en, zh-Hant
      var semifungiblesDetails: RswiftResources.StringResource { .init(key: "semifungibles.details", tableName: "Localizable", source: source, developmentValue: "Details", comment: nil) }

      /// en translation: Infinite Fungible Token
      ///
      /// Key: semifungibles.infiniteFungibleToken
      ///
      /// Locales: en, zh-Hant
      var semifungiblesInfiniteFungibleToken: RswiftResources.StringResource { .init(key: "semifungibles.infiniteFungibleToken", tableName: "Localizable", source: source, developmentValue: "Infinite Fungible Token", comment: nil) }

      /// en translation: Links
      ///
      /// Key: semifungibles.links
      ///
      /// Locales: en, zh-Hant
      var semifungiblesLinks: RswiftResources.StringResource { .init(key: "semifungibles.links", tableName: "Localizable", source: source, developmentValue: "Links", comment: nil) }

      /// en translation: Rankings
      ///
      /// Key: semifungibles.rankings
      ///
      /// Locales: en, zh-Hant
      var semifungiblesRankings: RswiftResources.StringResource { .init(key: "semifungibles.rankings", tableName: "Localizable", source: source, developmentValue: "Rankings", comment: nil) }

      /// en translation: Selected Tokens
      ///
      /// Key: semifungibles.selectedTokens
      ///
      /// Locales: en, zh-Hant
      var semifungiblesSelectedTokens: RswiftResources.StringResource { .init(key: "semifungibles.selectedTokens", tableName: "Localizable", source: source, developmentValue: "Selected Tokens", comment: nil) }

      /// en translation: %@ Selected
      ///
      /// Key: semifungibles.selectedTokens.2
      ///
      /// Locales: en, zh-Hant
      var semifungiblesSelectedTokens2: RswiftResources.StringResource1<String> { .init(key: "semifungibles.selectedTokens.2", tableName: "Localizable", source: source, developmentValue: "%@ Selected", comment: nil) }

      /// en translation: Select All
      ///
      /// Key: semifungibles.selection.selectAll
      ///
      /// Locales: en, zh-Hant
      var semifungiblesSelectionSelectAll: RswiftResources.StringResource { .init(key: "semifungibles.selection.selectAll", tableName: "Localizable", source: source, developmentValue: "Select All", comment: nil) }

      /// en translation: Stats
      ///
      /// Key: semifungibles.stats
      ///
      /// Locales: en, zh-Hant
      var semifungiblesStats: RswiftResources.StringResource { .init(key: "semifungibles.stats", tableName: "Localizable", source: source, developmentValue: "Stats", comment: nil) }

      /// en translation: Token ID
      ///
      /// Key: semifungibles.tokenId
      ///
      /// Locales: en, zh-Hant
      var semifungiblesTokenId: RswiftResources.StringResource { .init(key: "semifungibles.tokenId", tableName: "Localizable", source: source, developmentValue: "Token ID", comment: nil) }

      /// en translation: Clear
      ///
      /// Key: semifungibles.toolbar.clear
      ///
      /// Locales: en, zh-Hant
      var semifungiblesToolbarClear: RswiftResources.StringResource { .init(key: "semifungibles.toolbar.clear", tableName: "Localizable", source: source, developmentValue: "Clear", comment: nil) }

      /// en translation: Deal
      ///
      /// Key: semifungibles.toolbar.deal
      ///
      /// Locales: en, zh-Hant
      var semifungiblesToolbarDeal: RswiftResources.StringResource { .init(key: "semifungibles.toolbar.deal", tableName: "Localizable", source: source, developmentValue: "Deal", comment: nil) }

      /// en translation: Select All
      ///
      /// Key: semifungibles.toolbar.selectAll
      ///
      /// Locales: en, zh-Hant
      var semifungiblesToolbarSelectAll: RswiftResources.StringResource { .init(key: "semifungibles.toolbar.selectAll", tableName: "Localizable", source: source, developmentValue: "Select All", comment: nil) }

      /// en translation: Sell
      ///
      /// Key: semifungibles.toolbar.sell
      ///
      /// Locales: en, zh-Hant
      var semifungiblesToolbarSell: RswiftResources.StringResource { .init(key: "semifungibles.toolbar.sell", tableName: "Localizable", source: source, developmentValue: "Sell", comment: nil) }

      /// en translation: Send
      ///
      /// Key: semifungibles.toolbar.send
      ///
      /// Locales: en, zh-Hant
      var semifungiblesToolbarSend: RswiftResources.StringResource { .init(key: "semifungibles.toolbar.send", tableName: "Localizable", source: source, developmentValue: "Send", comment: nil) }

      /// en translation: Value
      ///
      /// Key: semifungibles.value
      ///
      /// Locales: en, zh-Hant
      var semifungiblesValue: RswiftResources.StringResource { .init(key: "semifungibles.value", tableName: "Localizable", source: source, developmentValue: "Value", comment: nil) }

      /// en translation: Project Info
      ///
      /// Key: semifungiblesProjectInfo
      ///
      /// Locales: en, zh-Hant
      var semifungiblesProjectInfo: RswiftResources.StringResource { .init(key: "semifungiblesProjectInfo", tableName: "Localizable", source: source, developmentValue: "Project Info", comment: nil) }

      /// en translation: Send
      ///
      /// Key: send
      ///
      /// Locales: en, zh-Hant
      var send: RswiftResources.StringResource { .init(key: "send", tableName: "Localizable", source: source, developmentValue: "Send", comment: nil) }

      /// en translation: Copy Transaction ID
      ///
      /// Key: send.action.copy.transaction.title
      ///
      /// Locales: en, zh-Hant
      var sendActionCopyTransactionTitle: RswiftResources.StringResource { .init(key: "send.action.copy.transaction.title", tableName: "Localizable", source: source, developmentValue: "Copy Transaction ID", comment: nil) }

      /// en translation: Transaction Sent!
      ///
      /// Key: send.action.transaction.sent
      ///
      /// Locales: en, zh-Hant
      var sendActionTransactionSent: RswiftResources.StringResource { .init(key: "send.action.transaction.sent", tableName: "Localizable", source: source, developmentValue: "Transaction Sent!", comment: nil) }

      /// en translation: Wait for the transaction to be mined on the network to see details.
      ///
      /// Key: send.action.transaction.sent.wait
      ///
      /// Locales: en, zh-Hant
      var sendActionTransactionSentWait: RswiftResources.StringResource { .init(key: "send.action.transaction.sent.wait", tableName: "Localizable", source: source, developmentValue: "Wait for the transaction to be mined on the network to see details.", comment: nil) }

      /// en translation: All Funds
      ///
      /// Key: send.allFunds
      ///
      /// Locales: en, zh-Hant
      var sendAllFunds: RswiftResources.StringResource { .init(key: "send.allFunds", tableName: "Localizable", source: source, developmentValue: "All Funds", comment: nil) }

      /// en translation: Amount
      ///
      /// Key: send.amount
      ///
      /// Locales: en, zh-Hant
      var sendAmount: RswiftResources.StringResource { .init(key: "send.amount", tableName: "Localizable", source: source, developmentValue: "Amount", comment: nil) }

      /// en translation: Available: %@
      ///
      /// Key: send.available
      ///
      /// Locales: en, zh-Hant
      var sendAvailable: RswiftResources.StringResource1<String> { .init(key: "send.available", tableName: "Localizable", source: source, developmentValue: "Available: %@", comment: nil) }

      /// en translation: Empty ClipBoard
      ///
      /// Key: send.error.emptyClipBoard
      ///
      /// Locales: en, zh-Hant
      var sendErrorEmptyClipBoard: RswiftResources.StringResource { .init(key: "send.error.emptyClipBoard", tableName: "Localizable", source: source, developmentValue: "Empty ClipBoard", comment: nil) }

      /// en translation: Invalid Address
      ///
      /// Key: send.error.invalidAddress
      ///
      /// Locales: en, zh-Hant
      var sendErrorInvalidAddress: RswiftResources.StringResource { .init(key: "send.error.invalidAddress", tableName: "Localizable", source: source, developmentValue: "Invalid Address", comment: nil) }

      /// en translation: Invalid Amount
      ///
      /// Key: send.error.invalidAmount
      ///
      /// Locales: en, zh-Hant
      var sendErrorInvalidAmount: RswiftResources.StringResource { .init(key: "send.error.invalidAmount", tableName: "Localizable", source: source, developmentValue: "Invalid Amount", comment: nil) }

      /// en translation: Wrong Input
      ///
      /// Key: send.error.wrongInput
      ///
      /// Locales: en, zh-Hant
      var sendErrorWrongInput: RswiftResources.StringResource { .init(key: "send.error.wrongInput", tableName: "Localizable", source: source, developmentValue: "Wrong Input", comment: nil) }

      /// en translation: Fail in send
      ///
      /// Key: send.failed
      ///
      /// Locales: en, zh-Hant
      var sendFailed: RswiftResources.StringResource { .init(key: "send.failed", tableName: "Localizable", source: source, developmentValue: "Fail in send", comment: nil) }

      /// en translation: Invalid token
      ///
      /// Key: send.invalid.Token
      ///
      /// Locales: en, zh-Hant
      var sendInvalidToken: RswiftResources.StringResource { .init(key: "send.invalid.Token", tableName: "Localizable", source: source, developmentValue: "Invalid token", comment: nil) }

      /// en translation: Address Book
      ///
      /// Key: send.paste.button.addressBook
      ///
      /// Locales: en, zh-Hant
      var sendPasteButtonAddressBook: RswiftResources.StringResource { .init(key: "send.paste.button.addressBook", tableName: "Localizable", source: source, developmentValue: "Address Book", comment: nil) }

      /// en translation: Paste
      ///
      /// Key: send.paste.button.title
      ///
      /// Locales: en, zh-Hant
      var sendPasteButtonTitle: RswiftResources.StringResource { .init(key: "send.paste.button.title", tableName: "Localizable", source: source, developmentValue: "Paste", comment: nil) }

      /// en translation: Sending
      ///
      /// Key: send.pending
      ///
      /// Locales: en, zh-Hant
      var sendPending: RswiftResources.StringResource { .init(key: "send.pending", tableName: "Localizable", source: source, developmentValue: "Sending", comment: nil) }

      /// en translation: Recipient
      ///
      /// Key: send.recipient
      ///
      /// Locales: en, zh-Hant
      var sendRecipient: RswiftResources.StringResource { .init(key: "send.recipient", tableName: "Localizable", source: source, developmentValue: "Recipient", comment: nil) }

      /// en translation: Recipient’s Address
      ///
      /// Key: send.recipientsAddress
      ///
      /// Locales: en, zh-Hant
      var sendRecipientsAddress: RswiftResources.StringResource { .init(key: "send.recipientsAddress", tableName: "Localizable", source: source, developmentValue: "Recipient’s Address", comment: nil) }

      /// en translation: Group message successfully sent:
      ///
      /// Key: sendBroadcastResult
      ///
      /// Locales: en, zh-Hant
      var sendBroadcastResult: RswiftResources.StringResource { .init(key: "sendBroadcastResult", tableName: "Localizable", source: source, developmentValue: "Group message successfully sent:", comment: nil) }

      /// en translation: Sent successfully!
      ///
      /// Key: sendBroadcastSucess
      ///
      /// Locales: en, zh-Hant
      var sendBroadcastSucess: RswiftResources.StringResource { .init(key: "sendBroadcastSucess", tableName: "Localizable", source: source, developmentValue: "Sent successfully!", comment: nil) }

      /// en translation: Send join group request...
      ///
      /// Key: sendGroupJoin..
      ///
      /// Locales: en, zh-Hant
      var sendGroupJoin: RswiftResources.StringResource { .init(key: "sendGroupJoin..", tableName: "Localizable", source: source, developmentValue: "Send join group request...", comment: nil) }

      /// en translation: Friend request sent
      ///
      /// Key: sendInvite
      ///
      /// Locales: en, zh-Hant
      var sendInvite: RswiftResources.StringResource { .init(key: "sendInvite", tableName: "Localizable", source: source, developmentValue: "Friend request sent", comment: nil) }

      /// en translation: Failed to send request
      ///
      /// Key: sendInviteFail
      ///
      /// Locales: en, zh-Hant
      var sendInviteFail: RswiftResources.StringResource { .init(key: "sendInviteFail", tableName: "Localizable", source: source, developmentValue: "Failed to send request", comment: nil) }

      /// en translation: Send message
      ///
      /// Key: sendMsg
      ///
      /// Locales: en, zh-Hant
      var sendMsg: RswiftResources.StringResource { .init(key: "sendMsg", tableName: "Localizable", source: source, developmentValue: "Send message", comment: nil) }

      /// en translation: Eden
      ///
      /// Key: sendPrivateTransactionsProvider.eden
      ///
      /// Locales: en, zh-Hant
      var sendPrivateTransactionsProviderEden: RswiftResources.StringResource { .init(key: "sendPrivateTransactionsProvider.eden", tableName: "Localizable", source: source, developmentValue: "Eden", comment: nil) }

      /// en translation: Ethermine
      ///
      /// Key: sendPrivateTransactionsProvider.etheremine
      ///
      /// Locales: en, zh-Hant
      var sendPrivateTransactionsProviderEtheremine: RswiftResources.StringResource { .init(key: "sendPrivateTransactionsProvider.etheremine", tableName: "Localizable", source: source, developmentValue: "Ethermine", comment: nil) }

      /// en translation: It seems like there is a problem with the RPC node certificate. Please try again later
      ///
      /// Key: sendTransaction.error.invalidCertificate
      ///
      /// Locales: en, zh-Hant
      var sendTransactionErrorInvalidCertificate: RswiftResources.StringResource { .init(key: "sendTransaction.error.invalidCertificate", tableName: "Localizable", source: source, developmentValue: "It seems like there is a problem with the RPC node certificate. Please try again later", comment: nil) }

      /// en translation: Something went wrong when making the request. Please try again later
      ///
      /// Key: sendTransaction.error.invalidKey
      ///
      /// Locales: en, zh-Hant
      var sendTransactionErrorInvalidKey: RswiftResources.StringResource { .init(key: "sendTransaction.error.invalidKey", tableName: "Localizable", source: source, developmentValue: "Something went wrong when making the request. Please try again later", comment: nil) }

      /// en translation: The network connection was lost. Please try again
      ///
      /// Key: sendTransaction.error.networkConnectionWasLost
      ///
      /// Locales: en, zh-Hant
      var sendTransactionErrorNetworkConnectionWasLost: RswiftResources.StringResource { .init(key: "sendTransaction.error.networkConnectionWasLost", tableName: "Localizable", source: source, developmentValue: "The network connection was lost. Please try again", comment: nil) }

      /// en translation: Request has timed out. Please try again
      ///
      /// Key: sendTransaction.error.possibleBinanceTestnetTimeout
      ///
      /// Locales: en, zh-Hant
      var sendTransactionErrorPossibleBinanceTestnetTimeout: RswiftResources.StringResource { .init(key: "sendTransaction.error.possibleBinanceTestnetTimeout", tableName: "Localizable", source: source, developmentValue: "Request has timed out. Please try again", comment: nil) }

      /// en translation: There might have been too many requests. Please try again later
      ///
      /// Key: sendTransaction.error.rateLimited
      ///
      /// Locales: en, zh-Hant
      var sendTransactionErrorRateLimited: RswiftResources.StringResource { .init(key: "sendTransaction.error.rateLimited", tableName: "Localizable", source: source, developmentValue: "There might have been too many requests. Please try again later", comment: nil) }

      /// en translation: Request has timed out. Please try again
      ///
      /// Key: sendTransaction.error.requestTimedOut
      ///
      /// Locales: en, zh-Hant
      var sendTransactionErrorRequestTimedOut: RswiftResources.StringResource { .init(key: "sendTransaction.error.requestTimedOut", tableName: "Localizable", source: source, developmentValue: "Request has timed out. Please try again", comment: nil) }

      /// en translation: We'll send a verification code to your phone number
      ///
      /// Key: send_verification_code
      ///
      /// Locales: en, zh-Hant
      var send_verification_code: RswiftResources.StringResource { .init(key: "send_verification_code", tableName: "Localizable", source: source, developmentValue: "We'll send a verification code to your phone number", comment: nil) }

      /// en translation: Red envelopes
      ///
      /// Key: sendredpacket
      ///
      /// Locales: en, zh-Hant
      var sendredpacket: RswiftResources.StringResource { .init(key: "sendredpacket", tableName: "Localizable", source: source, developmentValue: "Red envelopes", comment: nil) }

      /// en translation: Send to:
      ///
      /// Key: sendtoing
      ///
      /// Locales: en, zh-Hant
      var sendtoing: RswiftResources.StringResource { .init(key: "sendtoing", tableName: "Localizable", source: source, developmentValue: "Send to:", comment: nil) }

      /// en translation: Search contacts
      ///
      /// Key: serchContact
      ///
      /// Locales: en, zh-Hant
      var serchContact: RswiftResources.StringResource { .init(key: "serchContact", tableName: "Localizable", source: source, developmentValue: "Search contacts", comment: nil) }

      /// en translation: Input user Id
      ///
      /// Key: serchUserId
      ///
      /// Locales: en, zh-Hant
      var serchUserId: RswiftResources.StringResource { .init(key: "serchUserId", tableName: "Localizable", source: source, developmentValue: "Input user Id", comment: nil) }

      /// en translation: %@ is disabled. Please enable it in Settings > Select Active Networks
      ///
      /// Key: server.warning.serverIsDisabled
      ///
      /// Locales: en, zh-Hant
      var serverWarningServerIsDisabled: RswiftResources.StringResource1<String> { .init(key: "server.warning.serverIsDisabled", tableName: "Localizable", source: source, developmentValue: "%@ is disabled. Please enable it in Settings > Select Active Networks", comment: nil) }

      /// en translation: %@ are disabled. Please enable them in Settings > Select Active Networks
      ///
      /// Key: server.warning.serversAreDisabled
      ///
      /// Locales: en, zh-Hant
      var serverWarningServersAreDisabled: RswiftResources.StringResource1<String> { .init(key: "server.warning.serversAreDisabled", tableName: "Localizable", source: source, developmentValue: "%@ are disabled. Please enable them in Settings > Select Active Networks", comment: nil) }

      /// en translation: Server Configure
      ///
      /// Key: serverConfig
      ///
      /// Locales: en, zh-Hant
      var serverConfig: RswiftResources.StringResource { .init(key: "serverConfig", tableName: "Localizable", source: source, developmentValue: "Server Configure", comment: nil) }

      /// en translation: By server time
      ///
      /// Key: serverTime
      ///
      /// Locales: en, zh-Hant
      var serverTime: RswiftResources.StringResource { .init(key: "serverTime", tableName: "Localizable", source: source, developmentValue: "By server time", comment: nil) }

      /// en translation: Terms of Service
      ///
      /// Key: servicePrompt
      ///
      /// Locales: en, zh-Hant
      var servicePrompt: RswiftResources.StringResource { .init(key: "servicePrompt", tableName: "Localizable", source: source, developmentValue: "Terms of Service", comment: nil) }

      /// en translation: Set as Home Page
      ///
      /// Key: setAsHomePage
      ///
      /// Locales: en, zh-Hant
      var setAsHomePage: RswiftResources.StringResource { .init(key: "setAsHomePage", tableName: "Localizable", source: source, developmentValue: "Set as Home Page", comment: nil) }

      /// en translation: Failed to set noDisturb reason：%@
      ///
      /// Key: setDistrbute
      ///
      /// Locales: en, zh-Hant
      var setDistrbute: RswiftResources.StringResource1<String> { .init(key: "setDistrbute", tableName: "Localizable", source: source, developmentValue: "Failed to set noDisturb reason：%@", comment: nil) }

      /// en translation: Set group notes
      ///
      /// Key: setGroupRemark
      ///
      /// Locales: en, zh-Hant
      var setGroupRemark: RswiftResources.StringResource { .init(key: "setGroupRemark", tableName: "Localizable", source: source, developmentValue: "Set group notes", comment: nil) }

      /// en translation: Group chat notes are only visible to you
      ///
      /// Key: setGroupRemark.text
      ///
      /// Locales: en, zh-Hant
      var setGroupRemarkText: RswiftResources.StringResource { .init(key: "setGroupRemark.text", tableName: "Localizable", source: source, developmentValue: "Group chat notes are only visible to you", comment: nil) }

      /// en translation: Set notes
      ///
      /// Key: setRemark
      ///
      /// Locales: en, zh-Hant
      var setRemark: RswiftResources.StringResource { .init(key: "setRemark", tableName: "Localizable", source: source, developmentValue: "Set notes", comment: nil) }

      /// en translation: Fill in the name of the note
      ///
      /// Key: setRemark.placeholder
      ///
      /// Locales: en, zh-Hant
      var setRemarkPlaceholder: RswiftResources.StringResource { .init(key: "setRemark.placeholder", tableName: "Localizable", source: source, developmentValue: "Fill in the name of the note", comment: nil) }

      /// en translation: You can add note names for your friends
      ///
      /// Key: setRemark.text
      ///
      /// Locales: en, zh-Hant
      var setRemarkText: RswiftResources.StringResource { .init(key: "setRemark.text", tableName: "Localizable", source: source, developmentValue: "You can add note names for your friends", comment: nil) }

      /// en translation: Set up successfully
      ///
      /// Key: setSuccess
      ///
      /// Locales: en, zh-Hant
      var setSuccess: RswiftResources.StringResource { .init(key: "setSuccess", tableName: "Localizable", source: source, developmentValue: "Set up successfully", comment: nil) }

      /// en translation: Set a time slot
      ///
      /// Key: setTime
      ///
      /// Locales: en, zh-Hant
      var setTime: RswiftResources.StringResource { .init(key: "setTime", tableName: "Localizable", source: source, developmentValue: "Set a time slot", comment: nil) }

      /// en translation: Settings
      ///
      /// Key: setting
      ///
      /// Locales: en, zh-Hant
      var setting: RswiftResources.StringResource { .init(key: "setting", tableName: "Localizable", source: source, developmentValue: "Settings", comment: nil) }

      /// en translation: Select network
      ///
      /// Key: setting.choosenetwork
      ///
      /// Locales: en, zh-Hant
      var settingChoosenetwork: RswiftResources.StringResource { .init(key: "setting.choosenetwork", tableName: "Localizable", source: source, developmentValue: "Select network", comment: nil) }

      /// en translation: Exporting
      ///
      /// Key: settings.advanced.exportJSONKeystore.file.exporting
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystoreFileExporting: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.file.exporting", tableName: "Localizable", source: source, developmentValue: "Exporting", comment: nil) }

      /// en translation: Your Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.file.label
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystoreFileLabel: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.file.label", tableName: "Localizable", source: source, developmentValue: "Your Keystore JSON", comment: nil) }

      /// en translation: Set Password for Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.file.passwordButton.info
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystoreFilePasswordButtonInfo: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.file.passwordButton.info", tableName: "Localizable", source: source, developmentValue: "Set Password for Keystore JSON", comment: nil) }

      /// en translation: Export Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.file.passwordButton.password
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystoreFilePasswordButtonPassword: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.file.passwordButton.password", tableName: "Localizable", source: source, developmentValue: "Export Keystore JSON", comment: nil) }

      /// en translation: Export Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.file.title
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystoreFileTitle: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.file.title", tableName: "Localizable", source: source, developmentValue: "Export Keystore JSON", comment: nil) }

      /// en translation: Password
      ///
      /// Key: settings.advanced.exportJSONKeystore.password.label
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystorePasswordLabel: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.password.label", tableName: "Localizable", source: source, developmentValue: "Password", comment: nil) }

      /// en translation: Export Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.password.passwordButton.info
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystorePasswordPasswordButtonInfo: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.password.passwordButton.info", tableName: "Localizable", source: source, developmentValue: "Export Keystore JSON", comment: nil) }

      /// en translation: Your Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.password.passwordButton.password
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystorePasswordPasswordButtonPassword: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.password.passwordButton.password", tableName: "Localizable", source: source, developmentValue: "Your Keystore JSON", comment: nil) }

      /// en translation: Set Password for Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.password.title
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystorePasswordTitle: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.password.title", tableName: "Localizable", source: source, developmentValue: "Set Password for Keystore JSON", comment: nil) }

      /// en translation: Export Keystore JSON
      ///
      /// Key: settings.advanced.exportJSONKeystore.title
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedExportJSONKeystoreTitle: RswiftResources.StringResource { .init(key: "settings.advanced.exportJSONKeystore.title", tableName: "Localizable", source: source, developmentValue: "Export Keystore JSON", comment: nil) }

      /// en translation: Advanced
      ///
      /// Key: settings.advanced.title
      ///
      /// Locales: en, zh-Hant
      var settingsAdvancedTitle: RswiftResources.StringResource { .init(key: "settings.advanced.title", tableName: "Localizable", source: source, developmentValue: "Advanced", comment: nil) }

      /// en translation: Analytics
      ///
      /// Key: settings.analitycs.title
      ///
      /// Locales: en, zh-Hant
      var settingsAnalitycsTitle: RswiftResources.StringResource { .init(key: "settings.analitycs.title", tableName: "Localizable", source: source, developmentValue: "Analytics", comment: nil) }

      /// en translation: Back up this Wallet
      ///
      /// Key: settings.backupWallet.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsBackupWalletButtonTitle: RswiftResources.StringResource { .init(key: "settings.backupWallet.button.title", tableName: "Localizable", source: source, developmentValue: "Back up this Wallet", comment: nil) }

      /// en translation: Passcode
      ///
      /// Key: settings.biometricsDisabled.label.title
      ///
      /// Locales: en, zh-Hant
      var settingsBiometricsDisabledLabelTitle: RswiftResources.StringResource { .init(key: "settings.biometricsDisabled.label.title", tableName: "Localizable", source: source, developmentValue: "Passcode", comment: nil) }

      /// en translation: Passcode / %@
      ///
      /// Key: settings.biometricsEnabled.label.title
      ///
      /// Locales: en, zh-Hant
      var settingsBiometricsEnabledLabelTitle: RswiftResources.StringResource1<String> { .init(key: "settings.biometricsEnabled.label.title", tableName: "Localizable", source: source, developmentValue: "Passcode / %@", comment: nil) }

      /// en translation: Blockscan Chat
      ///
      /// Key: settings.blockscanChat
      ///
      /// Locales: en, zh-Hant
      var settingsBlockscanChat: RswiftResources.StringResource { .init(key: "settings.blockscanChat", tableName: "Localizable", source: source, developmentValue: "Blockscan Chat", comment: nil) }

      /// en translation: Change / Add Wallet
      ///
      /// Key: settings.change.wallet.title
      ///
      /// Locales: en, zh-Hant
      var settingsChangeWalletTitle: RswiftResources.StringResource { .init(key: "settings.change.wallet.title", tableName: "Localizable", source: source, developmentValue: "Change / Add Wallet", comment: nil) }

      /// en translation: Change Currency
      ///
      /// Key: settings.changeCurrency.title
      ///
      /// Locales: en, zh-Hant
      var settingsChangeCurrencyTitle: RswiftResources.StringResource { .init(key: "settings.changeCurrency.title", tableName: "Localizable", source: source, developmentValue: "Change Currency", comment: nil) }

      /// en translation: Check Transaction State
      ///
      /// Key: settings.checkTransactionState
      ///
      /// Locales: en, zh-Hant
      var settingsCheckTransactionState: RswiftResources.StringResource { .init(key: "settings.checkTransactionState", tableName: "Localizable", source: source, developmentValue: "Check Transaction State", comment: nil) }

      /// en translation: Private ETH transactions
      ///
      /// Key: settings.chooseSendPrivateTransactionsProvider.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsChooseSendPrivateTransactionsProviderButtonTitle: RswiftResources.StringResource { .init(key: "settings.chooseSendPrivateTransactionsProvider.button.title", tableName: "Localizable", source: source, developmentValue: "Private ETH transactions", comment: nil) }

      /// en translation: Contact Us
      ///
      /// Key: settings.contactUs.title
      ///
      /// Locales: en, zh-Hant
      var settingsContactUsTitle: RswiftResources.StringResource { .init(key: "settings.contactUs.title", tableName: "Localizable", source: source, developmentValue: "Contact Us", comment: nil) }

      /// en translation: Crash Reporting
      ///
      /// Key: settings.crashReporter.title
      ///
      /// Locales: en, zh-Hant
      var settingsCrashReporterTitle: RswiftResources.StringResource { .init(key: "settings.crashReporter.title", tableName: "Localizable", source: source, developmentValue: "Crash Reporting", comment: nil) }

      /// en translation: Currency
      ///
      /// Key: settings.currency.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsCurrencyButtonTitle: RswiftResources.StringResource { .init(key: "settings.currency.button.title", tableName: "Localizable", source: source, developmentValue: "Currency", comment: nil) }

      /// en translation: Enabled Networks %@
      ///
      /// Key: settings.enabledNetworks.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksButtonTitle: RswiftResources.StringResource1<String> { .init(key: "settings.enabledNetworks.button.title", tableName: "Localizable", source: source, developmentValue: "Enabled Networks %@", comment: nil) }

      /// en translation: This will restart the app
      ///
      /// Key: settings.enabledNetworks.delete.message
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksDeleteMessage: RswiftResources.StringResource { .init(key: "settings.enabledNetworks.delete.message", tableName: "Localizable", source: source, developmentValue: "This will restart the app", comment: nil) }

      /// en translation: Are you sure you would like to delete this server?
      ///
      /// Key: settings.enabledNetworks.delete.title
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksDeleteTitle: RswiftResources.StringResource { .init(key: "settings.enabledNetworks.delete.title", tableName: "Localizable", source: source, developmentValue: "Are you sure you would like to delete this server?", comment: nil) }

      /// en translation: Mainnet
      ///
      /// Key: settings.enabledNetworks.mainnet
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksMainnet: RswiftResources.StringResource { .init(key: "settings.enabledNetworks.mainnet", tableName: "Localizable", source: source, developmentValue: "Mainnet", comment: nil) }

      /// en translation: Got it, enable Testnets
      ///
      /// Key: settings.enabledNetworks.promptEnableTestnet.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksPromptEnableTestnetButtonTitle: RswiftResources.StringResource { .init(key: "settings.enabledNetworks.promptEnableTestnet.button.title", tableName: "Localizable", source: source, developmentValue: "Got it, enable Testnets", comment: nil) }

      /// en translation: Testnets tokens are like ‘Monopoly’ money. They have zero financial worth but are used by developers to try out new designs without needing to spend valuable coins.
      ///
      /// Key: settings.enabledNetworks.promptEnableTestnet.description
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksPromptEnableTestnetDescription: RswiftResources.StringResource { .init(key: "settings.enabledNetworks.promptEnableTestnet.description", tableName: "Localizable", source: source, developmentValue: "Testnets tokens are like ‘Monopoly’ money. They have zero financial worth but are used by developers to try out new designs without needing to spend valuable coins.", comment: nil) }

      /// en translation: What is Testnet?
      ///
      /// Key: settings.enabledNetworks.promptEnableTestnet.title
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksPromptEnableTestnetTitle: RswiftResources.StringResource { .init(key: "settings.enabledNetworks.promptEnableTestnet.title", tableName: "Localizable", source: source, developmentValue: "What is Testnet?", comment: nil) }

      /// en translation: Testnet
      ///
      /// Key: settings.enabledNetworks.testnet
      ///
      /// Locales: en, zh-Hant
      var settingsEnabledNetworksTestnet: RswiftResources.StringResource { .init(key: "settings.enabledNetworks.testnet", tableName: "Localizable", source: source, developmentValue: "Testnet", comment: nil) }

      /// en translation: Failed to send email. Make sure you have Mail app installed.
      ///
      /// Key: settings.error.failedToSendEmail
      ///
      /// Locales: en, zh-Hant
      var settingsErrorFailedToSendEmail: RswiftResources.StringResource { .init(key: "settings.error.failedToSendEmail", tableName: "Localizable", source: source, developmentValue: "Failed to send email. Make sure you have Mail app installed.", comment: nil) }

      /// en translation: General
      ///
      /// Key: settings.general.title
      ///
      /// Locales: en, zh-Hant
      var settingsGeneralTitle: RswiftResources.StringResource { .init(key: "settings.general.title", tableName: "Localizable", source: source, developmentValue: "General", comment: nil) }

      /// en translation: Language
      ///
      /// Key: settings.language.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsLanguageButtonTitle: RswiftResources.StringResource { .init(key: "settings.language.button.title", tableName: "Localizable", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: Use System Setting
      ///
      /// Key: settings.language.useSystem.title
      ///
      /// Locales: en, zh-Hant
      var settingsLanguageUseSystemTitle: RswiftResources.StringResource { .init(key: "settings.language.useSystem.title", tableName: "Localizable", source: source, developmentValue: "Use System Setting", comment: nil) }

      /// en translation: My inviter
      ///
      /// Key: settings.my.inviter
      ///
      /// Locales: en, zh-Hant
      var settingsMyInviter: RswiftResources.StringResource { .init(key: "settings.my.inviter", tableName: "Localizable", source: source, developmentValue: "My inviter", comment: nil) }

      /// en translation: Network
      ///
      /// Key: settings.network.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsNetworkButtonTitle: RswiftResources.StringResource { .init(key: "settings.network.button.title", tableName: "Localizable", source: source, developmentValue: "Network", comment: nil) }

      /// en translation: Test
      ///
      /// Key: settings.network.test.label.title
      ///
      /// Locales: en, zh-Hant
      var settingsNetworkTestLabelTitle: RswiftResources.StringResource { .init(key: "settings.network.test.label.title", tableName: "Localizable", source: source, developmentValue: "Test", comment: nil) }

      /// en translation: Notifications
      ///
      /// Key: settings.notifications.title
      ///
      /// Locales: en, zh-Hant
      var settingsNotificationsTitle: RswiftResources.StringResource { .init(key: "settings.notifications.title", tableName: "Localizable", source: source, developmentValue: "Notifications", comment: nil) }

      /// en translation: Passcode / Touch ID
      ///
      /// Key: settings.passcode.title
      ///
      /// Locales: en, zh-Hant
      var settingsPasscodeTitle: RswiftResources.StringResource { .init(key: "settings.passcode.title", tableName: "Localizable", source: source, developmentValue: "Passcode / Touch ID", comment: nil) }

      /// en translation: Infura Error
      ///
      /// Key: settings.pingInfura.fail
      ///
      /// Locales: en, zh-Hant
      var settingsPingInfuraFail: RswiftResources.StringResource { .init(key: "settings.pingInfura.fail", tableName: "Localizable", source: source, developmentValue: "Infura Error", comment: nil) }

      /// en translation: Infura looks OK
      ///
      /// Key: settings.pingInfura.successful
      ///
      /// Locales: en, zh-Hant
      var settingsPingInfuraSuccessful: RswiftResources.StringResource { .init(key: "settings.pingInfura.successful", tableName: "Localizable", source: source, developmentValue: "Infura looks OK", comment: nil) }

      /// en translation: Ping Infura
      ///
      /// Key: settings.pingInfura.title
      ///
      /// Locales: en, zh-Hant
      var settingsPingInfuraTitle: RswiftResources.StringResource { .init(key: "settings.pingInfura.title", tableName: "Localizable", source: source, developmentValue: "Ping Infura", comment: nil) }

      /// en translation: Show Tokens on Launch
      ///
      /// Key: settings.preferences.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsPreferencesButtonTitle: RswiftResources.StringResource { .init(key: "settings.preferences.button.title", tableName: "Localizable", source: source, developmentValue: "Show Tokens on Launch", comment: nil) }

      /// en translation: Preferences
      ///
      /// Key: settings.preferences.title
      ///
      /// Locales: en, zh-Hant
      var settingsPreferencesTitle: RswiftResources.StringResource { .init(key: "settings.preferences.title", tableName: "Localizable", source: source, developmentValue: "Preferences", comment: nil) }

      /// en translation: Help
      ///
      /// Key: settings.section.help.title
      ///
      /// Locales: en, zh-Hant
      var settingsSectionHelpTitle: RswiftResources.StringResource { .init(key: "settings.section.help.title", tableName: "Localizable", source: source, developmentValue: "Help", comment: nil) }

      /// en translation: System
      ///
      /// Key: settings.section.system.title
      ///
      /// Locales: en, zh-Hant
      var settingsSectionSystemTitle: RswiftResources.StringResource { .init(key: "settings.section.system.title", tableName: "Localizable", source: source, developmentValue: "System", comment: nil) }

      /// en translation: Wallet
      ///
      /// Key: settings.section.wallet.title
      ///
      /// Locales: en, zh-Hant
      var settingsSectionWalletTitle: RswiftResources.StringResource { .init(key: "settings.section.wallet.title", tableName: "Localizable", source: source, developmentValue: "Wallet", comment: nil) }

      /// en translation: Select Active Networks
      ///
      /// Key: settings.selectActiveNetworks.title
      ///
      /// Locales: en, zh-Hant
      var settingsSelectActiveNetworksTitle: RswiftResources.StringResource { .init(key: "settings.selectActiveNetworks.title", tableName: "Localizable", source: source, developmentValue: "Select Active Networks", comment: nil) }

      /// en translation: Show My Wallet Address
      ///
      /// Key: settings.show.my.wallet.title
      ///
      /// Locales: en, zh-Hant
      var settingsShowMyWalletTitle: RswiftResources.StringResource { .init(key: "settings.show.my.wallet.title", tableName: "Localizable", source: source, developmentValue: "Show My Wallet Address", comment: nil) }

      /// en translation: Show Seed Phrase
      ///
      /// Key: settings.showSeedPhrase.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsShowSeedPhraseButtonTitle: RswiftResources.StringResource { .init(key: "settings.showSeedPhrase.button.title", tableName: "Localizable", source: source, developmentValue: "Show Seed Phrase", comment: nil) }

      /// en translation: Support
      ///
      /// Key: settings.support.title
      ///
      /// Locales: en, zh-Hant
      var settingsSupportTitle: RswiftResources.StringResource { .init(key: "settings.support.title", tableName: "Localizable", source: source, developmentValue: "Support", comment: nil) }

      /// en translation: TokenScript Compatibility
      ///
      /// Key: settings.tokenScriptStandard.title
      ///
      /// Locales: en, zh-Hant
      var settingsTokenScriptStandardTitle: RswiftResources.StringResource { .init(key: "settings.tokenScriptStandard.title", tableName: "Localizable", source: source, developmentValue: "TokenScript Compatibility", comment: nil) }

      /// en translation: My QR code
      ///
      /// Key: settings.userCode
      ///
      /// Locales: en, zh-Hant
      var settingsUserCode: RswiftResources.StringResource { .init(key: "settings.userCode", tableName: "Localizable", source: source, developmentValue: "My QR code", comment: nil) }

      /// en translation: Profile picture
      ///
      /// Key: settings.userIcon
      ///
      /// Locales: en, zh-Hant
      var settingsUserIcon: RswiftResources.StringResource { .init(key: "settings.userIcon", tableName: "Localizable", source: source, developmentValue: "Profile picture", comment: nil) }

      /// en translation: Personal information
      ///
      /// Key: settings.userInfo
      ///
      /// Locales: en, zh-Hant
      var settingsUserInfo: RswiftResources.StringResource { .init(key: "settings.userInfo", tableName: "Localizable", source: source, developmentValue: "Personal information", comment: nil) }

      /// en translation: Modify nickname
      ///
      /// Key: settings.userName
      ///
      /// Locales: en, zh-Hant
      var settingsUserName: RswiftResources.StringResource { .init(key: "settings.userName", tableName: "Localizable", source: source, developmentValue: "Modify nickname", comment: nil) }

      /// en translation: Signature
      ///
      /// Key: settings.userSign
      ///
      /// Locales: en, zh-Hant
      var settingsUserSign: RswiftResources.StringResource { .init(key: "settings.userSign", tableName: "Localizable", source: source, developmentValue: "Signature", comment: nil) }

      /// en translation: About INTO
      ///
      /// Key: settings.version.about
      ///
      /// Locales: en, zh-Hant
      var settingsVersionAbout: RswiftResources.StringResource { .init(key: "settings.version.about", tableName: "Localizable", source: source, developmentValue: "About INTO", comment: nil) }

      /// en translation: Version
      ///
      /// Key: settings.version.label.title
      ///
      /// Locales: en, zh-Hant
      var settingsVersionLabelTitle: RswiftResources.StringResource { .init(key: "settings.version.label.title", tableName: "Localizable", source: source, developmentValue: "Version", comment: nil) }

      /// en translation: User Agreement
      ///
      /// Key: settings.version.protocol
      ///
      /// Locales: en, zh-Hant
      var settingsVersionProtocol: RswiftResources.StringResource { .init(key: "settings.version.protocol", tableName: "Localizable", source: source, developmentValue: "User Agreement", comment: nil) }

      /// en translation: Privacy Policy
      ///
      /// Key: settings.version.securityPrivacy
      ///
      /// Locales: en, zh-Hant
      var settingsVersionSecurityPrivacy: RswiftResources.StringResource { .init(key: "settings.version.securityPrivacy", tableName: "Localizable", source: source, developmentValue: "Privacy Policy", comment: nil) }

      /// en translation: New version update
      ///
      /// Key: settings.version.update
      ///
      /// Locales: en, zh-Hant
      var settingsVersionUpdate: RswiftResources.StringResource { .init(key: "settings.version.update", tableName: "Localizable", source: source, developmentValue: "New version update", comment: nil) }

      /// en translation: Name this Wallet
      ///
      /// Key: settings.wallet.rename
      ///
      /// Locales: en, zh-Hant
      var settingsWalletRename: RswiftResources.StringResource { .init(key: "settings.wallet.rename", tableName: "Localizable", source: source, developmentValue: "Name this Wallet", comment: nil) }

      /// en translation: WalletConnect
      ///
      /// Key: settings.walletConnect.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsWalletConnectButtonTitle: RswiftResources.StringResource { .init(key: "settings.walletConnect.button.title", tableName: "Localizable", source: source, developmentValue: "WalletConnect", comment: nil) }

      /// en translation: Change Wallet
      ///
      /// Key: settings.wallets.button.title
      ///
      /// Locales: en, zh-Hant
      var settingsWalletsButtonTitle: RswiftResources.StringResource { .init(key: "settings.wallets.button.title", tableName: "Localizable", source: source, developmentValue: "Change Wallet", comment: nil) }

      /// en translation: day
      ///
      /// Key: seven
      ///
      /// Locales: en, zh-Hant
      var seven: RswiftResources.StringResource { .init(key: "seven", tableName: "Localizable", source: source, developmentValue: "day", comment: nil) }

      /// en translation: seven
      ///
      /// Key: seven_qi
      ///
      /// Locales: en, zh-Hant
      var seven_qi: RswiftResources.StringResource { .init(key: "seven_qi", tableName: "Localizable", source: source, developmentValue: "seven", comment: nil) }

      /// en translation: seven
      ///
      /// Key: seven_traditional
      ///
      /// Locales: en, zh-Hant
      var seven_traditional: RswiftResources.StringResource { .init(key: "seven_traditional", tableName: "Localizable", source: source, developmentValue: "seven", comment: nil) }

      /// en translation: Share APP
      ///
      /// Key: shareInto
      ///
      /// Locales: en, zh-Hant
      var shareInto: RswiftResources.StringResource { .init(key: "shareInto", tableName: "Localizable", source: source, developmentValue: "Share APP", comment: nil) }

      /// en translation: Please add remarks to your application friends
      ///
      /// Key: share_add_remarks_applation
      ///
      /// Locales: en, zh-Hant
      var share_add_remarks_applation: RswiftResources.StringResource { .init(key: "share_add_remarks_applation", tableName: "Localizable", source: source, developmentValue: "Please add remarks to your application friends", comment: nil) }

      /// en translation: %@ /%@ people are already your friends
      ///
      /// Key: share_agreed_applic
      ///
      /// Locales: en, zh-Hant
      var share_agreed_applic: RswiftResources.StringResource2<String, String> { .init(key: "share_agreed_applic", tableName: "Localizable", source: source, developmentValue: "%@ /%@ people are already your friends", comment: nil) }

      /// en translation: Application results
      ///
      /// Key: share_cation_results
      ///
      /// Locales: en, zh-Hant
      var share_cation_results: RswiftResources.StringResource { .init(key: "share_cation_results", tableName: "Localizable", source: source, developmentValue: "Application results", comment: nil) }

      /// en translation: This user does not exist, please check and re-enter
      ///
      /// Key: share_check_eter
      ///
      /// Locales: en, zh-Hant
      var share_check_eter: RswiftResources.StringResource { .init(key: "share_check_eter", tableName: "Localizable", source: source, developmentValue: "This user does not exist, please check and re-enter", comment: nil) }

      /// en translation: Shared with %@ friends, but sharing failed with the remaining %@ friends
      ///
      /// Key: share_failed_wih
      ///
      /// Locales: en, zh-Hant
      var share_failed_wih: RswiftResources.StringResource2<String, String> { .init(key: "share_failed_wih", tableName: "Localizable", source: source, developmentValue: "Shared with %@ friends, but sharing failed with the remaining %@ friends", comment: nil) }

      /// en translation: One-click application successful! Need to wait for the other party’s consent
      ///
      /// Key: share_friends_apply_suc
      ///
      /// Locales: en, zh-Hant
      var share_friends_apply_suc: RswiftResources.StringResource { .init(key: "share_friends_apply_suc", tableName: "Localizable", source: source, developmentValue: "One-click application successful! Need to wait for the other party’s consent", comment: nil) }

      /// en translation: No sharing record received
      ///
      /// Key: share_friends_empty_receive
      ///
      /// Locales: en, zh-Hant
      var share_friends_empty_receive: RswiftResources.StringResource { .init(key: "share_friends_empty_receive", tableName: "Localizable", source: source, developmentValue: "No sharing record received", comment: nil) }

      /// en translation: No sharing record
      ///
      /// Key: share_friends_empty_share
      ///
      /// Locales: en, zh-Hant
      var share_friends_empty_share: RswiftResources.StringResource { .init(key: "share_friends_empty_share", tableName: "Localizable", source: source, developmentValue: "No sharing record", comment: nil) }

      /// en translation: Ignore
      ///
      /// Key: share_friends_iore
      ///
      /// Locales: en, zh-Hant
      var share_friends_iore: RswiftResources.StringResource { .init(key: "share_friends_iore", tableName: "Localizable", source: source, developmentValue: "Ignore", comment: nil) }

      /// en translation: Ignored
      ///
      /// Key: share_friends_iored
      ///
      /// Locales: en, zh-Hant
      var share_friends_iored: RswiftResources.StringResource { .init(key: "share_friends_iored", tableName: "Localizable", source: source, developmentValue: "Ignored", comment: nil) }

      /// en translation: Search result
      ///
      /// Key: share_friends_item_check_result
      ///
      /// Locales: en, zh-Hant
      var share_friends_item_check_result: RswiftResources.StringResource { .init(key: "share_friends_item_check_result", tableName: "Localizable", source: source, developmentValue: "Search result", comment: nil) }

      /// en translation: One Click application
      ///
      /// Key: share_friends_item_receive_apply
      ///
      /// Locales: en, zh-Hant
      var share_friends_item_receive_apply: RswiftResources.StringResource { .init(key: "share_friends_item_receive_apply", tableName: "Localizable", source: source, developmentValue: "One Click application", comment: nil) }

      /// en translation: %@ friends
      ///
      /// Key: share_friends_item_receive_num
      ///
      /// Locales: en, zh-Hant
      var share_friends_item_receive_num: RswiftResources.StringResource1<String> { .init(key: "share_friends_item_receive_num", tableName: "Localizable", source: source, developmentValue: "%@ friends", comment: nil) }

      /// en translation: He shared with you
      ///
      /// Key: share_friends_item_receive_tip
      ///
      /// Locales: en, zh-Hant
      var share_friends_item_receive_tip: RswiftResources.StringResource { .init(key: "share_friends_item_receive_tip", tableName: "Localizable", source: source, developmentValue: "He shared with you", comment: nil) }

      /// en translation: Shared with %@ friends
      ///
      /// Key: share_friends_item_share_num
      ///
      /// Locales: en, zh-Hant
      var share_friends_item_share_num: RswiftResources.StringResource1<String> { .init(key: "share_friends_item_share_num", tableName: "Localizable", source: source, developmentValue: "Shared with %@ friends", comment: nil) }

      /// en translation: Sharing time: %@
      ///
      /// Key: share_friends_item_share_time
      ///
      /// Locales: en, zh-Hant
      var share_friends_item_share_time: RswiftResources.StringResource1<String> { .init(key: "share_friends_item_share_time", tableName: "Localizable", source: source, developmentValue: "Sharing time: %@", comment: nil) }

      /// en translation: Share user
      ///
      /// Key: share_friends_item_user_title
      ///
      /// Locales: en, zh-Hant
      var share_friends_item_user_title: RswiftResources.StringResource { .init(key: "share_friends_item_user_title", tableName: "Localizable", source: source, developmentValue: "Share user", comment: nil) }

      /// en translation: The group has reached maximum capacity
      ///
      /// Key: share_friends_mamum_city
      ///
      /// Locales: en, zh-Hant
      var share_friends_mamum_city: RswiftResources.StringResource { .init(key: "share_friends_mamum_city", tableName: "Localizable", source: source, developmentValue: "The group has reached maximum capacity", comment: nil) }

      /// en translation: My reception
      ///
      /// Key: share_friends_my_receive
      ///
      /// Locales: en, zh-Hant
      var share_friends_my_receive: RswiftResources.StringResource { .init(key: "share_friends_my_receive", tableName: "Localizable", source: source, developmentValue: "My reception", comment: nil) }

      /// en translation: My share
      ///
      /// Key: share_friends_my_share
      ///
      /// Locales: en, zh-Hant
      var share_friends_my_share: RswiftResources.StringResource { .init(key: "share_friends_my_share", tableName: "Localizable", source: source, developmentValue: "My share", comment: nil) }

      /// en translation: Payment failed
      ///
      /// Key: share_friends_pay_fail
      ///
      /// Locales: en, zh-Hant
      var share_friends_pay_fail: RswiftResources.StringResource { .init(key: "share_friends_pay_fail", tableName: "Localizable", source: source, developmentValue: "Payment failed", comment: nil) }

      /// en translation: The order has been paid and no payment is required again
      ///
      /// Key: share_friends_payed
      ///
      /// Locales: en, zh-Hant
      var share_friends_payed: RswiftResources.StringResource { .init(key: "share_friends_payed", tableName: "Localizable", source: source, developmentValue: "The order has been paid and no payment is required again", comment: nil) }

      /// en translation: Paying
      ///
      /// Key: share_friends_paying
      ///
      /// Locales: en, zh-Hant
      var share_friends_paying: RswiftResources.StringResource { .init(key: "share_friends_paying", tableName: "Localizable", source: source, developmentValue: "Paying", comment: nil) }

      /// en translation: Sharing failed!
      ///
      /// Key: share_friends_popup_share_fail
      ///
      /// Locales: en, zh-Hant
      var share_friends_popup_share_fail: RswiftResources.StringResource { .init(key: "share_friends_popup_share_fail", tableName: "Localizable", source: source, developmentValue: "Sharing failed!", comment: nil) }

      /// en translation: Share success!
      ///
      /// Key: share_friends_popup_share_suc
      ///
      /// Locales: en, zh-Hant
      var share_friends_popup_share_suc: RswiftResources.StringResource { .init(key: "share_friends_popup_share_suc", tableName: "Localizable", source: source, developmentValue: "Share success!", comment: nil) }

      /// en translation: You have successfully shared your contacts friends with %@
      ///
      /// Key: share_friends_popup_suc
      ///
      /// Locales: en, zh-Hant
      var share_friends_popup_suc: RswiftResources.StringResource1<String> { .init(key: "share_friends_popup_suc", tableName: "Localizable", source: source, developmentValue: "You have successfully shared your contacts friends with %@", comment: nil) }

      /// en translation: Tip: You can click One-Click application to add everyone as a friend
      ///
      /// Key: share_friends_receive_toast
      ///
      /// Locales: en, zh-Hant
      var share_friends_receive_toast: RswiftResources.StringResource { .init(key: "share_friends_receive_toast", tableName: "Localizable", source: source, developmentValue: "Tip: You can click One-Click application to add everyone as a friend", comment: nil) }

      /// en translation: Share
      ///
      /// Key: share_friends_share
      ///
      /// Locales: en, zh-Hant
      var share_friends_share: RswiftResources.StringResource { .init(key: "share_friends_share", tableName: "Localizable", source: source, developmentValue: "Share", comment: nil) }

      /// en translation: Pay fees
      ///
      /// Key: share_pay_fees
      ///
      /// Locales: en, zh-Hant
      var share_pay_fees: RswiftResources.StringResource { .init(key: "share_pay_fees", tableName: "Localizable", source: source, developmentValue: "Pay fees", comment: nil) }

      /// en translation: You are sharing with all your contacts friends
      ///
      /// Key: share_pay_popup_sub_title
      ///
      /// Locales: en, zh-Hant
      var share_pay_popup_sub_title: RswiftResources.StringResource { .init(key: "share_pay_popup_sub_title", tableName: "Localizable", source: source, developmentValue: "You are sharing with all your contacts friends", comment: nil) }

      /// en translation: Confirm payment
      ///
      /// Key: share_pay_popup_title
      ///
      /// Locales: en, zh-Hant
      var share_pay_popup_title: RswiftResources.StringResource { .init(key: "share_pay_popup_title", tableName: "Localizable", source: source, developmentValue: "Confirm payment", comment: nil) }

      /// en translation: Application remarks
      ///
      /// Key: share_rarks
      ///
      /// Locales: en, zh-Hant
      var share_rarks: RswiftResources.StringResource { .init(key: "share_rarks", tableName: "Localizable", source: source, developmentValue: "Application remarks", comment: nil) }

      /// en translation: INID of the user receiving the share
      ///
      /// Key: share_receive_user_id_title
      ///
      /// Locales: en, zh-Hant
      var share_receive_user_id_title: RswiftResources.StringResource { .init(key: "share_receive_user_id_title", tableName: "Localizable", source: source, developmentValue: "INID of the user receiving the share", comment: nil) }

      /// en translation: Share
      ///
      /// Key: share_title
      ///
      /// Locales: en, zh-Hant
      var share_title: RswiftResources.StringResource { .init(key: "share_title", tableName: "Localizable", source: source, developmentValue: "Share", comment: nil) }

      /// en translation: Synchronize friends
      ///
      /// Key: share_ynchronize
      ///
      /// Locales: en, zh-Hant
      var share_ynchronize: RswiftResources.StringResource { .init(key: "share_ynchronize", tableName: "Localizable", source: source, developmentValue: "Synchronize friends", comment: nil) }

      /// en translation: Shared files
      ///
      /// Key: sharedFile
      ///
      /// Locales: en, zh-Hant
      var sharedFile: RswiftResources.StringResource { .init(key: "sharedFile", tableName: "Localizable", source: source, developmentValue: "Shared files", comment: nil) }

      /// en translation: Start your INTO journey
      ///
      /// Key: sharedFileEmptyInbox.text
      ///
      /// Locales: en, zh-Hant
      var sharedFileEmptyInboxText: RswiftResources.StringResource { .init(key: "sharedFileEmptyInbox.text", tableName: "Localizable", source: source, developmentValue: "Start your INTO journey", comment: nil) }

      /// en translation: Scan QR code to download
      ///
      /// Key: sharedownload
      ///
      /// Locales: en, zh-Hant
      var sharedownload: RswiftResources.StringResource { .init(key: "sharedownload", tableName: "Localizable", source: source, developmentValue: "Scan QR code to download", comment: nil) }

      /// en translation: Share Failure
      ///
      /// Key: sharefailed
      ///
      /// Locales: en, zh-Hant
      var sharefailed: RswiftResources.StringResource { .init(key: "sharefailed", tableName: "Localizable", source: source, developmentValue: "Share Failure", comment: nil) }

      /// en translation: Share Success
      ///
      /// Key: sharesuccess
      ///
      /// Locales: en, zh-Hant
      var sharesuccess: RswiftResources.StringResource { .init(key: "sharesuccess", tableName: "Localizable", source: source, developmentValue: "Share Success", comment: nil) }

      /// en translation: ten
      ///
      /// Key: shi
      ///
      /// Locales: en, zh-Hant
      var shi: RswiftResources.StringResource { .init(key: "shi", tableName: "Localizable", source: source, developmentValue: "ten", comment: nil) }

      /// en translation: ten
      ///
      /// Key: shi_traditional
      ///
      /// Locales: en, zh-Hant
      var shi_traditional: RswiftResources.StringResource { .init(key: "shi_traditional", tableName: "Localizable", source: source, developmentValue: "ten", comment: nil) }

      /// en translation: Click to display the private key QR code
      ///
      /// Key: show.privatekey.qrcode
      ///
      /// Locales: en, zh-Hant
      var showPrivatekeyQrcode: RswiftResources.StringResource { .init(key: "show.privatekey.qrcode", tableName: "Localizable", source: source, developmentValue: "Click to display the private key QR code", comment: nil) }

      /// en translation: Show input status
      ///
      /// Key: showInputTip
      ///
      /// Locales: en, zh-Hant
      var showInputTip: RswiftResources.StringResource { .init(key: "showInputTip", tableName: "Localizable", source: source, developmentValue: "Show input status", comment: nil) }

      /// en translation: Show message details
      ///
      /// Key: showMsgInfo
      ///
      /// Locales: en, zh-Hant
      var showMsgInfo: RswiftResources.StringResource { .init(key: "showMsgInfo", tableName: "Localizable", source: source, developmentValue: "Show message details", comment: nil) }

      /// en translation: Show wallet address
      ///
      /// Key: show_wallet_address
      ///
      /// Locales: en, zh-Hant
      var show_wallet_address: RswiftResources.StringResource { .init(key: "show_wallet_address", tableName: "Localizable", source: source, developmentValue: "Show wallet address", comment: nil) }

      /// en translation: Message
      ///
      /// Key: signature.confirmation.message.title
      ///
      /// Locales: en, zh-Hant
      var signatureConfirmationMessageTitle: RswiftResources.StringResource { .init(key: "signature.confirmation.message.title", tableName: "Localizable", source: source, developmentValue: "Message", comment: nil) }

      /// en translation: Personal message
      ///
      /// Key: signature.confirmation.personalmessage.title
      ///
      /// Locales: en, zh-Hant
      var signatureConfirmationPersonalmessageTitle: RswiftResources.StringResource { .init(key: "signature.confirmation.personalmessage.title", tableName: "Localizable", source: source, developmentValue: "Personal message", comment: nil) }

      /// en translation: Signature Request
      ///
      /// Key: signature.confirmation.title
      ///
      /// Locales: en, zh-Hant
      var signatureConfirmationTitle: RswiftResources.StringResource { .init(key: "signature.confirmation.title", tableName: "Localizable", source: source, developmentValue: "Signature Request", comment: nil) }

      /// en translation: SBT Certification Medal
      ///
      /// Key: single.medal
      ///
      /// Locales: en, zh-Hant
      var singleMedal: RswiftResources.StringResource { .init(key: "single.medal", tableName: "Localizable", source: source, developmentValue: "SBT Certification Medal", comment: nil) }

      /// en translation: six
      ///
      /// Key: six
      ///
      /// Locales: en, zh-Hant
      var six: RswiftResources.StringResource { .init(key: "six", tableName: "Localizable", source: source, developmentValue: "six", comment: nil) }

      /// en translation: Land
      ///
      /// Key: six_traditional
      ///
      /// Locales: en, zh-Hant
      var six_traditional: RswiftResources.StringResource { .init(key: "six_traditional", tableName: "Localizable", source: source, developmentValue: "Land", comment: nil) }

      /// en translation: When location services are enabled, you can participate in INTOverse city nodes to receive more TOX ecosystem benefits
      ///
      /// Key: sociaMining_enabling_INToverse
      ///
      /// Locales: en, zh-Hant
      var sociaMining_enabling_INToverse: RswiftResources.StringResource { .init(key: "sociaMining_enabling_INToverse", tableName: "Localizable", source: source, developmentValue: "When location services are enabled, you can participate in INTOverse city nodes to receive more TOX ecosystem benefits", comment: nil) }

      /// en translation: Please upload and register your location to the blockchain.
      ///
      /// Key: sociaMining_location_chain
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_chain: RswiftResources.StringResource { .init(key: "sociaMining_location_chain", tableName: "Localizable", source: source, developmentValue: "Please upload and register your location to the blockchain.", comment: nil) }

      /// en translation: Location Failure
      ///
      /// Key: sociaMining_location_failed_positioning
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_failed_positioning: RswiftResources.StringResource { .init(key: "sociaMining_location_failed_positioning", tableName: "Localizable", source: source, developmentValue: "Location Failure", comment: nil) }

      /// en translation: Show Your Location
      ///
      /// Key: sociaMining_location_go
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_go: RswiftResources.StringResource { .init(key: "sociaMining_location_go", tableName: "Localizable", source: source, developmentValue: "Show Your Location", comment: nil) }

      /// en translation: Detected network abnormality, please check and try again later
      ///
      /// Key: sociaMining_location_network
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_network: RswiftResources.StringResource { .init(key: "sociaMining_location_network", tableName: "Localizable", source: source, developmentValue: "Detected network abnormality, please check and try again later", comment: nil) }

      /// en translation: Not located
      ///
      /// Key: sociaMining_location_not_located
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_not_located: RswiftResources.StringResource { .init(key: "sociaMining_location_not_located", tableName: "Localizable", source: source, developmentValue: "Not located", comment: nil) }

      /// en translation: System location has not been enabled. Please go to "Settings - Privacy" to manually enable it
      ///
      /// Key: sociaMining_location_open_manually
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_open_manually: RswiftResources.StringResource { .init(key: "sociaMining_location_open_manually", tableName: "Localizable", source: source, developmentValue: "System location has not been enabled. Please go to \"Settings - Privacy\" to manually enable it", comment: nil) }

      /// en translation: Before Participating in City Nodes, Please Enable Location Service
      ///
      /// Key: sociaMining_location_participating
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_participating: RswiftResources.StringResource { .init(key: "sociaMining_location_participating", tableName: "Localizable", source: source, developmentValue: "Before Participating in City Nodes, Please Enable Location Service", comment: nil) }

      /// en translation: Please Enable Location Service 
      ///
      /// Key: sociaMining_location_positioning
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_positioning: RswiftResources.StringResource { .init(key: "sociaMining_location_positioning", tableName: "Localizable", source: source, developmentValue: "Please Enable Location Service ", comment: nil) }

      /// en translation: Relocation
      ///
      /// Key: sociaMining_location_re_locate
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_re_locate: RswiftResources.StringResource { .init(key: "sociaMining_location_re_locate", tableName: "Localizable", source: source, developmentValue: "Relocation", comment: nil) }

      /// en translation: City Nodes will be opening soon. Please stay tuned
      ///
      /// Key: sociaMining_location_stay_tuned
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_stay_tuned: RswiftResources.StringResource { .init(key: "sociaMining_location_stay_tuned", tableName: "Localizable", source: source, developmentValue: "City Nodes will be opening soon. Please stay tuned", comment: nil) }

      /// en translation: Location Set Successfully 
      ///
      /// Key: sociaMining_location_successful_positioning
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_successful_positioning: RswiftResources.StringResource { .init(key: "sociaMining_location_successful_positioning", tableName: "Localizable", source: source, developmentValue: "Location Set Successfully ", comment: nil) }

      /// en translation: Uploaded to the chain
      ///
      /// Key: sociaMining_location_upload_chain
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_upload_chain: RswiftResources.StringResource { .init(key: "sociaMining_location_upload_chain", tableName: "Localizable", source: source, developmentValue: "Uploaded to the chain", comment: nil) }

      /// en translation: Uploaded and bound successfully
      ///
      /// Key: sociaMining_location_upload_successfully
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_upload_successfully: RswiftResources.StringResource { .init(key: "sociaMining_location_upload_successfully", tableName: "Localizable", source: source, developmentValue: "Uploaded and bound successfully", comment: nil) }

      /// en translation: A wallet can only be bound once, and cannot be changed afterwards. Once users complete the on-chain operation, they can use the City Node function normally
      ///
      /// Key: sociaMining_location_used_normally
      ///
      /// Locales: en, zh-Hant
      var sociaMining_location_used_normally: RswiftResources.StringResource { .init(key: "sociaMining_location_used_normally", tableName: "Localizable", source: source, developmentValue: "A wallet can only be bound once, and cannot be changed afterwards. Once users complete the on-chain operation, they can use the City Node function normally", comment: nil) }

      /// en translation: Not positioning temporarily
      ///
      /// Key: sociaMining_positioned_yet
      ///
      /// Locales: en, zh-Hant
      var sociaMining_positioned_yet: RswiftResources.StringResource { .init(key: "sociaMining_positioned_yet", tableName: "Localizable", source: source, developmentValue: "Not positioning temporarily", comment: nil) }

      /// en translation: Start locating
      ///
      /// Key: sociaMining_start_positioning
      ///
      /// Locales: en, zh-Hant
      var sociaMining_start_positioning: RswiftResources.StringResource { .init(key: "sociaMining_start_positioning", tableName: "Localizable", source: source, developmentValue: "Start locating", comment: nil) }

      /// en translation: Credit Contract
      ///
      /// Key: social_credit_contract
      ///
      /// Locales: en, zh-Hant
      var social_credit_contract: RswiftResources.StringResource { .init(key: "social_credit_contract", tableName: "Localizable", source: source, developmentValue: "Credit Contract", comment: nil) }

      /// en translation: Currently, urban pioneers can exclusively enjoy the distribution of 5% of the social funds of the entire network, and can receive dividend rewards from the second day they become a pioneer.
      ///
      /// Key: social_fund_content
      ///
      /// Locales: en, zh-Hant
      var social_fund_content: RswiftResources.StringResource { .init(key: "social_fund_content", tableName: "Localizable", source: source, developmentValue: "Currently, urban pioneers can exclusively enjoy the distribution of 5% of the social funds of the entire network, and can receive dividend rewards from the second day they become a pioneer.", comment: nil) }

      /// en translation: Social fund reward description：
      ///
      /// Key: social_fund_description
      ///
      /// Locales: en, zh-Hant
      var social_fund_description: RswiftResources.StringResource { .init(key: "social_fund_description", tableName: "Localizable", source: source, developmentValue: "Social fund reward description：", comment: nil) }

      /// en translation: First month
      ///
      /// Key: social_month_ratio_first
      ///
      /// Locales: en, zh-Hant
      var social_month_ratio_first: RswiftResources.StringResource { .init(key: "social_month_ratio_first", tableName: "Localizable", source: source, developmentValue: "First month", comment: nil) }

      /// en translation: Achieved in the first month: %@
      ///
      /// Key: social_month_ratio_first_amount
      ///
      /// Locales: en, zh-Hant
      var social_month_ratio_first_amount: RswiftResources.StringResource1<String> { .init(key: "social_month_ratio_first_amount", tableName: "Localizable", source: source, developmentValue: "Achieved in the first month: %@", comment: nil) }

      /// en translation: Second month
      ///
      /// Key: social_month_ratio_two
      ///
      /// Locales: en, zh-Hant
      var social_month_ratio_two: RswiftResources.StringResource { .init(key: "social_month_ratio_two", tableName: "Localizable", source: source, developmentValue: "Second month", comment: nil) }

      /// en translation: Achieved in the second month: %@
      ///
      /// Key: social_month_ratio_two_amount
      ///
      /// Locales: en, zh-Hant
      var social_month_ratio_two_amount: RswiftResources.StringResource1<String> { .init(key: "social_month_ratio_two_amount", tableName: "Localizable", source: source, developmentValue: "Achieved in the second month: %@", comment: nil) }

      /// en translation: Currently, city pioneers can exclusively enjoy 1% of the total newly pledged amount in the city. The calculation will start after paying the deposit, and the dividend rewards can be collected on the second day.
      ///
      /// Key: social_node_content
      ///
      /// Locales: en, zh-Hant
      var social_node_content: RswiftResources.StringResource { .init(key: "social_node_content", tableName: "Localizable", source: source, developmentValue: "Currently, city pioneers can exclusively enjoy 1% of the total newly pledged amount in the city. The calculation will start after paying the deposit, and the dividend rewards can be collected on the second day.", comment: nil) }

      /// en translation: Social node reward description：
      ///
      /// Key: social_node_description
      ///
      /// Locales: en, zh-Hant
      var social_node_description: RswiftResources.StringResource { .init(key: "social_node_description", tableName: "Localizable", source: source, developmentValue: "Social node reward description：", comment: nil) }

      /// en translation: After participating in the social node, you can click "Social Mining" every day to earn today's income
      ///
      /// Key: social_node_income
      ///
      /// Locales: en, zh-Hant
      var social_node_income: RswiftResources.StringResource { .init(key: "social_node_income", tableName: "Localizable", source: source, developmentValue: "After participating in the social node, you can click \"Social Mining\" every day to earn today's income", comment: nil) }

      /// en translation: Node principal
      ///
      /// Key: social_node_principal
      ///
      /// Locales: en, zh-Hant
      var social_node_principal: RswiftResources.StringResource { .init(key: "social_node_principal", tableName: "Localizable", source: source, developmentValue: "Node principal", comment: nil) }

      /// en translation: A total of 9 social nodes, the monthly rate of return can reach up to 35%, participate to earn more income!
      ///
      /// Key: social_nodes_reach_income
      ///
      /// Locales: en, zh-Hant
      var social_nodes_reach_income: RswiftResources.StringResource { .init(key: "social_nodes_reach_income", tableName: "Localizable", source: source, developmentValue: "A total of 9 social nodes, the monthly rate of return can reach up to 35%, participate to earn more income!", comment: nil) }

      /// en translation: Temporarily not positioned
      ///
      /// Key: social_not_positioned_yet
      ///
      /// Locales: en, zh-Hant
      var social_not_positioned_yet: RswiftResources.StringResource { .init(key: "social_not_positioned_yet", tableName: "Localizable", source: source, developmentValue: "Temporarily not positioned", comment: nil) }

      /// en translation: Turn off positioning
      ///
      /// Key: social_turn_off_targeting
      ///
      /// Locales: en, zh-Hant
      var social_turn_off_targeting: RswiftResources.StringResource { .init(key: "social_turn_off_targeting", tableName: "Localizable", source: source, developmentValue: "Turn off positioning", comment: nil) }

      /// en translation: After turning off positioning, it cannot be turned on again
      ///
      /// Key: social_turned_off
      ///
      /// Locales: en, zh-Hant
      var social_turned_off: RswiftResources.StringResource { .init(key: "social_turned_off", tableName: "Localizable", source: source, developmentValue: "After turning off positioning, it cannot be turned on again", comment: nil) }

      /// en translation: Social Rewards
      ///
      /// Key: socialreward
      ///
      /// Locales: en, zh-Hant
      var socialreward: RswiftResources.StringResource { .init(key: "socialreward", tableName: "Localizable", source: source, developmentValue: "Social Rewards", comment: nil) }

      /// en translation: Social Team Contribution
      ///
      /// Key: socialteamcontribution
      ///
      /// Locales: en, zh-Hant
      var socialteamcontribution: RswiftResources.StringResource { .init(key: "socialteamcontribution", tableName: "Localizable", source: source, developmentValue: "Social Team Contribution", comment: nil) }

      /// en translation: Message Order
      ///
      /// Key: sort
      ///
      /// Locales: en, zh-Hant
      var sort: RswiftResources.StringResource { .init(key: "sort", tableName: "Localizable", source: source, developmentValue: "Message Order", comment: nil) }

      /// en translation: Most Used
      ///
      /// Key: sortTokens.param.mostUsed
      ///
      /// Locales: en, zh-Hant
      var sortTokensParamMostUsed: RswiftResources.StringResource { .init(key: "sortTokens.param.mostUsed", tableName: "Localizable", source: source, developmentValue: "Most Used", comment: nil) }

      /// en translation: Name: Ascending
      ///
      /// Key: sortTokens.param.nameAscending
      ///
      /// Locales: en, zh-Hant
      var sortTokensParamNameAscending: RswiftResources.StringResource { .init(key: "sortTokens.param.nameAscending", tableName: "Localizable", source: source, developmentValue: "Name: Ascending", comment: nil) }

      /// en translation: Name: Descending
      ///
      /// Key: sortTokens.param.nameDescending
      ///
      /// Locales: en, zh-Hant
      var sortTokensParamNameDescending: RswiftResources.StringResource { .init(key: "sortTokens.param.nameDescending", tableName: "Localizable", source: source, developmentValue: "Name: Descending", comment: nil) }

      /// en translation: Value: Ascending
      ///
      /// Key: sortTokens.param.valueAscending
      ///
      /// Locales: en, zh-Hant
      var sortTokensParamValueAscending: RswiftResources.StringResource { .init(key: "sortTokens.param.valueAscending", tableName: "Localizable", source: source, developmentValue: "Value: Ascending", comment: nil) }

      /// en translation: Value: Descending
      ///
      /// Key: sortTokens.param.valueDescending
      ///
      /// Locales: en, zh-Hant
      var sortTokensParamValueDescending: RswiftResources.StringResource { .init(key: "sortTokens.param.valueDescending", tableName: "Localizable", source: source, developmentValue: "Value: Descending", comment: nil) }

      /// en translation: Sort: By %@
      ///
      /// Key: sortTokens.sortBy
      ///
      /// Locales: en, zh-Hant
      var sortTokensSortBy: RswiftResources.StringResource1<String> { .init(key: "sortTokens.sortBy", tableName: "Localizable", source: source, developmentValue: "Sort: By %@", comment: nil) }

      /// en translation: Voice too short
      ///
      /// Key: speechtooshort
      ///
      /// Locales: en, zh-Hant
      var speechtooshort: RswiftResources.StringResource { .init(key: "speechtooshort", tableName: "Localizable", source: source, developmentValue: "Voice too short", comment: nil) }

      /// en translation: You can learn the operation guide of INTO through the assistant
      ///
      /// Key: stady_controls
      ///
      /// Locales: en, zh-Hant
      var stady_controls: RswiftResources.StringResource { .init(key: "stady_controls", tableName: "Localizable", source: source, developmentValue: "You can learn the operation guide of INTO through the assistant", comment: nil) }

      /// en translation: Social Node
      ///
      /// Key: stake.miner
      ///
      /// Locales: en, zh-Hant
      var stakeMiner: RswiftResources.StringResource { .init(key: "stake.miner", tableName: "Localizable", source: source, developmentValue: "Social Node", comment: nil) }

      /// en translation: Benefits packages sent by INTO, such as star rewards, do not count towards the number of holdings
      ///
      /// Key: staking_start_popup_desc
      ///
      /// Locales: en, zh-Hant
      var staking_start_popup_desc: RswiftResources.StringResource { .init(key: "staking_start_popup_desc", tableName: "Localizable", source: source, developmentValue: "Benefits packages sent by INTO, such as star rewards, do not count towards the number of holdings", comment: nil) }

      /// en translation: Number of holdings description：
      ///
      /// Key: staking_start_popup_title
      ///
      /// Locales: en, zh-Hant
      var staking_start_popup_title: RswiftResources.StringResource { .init(key: "staking_start_popup_title", tableName: "Localizable", source: source, developmentValue: "Number of holdings description：", comment: nil) }

      /// en translation: Star rating
      ///
      /// Key: starlevel
      ///
      /// Locales: en, zh-Hant
      var starlevel: RswiftResources.StringResource { .init(key: "starlevel", tableName: "Localizable", source: source, developmentValue: "Star rating", comment: nil) }

      /// en translation: Star grade details
      ///
      /// Key: starleveldetail
      ///
      /// Locales: en, zh-Hant
      var starleveldetail: RswiftResources.StringResource { .init(key: "starleveldetail", tableName: "Localizable", source: source, developmentValue: "Star grade details", comment: nil) }

      /// en translation: Start meeting
      ///
      /// Key: start Comminucation
      ///
      /// Locales: en, zh-Hant
      var startComminucation: RswiftResources.StringResource { .init(key: "start Comminucation", tableName: "Localizable", source: source, developmentValue: "Start meeting", comment: nil) }

      /// en translation: Celestial Alliance
      ///
      /// Key: start.plan
      ///
      /// Locales: en, zh-Hant
      var startPlan: RswiftResources.StringResource { .init(key: "start.plan", tableName: "Localizable", source: source, developmentValue: "Celestial Alliance", comment: nil) }

      /// en translation: Start rebroadcasting
      ///
      /// Key: startBroadcast
      ///
      /// Locales: en, zh-Hant
      var startBroadcast: RswiftResources.StringResource { .init(key: "startBroadcast", tableName: "Localizable", source: source, developmentValue: "Start rebroadcasting", comment: nil) }

      /// en translation: Start experiencing
      ///
      /// Key: startexperience
      ///
      /// Locales: en, zh-Hant
      var startexperience: RswiftResources.StringResource { .init(key: "startexperience", tableName: "Localizable", source: source, developmentValue: "Start experiencing", comment: nil) }

      /// en translation: Stay tuned!
      ///
      /// Key: staytuned
      ///
      /// Locales: en, zh-Hant
      var staytuned: RswiftResources.StringResource { .init(key: "staytuned", tableName: "Localizable", source: source, developmentValue: "Stay tuned!", comment: nil) }

      /// en translation: Stop rebroadcasting
      ///
      /// Key: stopBroadcast
      ///
      /// Locales: en, zh-Hant
      var stopBroadcast: RswiftResources.StringResource { .init(key: "stopBroadcast", tableName: "Localizable", source: source, developmentValue: "Stop rebroadcasting", comment: nil) }

      /// en translation: Name
      ///
      /// Key: subject
      ///
      /// Locales: en, zh-Hant
      var subject: RswiftResources.StringResource { .init(key: "subject", tableName: "Localizable", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: Sunday
      ///
      /// Key: sunday
      ///
      /// Locales: en, zh-Hant
      var sunday: RswiftResources.StringResource { .init(key: "sunday", tableName: "Localizable", source: source, developmentValue: "Sunday", comment: nil) }

      /// en translation: Use the higher level medal for certification
      ///
      /// Key: super.medal.token.auth
      ///
      /// Locales: en, zh-Hant
      var superMedalTokenAuth: RswiftResources.StringResource { .init(key: "super.medal.token.auth", tableName: "Localizable", source: source, developmentValue: "Use the higher level medal for certification", comment: nil) }

      /// en translation: Blog
      ///
      /// Key: support.blog.title
      ///
      /// Locales: en, zh-Hant
      var supportBlogTitle: RswiftResources.StringResource { .init(key: "support.blog.title", tableName: "Localizable", source: source, developmentValue: "Blog", comment: nil) }

      /// en translation: Email
      ///
      /// Key: support.email.title
      ///
      /// Locales: en, zh-Hant
      var supportEmailTitle: RswiftResources.StringResource { .init(key: "support.email.title", tableName: "Localizable", source: source, developmentValue: "Email", comment: nil) }

      /// en translation: Currently this function only supports Match chain, please switch and try again.
      ///
      /// Key: supports_switch_y_ain
      ///
      /// Locales: en, zh-Hant
      var supports_switch_y_ain: RswiftResources.StringResource { .init(key: "supports_switch_y_ain", tableName: "Localizable", source: source, developmentValue: "Currently this function only supports Match chain, please switch and try again.", comment: nil) }

      /// en translation: Support
      ///
      /// Key: suppport.title
      ///
      /// Locales: en, zh-Hant
      var suppportTitle: RswiftResources.StringResource { .init(key: "suppport.title", tableName: "Localizable", source: source, developmentValue: "Support", comment: nil) }

      /// en translation: Confirm exchange
      ///
      /// Key: sureexchange
      ///
      /// Locales: en, zh-Hant
      var sureexchange: RswiftResources.StringResource { .init(key: "sureexchange", tableName: "Localizable", source: source, developmentValue: "Confirm exchange", comment: nil) }

      /// en translation: Confirm transfer
      ///
      /// Key: suretransfer
      ///
      /// Locales: en, zh-Hant
      var suretransfer: RswiftResources.StringResource { .init(key: "suretransfer", tableName: "Localizable", source: source, developmentValue: "Confirm transfer", comment: nil) }

      /// en translation: Invalid chain ID provided: %@
      ///
      /// Key: switchChain.error.invalidChainId
      ///
      /// Locales: en, zh-Hant
      var switchChainErrorInvalidChainId: RswiftResources.StringResource1<String> { .init(key: "switchChain.error.invalidChainId", tableName: "Localizable", source: source, developmentValue: "Invalid chain ID provided: %@", comment: nil) }

      /// en translation: Chain ID is not supported: %@
      ///
      /// Key: switchChain.error.notSupportedChainId
      ///
      /// Locales: en, zh-Hant
      var switchChainErrorNotSupportedChainId: RswiftResources.StringResource1<String> { .init(key: "switchChain.error.notSupportedChainId", tableName: "Localizable", source: source, developmentValue: "Chain ID is not supported: %@", comment: nil) }

      /// en translation: Add, Switch & Reload %@
      ///
      /// Key: switchChainRequest.action.addSwitchReload
      ///
      /// Locales: en, zh-Hant
      var switchChainRequestActionAddSwitchReload: RswiftResources.StringResource1<String> { .init(key: "switchChainRequest.action.addSwitchReload", tableName: "Localizable", source: source, developmentValue: "Add, Switch & Reload %@", comment: nil) }

      /// en translation: Enable, Switch & Reload
      ///
      /// Key: switchChainRequest.action.enableSwitchReload
      ///
      /// Locales: en, zh-Hant
      var switchChainRequestActionEnableSwitchReload: RswiftResources.StringResource { .init(key: "switchChainRequest.action.enableSwitchReload", tableName: "Localizable", source: source, developmentValue: "Enable, Switch & Reload", comment: nil) }

      /// en translation: Switch & Reload
      ///
      /// Key: switchChainRequest.action.switchReload
      ///
      /// Locales: en, zh-Hant
      var switchChainRequestActionSwitchReload: RswiftResources.StringResource { .init(key: "switchChainRequest.action.switchReload", tableName: "Localizable", source: source, developmentValue: "Switch & Reload", comment: nil) }

      /// en translation: Switch Chain Request
      ///
      /// Key: switchChainRequest.title
      ///
      /// Locales: en, zh-Hant
      var switchChainRequestTitle: RswiftResources.StringResource { .init(key: "switchChainRequest.title", tableName: "Localizable", source: source, developmentValue: "Switch Chain Request", comment: nil) }

      /// en translation: Switch Account
      ///
      /// Key: switch_account
      ///
      /// Locales: en, zh-Hant
      var switch_account: RswiftResources.StringResource { .init(key: "switch_account", tableName: "Localizable", source: source, developmentValue: "Switch Account", comment: nil) }

      /// en translation: Contacts sync
      ///
      /// Key: sync_friends
      ///
      /// Locales: en, zh-Hant
      var sync_friends: RswiftResources.StringResource { .init(key: "sync_friends", tableName: "Localizable", source: source, developmentValue: "Contacts sync", comment: nil) }

      /// en translation: System notification
      ///
      /// Key: systemNotice
      ///
      /// Locales: en, zh-Hant
      var systemNotice: RswiftResources.StringResource { .init(key: "systemNotice", tableName: "Localizable", source: source, developmentValue: "System notification", comment: nil) }

      /// en translation: System issued
      ///
      /// Key: system_send
      ///
      /// Locales: en, zh-Hant
      var system_send: RswiftResources.StringResource { .init(key: "system_send", tableName: "Localizable", source: source, developmentValue: "System issued", comment: nil) }

      /// en translation: The %@th assessment
      ///
      /// Key: task_check
      ///
      /// Locales: en, zh-Hant
      var task_check: RswiftResources.StringResource1<String> { .init(key: "task_check", tableName: "Localizable", source: source, developmentValue: "The %@th assessment", comment: nil) }

      /// en translation: Already participated
      ///
      /// Key: team.already.earn
      ///
      /// Locales: en, zh-Hant
      var teamAlreadyEarn: RswiftResources.StringResource { .init(key: "team.already.earn", tableName: "Localizable", source: source, developmentValue: "Already participated", comment: nil) }

      /// en translation: Completed
      ///
      /// Key: team.finished
      ///
      /// Locales: en, zh-Hant
      var teamFinished: RswiftResources.StringResource { .init(key: "team.finished", tableName: "Localizable", source: source, developmentValue: "Completed", comment: nil) }

      /// en translation: Member Details
      ///
      /// Key: team.member.title
      ///
      /// Locales: en, zh-Hant
      var teamMemberTitle: RswiftResources.StringResource { .init(key: "team.member.title", tableName: "Localizable", source: source, developmentValue: "Member Details", comment: nil) }

      /// en translation: Have not participated
      ///
      /// Key: team.unearn
      ///
      /// Locales: en, zh-Hant
      var teamUnearn: RswiftResources.StringResource { .init(key: "team.unearn", tableName: "Localizable", source: source, developmentValue: "Have not participated", comment: nil) }

      /// en translation: Incomplete
      ///
      /// Key: team.unfinished
      ///
      /// Locales: en, zh-Hant
      var teamUnfinished: RswiftResources.StringResource { .init(key: "team.unfinished", tableName: "Localizable", source: source, developmentValue: "Incomplete", comment: nil) }

      /// en translation: %@ social weight
      ///
      /// Key: team.weight.formate
      ///
      /// Locales: en, zh-Hant
      var teamWeightFormate: RswiftResources.StringResource1<String> { .init(key: "team.weight.formate", tableName: "Localizable", source: source, developmentValue: "%@ social weight", comment: nil) }

      /// en translation: social weight
      ///
      /// Key: team.weight.formate.title
      ///
      /// Locales: en, zh-Hant
      var teamWeightFormateTitle: RswiftResources.StringResource { .init(key: "team.weight.formate.title", tableName: "Localizable", source: source, developmentValue: "social weight", comment: nil) }

      /// en translation: *Reminder: The social weight rewards received will only be included in the social weight of the current day
      ///
      /// Key: team.weight.tips
      ///
      /// Locales: en, zh-Hant
      var teamWeightTips: RswiftResources.StringResource { .init(key: "team.weight.tips", tableName: "Localizable", source: source, developmentValue: "*Reminder: The social weight rewards received will only be included in the social weight of the current day", comment: nil) }

      /// en translation: Team Consumption
      ///
      /// Key: teamconsumption
      ///
      /// Locales: en, zh-Hant
      var teamconsumption: RswiftResources.StringResource { .init(key: "teamconsumption", tableName: "Localizable", source: source, developmentValue: "Team Consumption", comment: nil) }

      /// en translation: Team contribution
      ///
      /// Key: teamcontribution
      ///
      /// Locales: en, zh-Hant
      var teamcontribution: RswiftResources.StringResource { .init(key: "teamcontribution", tableName: "Localizable", source: source, developmentValue: "Team contribution", comment: nil) }

      /// en translation: Telegram
      ///
      /// Key: telegram
      ///
      /// Locales: en, zh-Hant
      var telegram: RswiftResources.StringResource { .init(key: "telegram", tableName: "Localizable", source: source, developmentValue: "Telegram", comment: nil) }

      /// en translation: Ten thousand and ten thousand
      ///
      /// Key: tenmillion
      ///
      /// Locales: en, zh-Hant
      var tenmillion: RswiftResources.StringResource { .init(key: "tenmillion", tableName: "Localizable", source: source, developmentValue: "Ten thousand and ten thousand", comment: nil) }

      /// en translation: Ten thousand and ten thousand
      ///
      /// Key: tenmillion_traditional
      ///
      /// Locales: en, zh-Hant
      var tenmillion_traditional: RswiftResources.StringResource { .init(key: "tenmillion_traditional", tableName: "Localizable", source: source, developmentValue: "Ten thousand and ten thousand", comment: nil) }

      /// en translation: Third-tier city
      ///
      /// Key: third_city
      ///
      /// Locales: en, zh-Hant
      var third_city: RswiftResources.StringResource { .init(key: "third_city", tableName: "Localizable", source: source, developmentValue: "Third-tier city", comment: nil) }

      /// en translation: three
      ///
      /// Key: three
      ///
      /// Locales: en, zh-Hant
      var three: RswiftResources.StringResource { .init(key: "three", tableName: "Localizable", source: source, developmentValue: "three", comment: nil) }

      /// en translation: three
      ///
      /// Key: three_traditional
      ///
      /// Locales: en, zh-Hant
      var three_traditional: RswiftResources.StringResource { .init(key: "three_traditional", tableName: "Localizable", source: source, developmentValue: "three", comment: nil) }

      /// en translation: Thursday 
      ///
      /// Key: thursday
      ///
      /// Locales: en, zh-Hant
      var thursday: RswiftResources.StringResource { .init(key: "thursday", tableName: "Localizable", source: source, developmentValue: "Thursday ", comment: nil) }

      /// en translation: ticket
      ///
      /// Key: ticket.lowercase
      ///
      /// Locales: en, zh-Hant
      var ticketLowercase: RswiftResources.StringResource { .init(key: "ticket.lowercase", tableName: "Localizable", source: source, developmentValue: "ticket", comment: nil) }

      /// en translation: Ticket
      ///
      /// Key: ticket.titlecase
      ///
      /// Locales: en, zh-Hant
      var ticketTitlecase: RswiftResources.StringResource { .init(key: "ticket.titlecase", tableName: "Localizable", source: source, developmentValue: "Ticket", comment: nil) }

      /// en translation: tickets
      ///
      /// Key: tickets.lowercase
      ///
      /// Locales: en, zh-Hant
      var ticketsLowercase: RswiftResources.StringResource { .init(key: "tickets.lowercase", tableName: "Localizable", source: source, developmentValue: "tickets", comment: nil) }

      /// en translation: Tickets
      ///
      /// Key: tickets.titlecase
      ///
      /// Locales: en, zh-Hant
      var ticketsTitlecase: RswiftResources.StringResource { .init(key: "tickets.titlecase", tableName: "Localizable", source: source, developmentValue: "Tickets", comment: nil) }

      /// en translation: so far
      ///
      /// Key: tillnow
      ///
      /// Locales: en, zh-Hant
      var tillnow: RswiftResources.StringResource { .init(key: "tillnow", tableName: "Localizable", source: source, developmentValue: "so far", comment: nil) }

      /// en translation: Start and end times cannot be the same
      ///
      /// Key: timeWrong
      ///
      /// Locales: en, zh-Hant
      var timeWrong: RswiftResources.StringResource { .init(key: "timeWrong", tableName: "Localizable", source: source, developmentValue: "Start and end times cannot be the same", comment: nil) }

      /// en translation: Your wallet will be automatically returned within 72 hours after the collection time has expired
      ///
      /// Key: timeoutreturnwallet
      ///
      /// Locales: en, zh-Hant
      var timeoutreturnwallet: RswiftResources.StringResource { .init(key: "timeoutreturnwallet", tableName: "Localizable", source: source, developmentValue: "Your wallet will be automatically returned within 72 hours after the collection time has expired", comment: nil) }

      /// en translation: Search has no result
      ///
      /// Key: title.searchNoResult
      ///
      /// Locales: en, zh-Hant
      var titleSearchNoResult: RswiftResources.StringResource { .init(key: "title.searchNoResult", tableName: "Localizable", source: source, developmentValue: "Search has no result", comment: nil) }

      /// en translation: You have been made the chatroom administrator...
      ///
      /// Key: toBeAdmining
      ///
      /// Locales: en, zh-Hant
      var toBeAdmining: RswiftResources.StringResource { .init(key: "toBeAdmining", tableName: "Localizable", source: source, developmentValue: "You have been made the chatroom administrator...", comment: nil) }

      /// en translation: Please agree to the user agreement first
      ///
      /// Key: to_agree_user_protocol
      ///
      /// Locales: en, zh-Hant
      var to_agree_user_protocol: RswiftResources.StringResource { .init(key: "to_agree_user_protocol", tableName: "Localizable", source: source, developmentValue: "Please agree to the user agreement first", comment: nil) }

      /// en translation: Please go to the "My" page, click on the avatar to bind the inviter, and then proceed to bind the main wallet
      ///
      /// Key: to_bind_desc
      ///
      /// Locales: en, zh-Hant
      var to_bind_desc: RswiftResources.StringResource { .init(key: "to_bind_desc", tableName: "Localizable", source: source, developmentValue: "Please go to the \"My\" page, click on the avatar to bind the inviter, and then proceed to bind the main wallet", comment: nil) }

      /// en translation: Please go to the "My" page, click on the avatar to bind the inviter, and then proceed to social mining 
      ///
      /// Key: to_bind_mining_desc
      ///
      /// Locales: en, zh-Hant
      var to_bind_mining_desc: RswiftResources.StringResource { .init(key: "to_bind_mining_desc", tableName: "Localizable", source: source, developmentValue: "Please go to the \"My\" page, click on the avatar to bind the inviter, and then proceed to social mining ", comment: nil) }

      /// en translation: You have not yet bound an inviter
      ///
      /// Key: to_bind_title
      ///
      /// Locales: en, zh-Hant
      var to_bind_title: RswiftResources.StringResource { .init(key: "to_bind_title", tableName: "Localizable", source: source, developmentValue: "You have not yet bound an inviter", comment: nil) }

      /// en translation: Please go to the "My" page, click on the avatar to bind the inviter, and then proceed to send on-chain messages
      ///
      /// Key: to_send_chain_message
      ///
      /// Locales: en, zh-Hant
      var to_send_chain_message: RswiftResources.StringResource { .init(key: "to_send_chain_message", tableName: "Localizable", source: source, developmentValue: "Please go to the \"My\" page, click on the avatar to bind the inviter, and then proceed to send on-chain messages", comment: nil) }

      /// en translation: Failed to elevate to administrator
      ///
      /// Key: tobeAdminFail
      ///
      /// Locales: en, zh-Hant
      var tobeAdminFail: RswiftResources.StringResource { .init(key: "tobeAdminFail", tableName: "Localizable", source: source, developmentValue: "Failed to elevate to administrator", comment: nil) }

      /// en translation: Elevated to administrator
      ///
      /// Key: tobeAdminSuccess
      ///
      /// Locales: en, zh-Hant
      var tobeAdminSuccess: RswiftResources.StringResource { .init(key: "tobeAdminSuccess", tableName: "Localizable", source: source, developmentValue: "Elevated to administrator", comment: nil) }

      /// en translation: %@ has been made an administrator for group %@
      ///
      /// Key: tobeadminPrompt
      ///
      /// Locales: en, zh-Hant
      var tobeadminPrompt: RswiftResources.StringResource2<String, String> { .init(key: "tobeadminPrompt", tableName: "Localizable", source: source, developmentValue: "%@ has been made an administrator for group %@", comment: nil) }

      /// en translation: To bind
      ///
      /// Key: tobind
      ///
      /// Locales: en, zh-Hant
      var tobind: RswiftResources.StringResource { .init(key: "tobind", tableName: "Localizable", source: source, developmentValue: "To bind", comment: nil) }

      /// en translation: Coming soon, stay tuned (%@)
      ///
      /// Key: todayDividend
      ///
      /// Locales: en, zh-Hant
      var todayDividend: RswiftResources.StringResource1<String> { .init(key: "todayDividend", tableName: "Localizable", source: source, developmentValue: "Coming soon, stay tuned (%@)", comment: nil) }

      /// en translation: 1 Year High
      ///
      /// Key: token.info.field.performance.year.high
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldPerformanceYearHigh: RswiftResources.StringResource { .init(key: "token.info.field.performance.year.high", tableName: "Localizable", source: source, developmentValue: "1 Year High", comment: nil) }

      /// en translation: 1 Year Low
      ///
      /// Key: token.info.field.performance.year.low
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldPerformanceYearLow: RswiftResources.StringResource { .init(key: "token.info.field.performance.year.low", tableName: "Localizable", source: source, developmentValue: "1 Year Low", comment: nil) }

      /// en translation: 1 Day
      ///
      /// Key: token.info.field.stats.day
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldStatsDay: RswiftResources.StringResource { .init(key: "token.info.field.stats.day", tableName: "Localizable", source: source, developmentValue: "1 Day", comment: nil) }

      /// en translation: Market Cap
      ///
      /// Key: token.info.field.stats.market_cap
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldStatsMarket_cap: RswiftResources.StringResource { .init(key: "token.info.field.stats.market_cap", tableName: "Localizable", source: source, developmentValue: "Market Cap", comment: nil) }

      /// en translation: Max Supply
      ///
      /// Key: token.info.field.stats.max_supply
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldStatsMax_supply: RswiftResources.StringResource { .init(key: "token.info.field.stats.max_supply", tableName: "Localizable", source: source, developmentValue: "Max Supply", comment: nil) }

      /// en translation: 1 Month
      ///
      /// Key: token.info.field.stats.month
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldStatsMonth: RswiftResources.StringResource { .init(key: "token.info.field.stats.month", tableName: "Localizable", source: source, developmentValue: "1 Month", comment: nil) }

      /// en translation: Total Supply
      ///
      /// Key: token.info.field.stats.total_supply
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldStatsTotal_supply: RswiftResources.StringResource { .init(key: "token.info.field.stats.total_supply", tableName: "Localizable", source: source, developmentValue: "Total Supply", comment: nil) }

      /// en translation: 1 Week
      ///
      /// Key: token.info.field.stats.week
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldStatsWeek: RswiftResources.StringResource { .init(key: "token.info.field.stats.week", tableName: "Localizable", source: source, developmentValue: "1 Week", comment: nil) }

      /// en translation: 1 Year
      ///
      /// Key: token.info.field.stats.year
      ///
      /// Locales: en, zh-Hant
      var tokenInfoFieldStatsYear: RswiftResources.StringResource { .init(key: "token.info.field.stats.year", tableName: "Localizable", source: source, developmentValue: "1 Year", comment: nil) }

      /// en translation: Performance
      ///
      /// Key: token.info.header.performance
      ///
      /// Locales: en, zh-Hant
      var tokenInfoHeaderPerformance: RswiftResources.StringResource { .init(key: "token.info.header.performance", tableName: "Localizable", source: source, developmentValue: "Performance", comment: nil) }

      /// en translation: Stats
      ///
      /// Key: token.info.header.stats
      ///
      /// Locales: en, zh-Hant
      var tokenInfoHeaderStats: RswiftResources.StringResource { .init(key: "token.info.header.stats", tableName: "Localizable", source: source, developmentValue: "Stats", comment: nil) }

      /// en translation: token
      ///
      /// Key: token.lowercase
      ///
      /// Locales: en, zh-Hant
      var tokenLowercase: RswiftResources.StringResource { .init(key: "token.lowercase", tableName: "Localizable", source: source, developmentValue: "token", comment: nil) }

      /// en translation: Activity
      ///
      /// Key: token.tab.activity
      ///
      /// Locales: en, zh-Hant
      var tokenTabActivity: RswiftResources.StringResource { .init(key: "token.tab.activity", tableName: "Localizable", source: source, developmentValue: "Activity", comment: nil) }

      /// en translation: Info
      ///
      /// Key: token.tab.info
      ///
      /// Locales: en, zh-Hant
      var tokenTabInfo: RswiftResources.StringResource { .init(key: "token.tab.info", tableName: "Localizable", source: source, developmentValue: "Info", comment: nil) }

      /// en translation: Ropsten tokens are like ‘Monopoly’ money. They have zero financial worth but are used by developers to try out new designs without needing to spend valuable coins. 
      ///
      /// Key: token.testnetWarning
      ///
      /// Locales: en, zh-Hant
      var tokenTestnetWarning: RswiftResources.StringResource { .init(key: "token.testnetWarning", tableName: "Localizable", source: source, developmentValue: "Ropsten tokens are like ‘Monopoly’ money. They have zero financial worth but are used by developers to try out new designs without needing to spend valuable coins. ", comment: nil) }

      /// en translation: Token
      ///
      /// Key: token.titlecase
      ///
      /// Locales: en, zh-Hant
      var tokenTitlecase: RswiftResources.StringResource { .init(key: "token.titlecase", tableName: "Localizable", source: source, developmentValue: "Token", comment: nil) }

      /// en translation: Attempt to Cancel
      ///
      /// Key: token.transactionCancelConfirmation.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionCancelConfirmationTitle: RswiftResources.StringResource { .init(key: "token.transactionCancelConfirmation.title", tableName: "Localizable", source: source, developmentValue: "Attempt to Cancel", comment: nil) }

      /// en translation: Contract
      ///
      /// Key: token.transactionConfirmation.contract.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationContractTitle: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.contract.title", tableName: "Localizable", source: source, developmentValue: "Contract", comment: nil) }

      /// en translation: Default
      ///
      /// Key: token.transactionConfirmation.default
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationDefault: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.default", tableName: "Localizable", source: source, developmentValue: "Default", comment: nil) }

      /// en translation: It looks like you are trying to run a smart contract and the logic of that smart contract returns an error.
      ///
      /// Key: token.transactionConfirmation.error.description.executionRevertedError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorDescriptionExecutionRevertedError: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.description.executionRevertedError", tableName: "Localizable", source: source, developmentValue: "It looks like you are trying to run a smart contract and the logic of that smart contract returns an error.", comment: nil) }

      /// en translation: The gas price specified for this transaction is too high. INTO is using a live oracle and updates the gas price every 15 seconds. We recommend you to choose preselected amount (Slow, Average, Fast).
      ///
      /// Key: token.transactionConfirmation.error.description.gasLimitTooHigh
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorDescriptionGasLimitTooHigh: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.description.gasLimitTooHigh", tableName: "Localizable", source: source, developmentValue: "The gas price specified for this transaction is too high. INTO is using a live oracle and updates the gas price every 15 seconds. We recommend you to choose preselected amount (Slow, Average, Fast).", comment: nil) }

      /// en translation: The gas limit specified for this transaction is too low. INTO is using a live oracle and updates the gas price every 15 seconds. We recommend you to choose preselected amount (Slow, Average, Fast).
      ///
      /// Key: token.transactionConfirmation.error.description.gasLimitTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorDescriptionGasLimitTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.description.gasLimitTooLow", tableName: "Localizable", source: source, developmentValue: "The gas limit specified for this transaction is too low. INTO is using a live oracle and updates the gas price every 15 seconds. We recommend you to choose preselected amount (Slow, Average, Fast).", comment: nil) }

      /// en translation: The gas price specified for this transaction is too low. INTO is using a live oracle and updates the gas price every 15 seconds. We recommend you to choose preselected amount (Slow, Average, Fast).
      ///
      /// Key: token.transactionConfirmation.error.description.gasPriceTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorDescriptionGasPriceTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.description.gasPriceTooLow", tableName: "Localizable", source: source, developmentValue: "The gas price specified for this transaction is too low. INTO is using a live oracle and updates the gas price every 15 seconds. We recommend you to choose preselected amount (Slow, Average, Fast).", comment: nil) }

      /// en translation: Every transaction requires a small amount of %@ (%@) to pay for the fees. You can receive %@ from a different wallet, crypto exchange, or you can buy %@ using the button below.
      ///
      /// Key: token.transactionConfirmation.error.description.insufficientFundsError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorDescriptionInsufficientFundsError: RswiftResources.StringResource4<String, String, String, String> { .init(key: "token.transactionConfirmation.error.description.insufficientFundsError", tableName: "Localizable", source: source, developmentValue: "Every transaction requires a small amount of %@ (%@) to pay for the fees. You can receive %@ from a different wallet, crypto exchange, or you can buy %@ using the button below.", comment: nil) }

      /// en translation: The nonce is the total number of transactions which has been sent from this wallet so far, and is included for security purposes.  We recommend to leave the nonce empty.  We'll fill it for you.
      ///
      /// Key: token.transactionConfirmation.error.description.nonceTooLowError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorDescriptionNonceTooLowError: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.description.nonceTooLowError", tableName: "Localizable", source: source, developmentValue: "The nonce is the total number of transactions which has been sent from this wallet so far, and is included for security purposes. \nWe recommend to leave the nonce empty. \nWe'll fill it for you.", comment: nil) }

      /// en translation: You might be sending this transaction on the wrong chain.
      ///
      /// Key: token.transactionConfirmation.error.description.possibleChainIdMismatchError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorDescriptionPossibleChainIdMismatchError: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.description.possibleChainIdMismatchError", tableName: "Localizable", source: source, developmentValue: "You might be sending this transaction on the wrong chain.", comment: nil) }

      /// en translation: Learn more about Gas Limit
      ///
      /// Key: token.transactionConfirmation.error.linkTitle.gasLimitTooHigh
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorLinkTitleGasLimitTooHigh: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.linkTitle.gasLimitTooHigh", tableName: "Localizable", source: source, developmentValue: "Learn more about Gas Limit", comment: nil) }

      /// en translation: Learn more about Gas Limit
      ///
      /// Key: token.transactionConfirmation.error.linkTitle.gasLimitTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorLinkTitleGasLimitTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.linkTitle.gasLimitTooLow", tableName: "Localizable", source: source, developmentValue: "Learn more about Gas Limit", comment: nil) }

      /// en translation: Learn more about Gas Price
      ///
      /// Key: token.transactionConfirmation.error.linkTitle.gasPriceTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorLinkTitleGasPriceTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.linkTitle.gasPriceTooLow", tableName: "Localizable", source: source, developmentValue: "Learn more about Gas Price", comment: nil) }

      /// en translation: Learn more about Gas fees
      ///
      /// Key: token.transactionConfirmation.error.linkTitle.insufficientFundsError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorLinkTitleInsufficientFundsError: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.linkTitle.insufficientFundsError", tableName: "Localizable", source: source, developmentValue: "Learn more about Gas fees", comment: nil) }

      /// en translation: Learn more about Nonce
      ///
      /// Key: token.transactionConfirmation.error.linkTitle.nonceTooLowError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorLinkTitleNonceTooLowError: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.linkTitle.nonceTooLowError", tableName: "Localizable", source: source, developmentValue: "Learn more about Nonce", comment: nil) }

      /// en translation: Set Speed
      ///
      /// Key: token.transactionConfirmation.error.rectifyButtonTitle.gasLimitTooHigh
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorRectifyButtonTitleGasLimitTooHigh: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.rectifyButtonTitle.gasLimitTooHigh", tableName: "Localizable", source: source, developmentValue: "Set Speed", comment: nil) }

      /// en translation: Set Speed
      ///
      /// Key: token.transactionConfirmation.error.rectifyButtonTitle.gasLimitTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorRectifyButtonTitleGasLimitTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.rectifyButtonTitle.gasLimitTooLow", tableName: "Localizable", source: source, developmentValue: "Set Speed", comment: nil) }

      /// en translation: Set Speed
      ///
      /// Key: token.transactionConfirmation.error.rectifyButtonTitle.gasPriceTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorRectifyButtonTitleGasPriceTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.rectifyButtonTitle.gasPriceTooLow", tableName: "Localizable", source: source, developmentValue: "Set Speed", comment: nil) }

      /// en translation: Buy %@
      ///
      /// Key: token.transactionConfirmation.error.rectifyButtonTitle.insufficientFundsError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorRectifyButtonTitleInsufficientFundsError: RswiftResources.StringResource1<String> { .init(key: "token.transactionConfirmation.error.rectifyButtonTitle.insufficientFundsError", tableName: "Localizable", source: source, developmentValue: "Buy %@", comment: nil) }

      /// en translation: Correct Nonce
      ///
      /// Key: token.transactionConfirmation.error.rectifyButtonTitle.nonceTooLowError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorRectifyButtonTitleNonceTooLowError: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.rectifyButtonTitle.nonceTooLowError", tableName: "Localizable", source: source, developmentValue: "Correct Nonce", comment: nil) }

      /// en translation: Gas Limit is too high
      ///
      /// Key: token.transactionConfirmation.error.title.gasLimitTooHigh
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorTitleGasLimitTooHigh: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.title.gasLimitTooHigh", tableName: "Localizable", source: source, developmentValue: "Gas Limit is too high", comment: nil) }

      /// en translation: Gas Limit is too low
      ///
      /// Key: token.transactionConfirmation.error.title.gasLimitTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorTitleGasLimitTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.title.gasLimitTooLow", tableName: "Localizable", source: source, developmentValue: "Gas Limit is too low", comment: nil) }

      /// en translation: Gas Price is too low
      ///
      /// Key: token.transactionConfirmation.error.title.gasPriceTooLow
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorTitleGasPriceTooLow: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.title.gasPriceTooLow", tableName: "Localizable", source: source, developmentValue: "Gas Price is too low", comment: nil) }

      /// en translation: Not enough %@ to pay for fees
      ///
      /// Key: token.transactionConfirmation.error.title.insufficientFundsError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorTitleInsufficientFundsError: RswiftResources.StringResource1<String> { .init(key: "token.transactionConfirmation.error.title.insufficientFundsError", tableName: "Localizable", source: source, developmentValue: "Not enough %@ to pay for fees", comment: nil) }

      /// en translation: Nonce of the Transaction is too low
      ///
      /// Key: token.transactionConfirmation.error.title.nonceTooLowError
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationErrorTitleNonceTooLowError: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.error.title.nonceTooLowError", tableName: "Localizable", source: source, developmentValue: "Nonce of the Transaction is too low", comment: nil) }

      /// en translation: Function
      ///
      /// Key: token.transactionConfirmation.function.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationFunctionTitle: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.function.title", tableName: "Localizable", source: source, developmentValue: "Function", comment: nil) }

      /// en translation: Gas
      ///
      /// Key: token.transactionConfirmation.gas.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationGasTitle: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.gas.title", tableName: "Localizable", source: source, developmentValue: "Gas", comment: nil) }

      /// en translation: Network
      ///
      /// Key: token.transactionConfirmation.network
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationNetwork: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.network", tableName: "Localizable", source: source, developmentValue: "Network", comment: nil) }

      /// en translation: Confirm Transaction?
      ///
      /// Key: token.transactionConfirmation.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionConfirmationTitle: RswiftResources.StringResource { .init(key: "token.transactionConfirmation.title", tableName: "Localizable", source: source, developmentValue: "Confirm Transaction?", comment: nil) }

      /// en translation: Confirm Purchase?
      ///
      /// Key: token.transactionPurchaseConfirmation.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionPurchaseConfirmationTitle: RswiftResources.StringResource { .init(key: "token.transactionPurchaseConfirmation.title", tableName: "Localizable", source: source, developmentValue: "Confirm Purchase?", comment: nil) }

      /// en translation: Confirm Transaction?
      ///
      /// Key: token.transactionSpeedupConfirmation.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionSpeedupConfirmationTitle: RswiftResources.StringResource { .init(key: "token.transactionSpeedupConfirmation.title", tableName: "Localizable", source: source, developmentValue: "Confirm Transaction?", comment: nil) }

      /// en translation: Confirm Transfer?
      ///
      /// Key: token.transactionTransferConfirmation.title
      ///
      /// Locales: en, zh-Hant
      var tokenTransactionTransferConfirmationTitle: RswiftResources.StringResource { .init(key: "token.transactionTransferConfirmation.title", tableName: "Localizable", source: source, developmentValue: "Confirm Transfer?", comment: nil) }

      /// en translation: No Value, made for tests only
      ///
      /// Key: token.value.testnetWarning
      ///
      /// Locales: en, zh-Hant
      var tokenValueTestnetWarning: RswiftResources.StringResource { .init(key: "token.value.testnetWarning", tableName: "Localizable", source: source, developmentValue: "No Value, made for tests only", comment: nil) }

      /// en translation: Get token verification
      ///
      /// Key: tokenCheck
      ///
      /// Locales: en, zh-Hant
      var tokenCheck: RswiftResources.StringResource { .init(key: "tokenCheck", tableName: "Localizable", source: source, developmentValue: "Get token verification", comment: nil) }

      /// en translation: Error moving asset definition file from %@ to: %@: %@
      ///
      /// Key: tokenScript.moveFile.error
      ///
      /// Locales: en, zh-Hant
      var tokenScriptMoveFileError: RswiftResources.StringResource3<String, String, String> { .init(key: "tokenScript.moveFile.error", tableName: "Localizable", source: source, developmentValue: "Error moving asset definition file from %@ to: %@: %@", comment: nil) }

      /// en translation: Please upgrade INTO to support this TokenScript file
      ///
      /// Key: tokenScript.notSupportedSchema.error
      ///
      /// Locales: en, zh-Hant
      var tokenScriptNotSupportedSchemaError: RswiftResources.StringResource { .init(key: "tokenScript.notSupportedSchema.error", tableName: "Localizable", source: source, developmentValue: "Please upgrade INTO to support this TokenScript file", comment: nil) }

      /// en translation: Use Token for authentication
      ///
      /// Key: tokenauthentication
      ///
      /// Locales: en, zh-Hant
      var tokenauthentication: RswiftResources.StringResource { .init(key: "tokenauthentication", tableName: "Localizable", source: source, developmentValue: "Use Token for authentication", comment: nil) }

      /// en translation: tokens
      ///
      /// Key: tokens.lowercase
      ///
      /// Locales: en, zh-Hant
      var tokensLowercase: RswiftResources.StringResource { .init(key: "tokens.lowercase", tableName: "Localizable", source: source, developmentValue: "tokens", comment: nil) }

      /// en translation: Add Custom Token
      ///
      /// Key: tokens.newtoken.navigation.title
      ///
      /// Locales: en, zh-Hant
      var tokensNewtokenNavigationTitle: RswiftResources.StringResource { .init(key: "tokens.newtoken.navigation.title", tableName: "Localizable", source: source, developmentValue: "Add Custom Token", comment: nil) }

      /// en translation: Search for a token
      ///
      /// Key: tokens.searchbar.placeholder
      ///
      /// Locales: en, zh-Hant
      var tokensSearchbarPlaceholder: RswiftResources.StringResource { .init(key: "tokens.searchbar.placeholder", tableName: "Localizable", source: source, developmentValue: "Search for a token", comment: nil) }

      /// en translation: Tokens
      ///
      /// Key: tokens.titlecase
      ///
      /// Locales: en, zh-Hant
      var tokensTitlecase: RswiftResources.StringResource { .init(key: "tokens.titlecase", tableName: "Localizable", source: source, developmentValue: "Tokens", comment: nil) }

      /// en translation: Rename This Wallet
      ///
      /// Key: tokens.wallet.renameThisWallet
      ///
      /// Locales: en, zh-Hant
      var tokensWalletRenameThisWallet: RswiftResources.StringResource { .init(key: "tokens.wallet.renameThisWallet", tableName: "Localizable", source: source, developmentValue: "Rename This Wallet", comment: nil) }

      /// en translation: %@ file imported with no error
      ///
      /// Key: tokenscript.import.ok
      ///
      /// Locales: en, zh-Hant
      var tokenscriptImportOk: RswiftResources.StringResource1<String> { .init(key: "tokenscript.import.ok", tableName: "Localizable", source: source, developmentValue: "%@ file imported with no error", comment: nil) }

      /// en translation: There are no TokenScript overrides
      ///
      /// Key: tokenscript.overrides.empty
      ///
      /// Locales: en, zh-Hant
      var tokenscriptOverridesEmpty: RswiftResources.StringResource { .init(key: "tokenscript.overrides.empty", tableName: "Localizable", source: source, developmentValue: "There are no TokenScript overrides", comment: nil) }

      /// en translation: Sticky on Top
      ///
      /// Key: top
      ///
      /// Locales: en, zh-Hant
      var top: RswiftResources.StringResource { .init(key: "top", tableName: "Localizable", source: source, developmentValue: "Sticky on Top", comment: nil) }

      /// en translation: To recharge
      ///
      /// Key: torecharge
      ///
      /// Locales: en, zh-Hant
      var torecharge: RswiftResources.StringResource { .init(key: "torecharge", tableName: "Localizable", source: source, developmentValue: "To recharge", comment: nil) }

      /// en translation: Total recharge quantity
      ///
      /// Key: total.amount
      ///
      /// Locales: en, zh-Hant
      var totalAmount: RswiftResources.StringResource { .init(key: "total.amount", tableName: "Localizable", source: source, developmentValue: "Total recharge quantity", comment: nil) }

      /// en translation: Total cost: %@
      ///
      /// Key: total.payment
      ///
      /// Locales: en, zh-Hant
      var totalPayment: RswiftResources.StringResource1<String> { .init(key: "total.payment", tableName: "Localizable", source: source, developmentValue: "Total cost: %@", comment: nil) }

      /// en translation: Total added: %ld people
      ///
      /// Key: totaladdition
      ///
      /// Locales: en, zh-Hant
      var totaladdition: RswiftResources.StringResource1<Int> { .init(key: "totaladdition", tableName: "Localizable", source: source, developmentValue: "Total added: %ld people", comment: nil) }

      /// en translation: Total
      ///
      /// Key: totalamount
      ///
      /// Locales: en, zh-Hant
      var totalamount: RswiftResources.StringResource { .init(key: "totalamount", tableName: "Localizable", source: source, developmentValue: "Total", comment: nil) }

      /// en translation: Touch ID
      ///
      /// Key: touch.id
      ///
      /// Locales: en, zh-Hant
      var touchId: RswiftResources.StringResource { .init(key: "touch.id", tableName: "Localizable", source: source, developmentValue: "Touch ID", comment: nil) }

      /// en translation: SBT Promotional Reward
      ///
      /// Key: toxBalanceDID
      ///
      /// Locales: en, zh-Hant
      var toxBalanceDID: RswiftResources.StringResource { .init(key: "toxBalanceDID", tableName: "Localizable", source: source, developmentValue: "SBT Promotional Reward", comment: nil) }

      /// en translation: Star-level Bonus
      ///
      /// Key: toxBalanceLevel
      ///
      /// Locales: en, zh-Hant
      var toxBalanceLevel: RswiftResources.StringResource { .init(key: "toxBalanceLevel", tableName: "Localizable", source: source, developmentValue: "Star-level Bonus", comment: nil) }

      /// en translation: Pioneer-Fund
      ///
      /// Key: toxBalancePioneerFund
      ///
      /// Locales: en, zh-Hant
      var toxBalancePioneerFund: RswiftResources.StringResource { .init(key: "toxBalancePioneerFund", tableName: "Localizable", source: source, developmentValue: "Pioneer-Fund", comment: nil) }

      /// en translation: Pioneer-Node
      ///
      /// Key: toxBalancePioneerNode
      ///
      /// Locales: en, zh-Hant
      var toxBalancePioneerNode: RswiftResources.StringResource { .init(key: "toxBalancePioneerNode", tableName: "Localizable", source: source, developmentValue: "Pioneer-Node", comment: nil) }

      /// en translation: Pioneer-Welfare
      ///
      /// Key: toxBalancePioneerWelfare
      ///
      /// Locales: en, zh-Hant
      var toxBalancePioneerWelfare: RswiftResources.StringResource { .init(key: "toxBalancePioneerWelfare", tableName: "Localizable", source: source, developmentValue: "Pioneer-Welfare", comment: nil) }

      /// en translation: Wallet balance: %@ TOX
      ///
      /// Key: tox_balance
      ///
      /// Locales: en, zh-Hant
      var tox_balance: RswiftResources.StringResource1<String> { .init(key: "tox_balance", tableName: "Localizable", source: source, developmentValue: "Wallet balance: %@ TOX", comment: nil) }

      /// en translation: Contract Balance：%@
      ///
      /// Key: tox_contract_balance
      ///
      /// Locales: en, zh-Hant
      var tox_contract_balance: RswiftResources.StringResource1<String> { .init(key: "tox_contract_balance", tableName: "Localizable", source: source, developmentValue: "Contract Balance：%@", comment: nil) }

      /// en translation: Margin
      ///
      /// Key: tox_deposit
      ///
      /// Locales: en, zh-Hant
      var tox_deposit: RswiftResources.StringResource { .init(key: "tox_deposit", tableName: "Localizable", source: source, developmentValue: "Margin", comment: nil) }

      /// en translation: TOX balance: %@
      ///
      /// Key: toxbalance
      ///
      /// Locales: en, zh-Hant
      var toxbalance: RswiftResources.StringResource1<String> { .init(key: "toxbalance", tableName: "Localizable", source: source, developmentValue: "TOX balance: %@", comment: nil) }

      /// en translation: Details
      ///
      /// Key: toxdetail
      ///
      /// Locales: en, zh-Hant
      var toxdetail: RswiftResources.StringResource { .init(key: "toxdetail", tableName: "Localizable", source: source, developmentValue: "Details", comment: nil) }

      /// en translation: TOX mall
      ///
      /// Key: toxmall
      ///
      /// Locales: en, zh-Hant
      var toxmall: RswiftResources.StringResource { .init(key: "toxmall", tableName: "Localizable", source: source, developmentValue: "TOX mall", comment: nil) }

      /// en translation: Amount
      ///
      /// Key: transaction.amount.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionAmountLabelTitle: RswiftResources.StringResource { .init(key: "transaction.amount.label.title", tableName: "Localizable", source: source, developmentValue: "Amount", comment: nil) }

      /// en translation: Block #
      ///
      /// Key: transaction.blockNumber.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionBlockNumberLabelTitle: RswiftResources.StringResource { .init(key: "transaction.blockNumber.label.title", tableName: "Localizable", source: source, developmentValue: "Block #", comment: nil) }

      /// en translation: Incomplete Data
      ///
      /// Key: transaction.cell.availableButDataUnavailable.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellAvailableButDataUnavailableTitle: RswiftResources.StringResource { .init(key: "transaction.cell.availableButDataUnavailable.title", tableName: "Localizable", source: source, developmentValue: "Incomplete Data", comment: nil) }

      /// en translation: Error
      ///
      /// Key: transaction.cell.error.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellErrorTitle: RswiftResources.StringResource { .init(key: "transaction.cell.error.title", tableName: "Localizable", source: source, developmentValue: "Error", comment: nil) }

      /// en translation: Failed
      ///
      /// Key: transaction.cell.failed.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellFailedTitle: RswiftResources.StringResource { .init(key: "transaction.cell.failed.title", tableName: "Localizable", source: source, developmentValue: "Failed", comment: nil) }

      /// en translation: Pending
      ///
      /// Key: transaction.cell.pending.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellPendingTitle: RswiftResources.StringResource { .init(key: "transaction.cell.pending.title", tableName: "Localizable", source: source, developmentValue: "Pending", comment: nil) }

      /// en translation: Received
      ///
      /// Key: transaction.cell.received.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellReceivedTitle: RswiftResources.StringResource { .init(key: "transaction.cell.received.title", tableName: "Localizable", source: source, developmentValue: "Received", comment: nil) }

      /// en translation: Sent
      ///
      /// Key: transaction.cell.sent.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellSentTitle: RswiftResources.StringResource { .init(key: "transaction.cell.sent.title", tableName: "Localizable", source: source, developmentValue: "Sent", comment: nil) }

      /// en translation: Approve %@
      ///
      /// Key: transaction.cell.tokenApprove.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellTokenApproveTitle: RswiftResources.StringResource1<String> { .init(key: "transaction.cell.tokenApprove.title", tableName: "Localizable", source: source, developmentValue: "Approve %@", comment: nil) }

      /// en translation: Approve All %@
      ///
      /// Key: transaction.cell.tokenApproveAll.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellTokenApproveAllTitle: RswiftResources.StringResource1<String> { .init(key: "transaction.cell.tokenApproveAll.title", tableName: "Localizable", source: source, developmentValue: "Approve All %@", comment: nil) }

      /// en translation: Transfer %@
      ///
      /// Key: transaction.cell.tokenTransfer.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellTokenTransferTitle: RswiftResources.StringResource1<String> { .init(key: "transaction.cell.tokenTransfer.title", tableName: "Localizable", source: source, developmentValue: "Transfer %@", comment: nil) }

      /// en translation: Unknown
      ///
      /// Key: transaction.cell.unknown.title
      ///
      /// Locales: en, zh-Hant
      var transactionCellUnknownTitle: RswiftResources.StringResource { .init(key: "transaction.cell.unknown.title", tableName: "Localizable", source: source, developmentValue: "Unknown", comment: nil) }

      /// en translation: Confirmation
      ///
      /// Key: transaction.confirmation.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationLabelTitle: RswiftResources.StringResource { .init(key: "transaction.confirmation.label.title", tableName: "Localizable", source: source, developmentValue: "Confirmation", comment: nil) }

      /// en translation: From
      ///
      /// Key: transaction.from.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionFromLabelTitle: RswiftResources.StringResource { .init(key: "transaction.from.label.title", tableName: "Localizable", source: source, developmentValue: "From", comment: nil) }

      /// en translation: Gas Fee
      ///
      /// Key: transaction.gasFee.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionGasFeeLabelTitle: RswiftResources.StringResource { .init(key: "transaction.gasFee.label.title", tableName: "Localizable", source: source, developmentValue: "Gas Fee", comment: nil) }

      /// en translation: Transaction ID
      ///
      /// Key: transaction.id
      ///
      /// Locales: en, zh-Hant
      var transactionId: RswiftResources.StringResource { .init(key: "transaction.id", tableName: "Localizable", source: source, developmentValue: "Transaction ID", comment: nil) }

      /// en translation: Transaction #
      ///
      /// Key: transaction.id.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionIdLabelTitle: RswiftResources.StringResource { .init(key: "transaction.id.label.title", tableName: "Localizable", source: source, developmentValue: "Transaction #", comment: nil) }

      /// en translation: Transaction
      ///
      /// Key: transaction.navigation.title
      ///
      /// Locales: en, zh-Hant
      var transactionNavigationTitle: RswiftResources.StringResource { .init(key: "transaction.navigation.title", tableName: "Localizable", source: source, developmentValue: "Transaction", comment: nil) }

      /// en translation: Network
      ///
      /// Key: transaction.network.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionNetworkLabelTitle: RswiftResources.StringResource { .init(key: "transaction.network.label.title", tableName: "Localizable", source: source, developmentValue: "Network", comment: nil) }

      /// en translation: Nonce
      ///
      /// Key: transaction.nonce.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionNonceLabelTitle: RswiftResources.StringResource { .init(key: "transaction.nonce.label.title", tableName: "Localizable", source: source, developmentValue: "Nonce", comment: nil) }

      /// en translation: Transaction time
      ///
      /// Key: transaction.time.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionTimeLabelTitle: RswiftResources.StringResource { .init(key: "transaction.time.label.title", tableName: "Localizable", source: source, developmentValue: "Transaction time", comment: nil) }

      /// en translation: To
      ///
      /// Key: transaction.to.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionToLabelTitle: RswiftResources.StringResource { .init(key: "transaction.to.label.title", tableName: "Localizable", source: source, developmentValue: "To", comment: nil) }

      /// en translation: Average
      ///
      /// Key: transactionConfiguration.Type.average
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeAverage: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.average", tableName: "Localizable", source: source, developmentValue: "Average", comment: nil) }

      /// en translation: < 5 min
      ///
      /// Key: transactionConfiguration.Type.average.time
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeAverageTime: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.average.time", tableName: "Localizable", source: source, developmentValue: "< 5 min", comment: nil) }

      /// en translation: Custom (set your own)
      ///
      /// Key: transactionConfiguration.Type.custom
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeCustom: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.custom", tableName: "Localizable", source: source, developmentValue: "Custom (set your own)", comment: nil) }

      /// en translation: Fast
      ///
      /// Key: transactionConfiguration.Type.fast
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeFast: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.fast", tableName: "Localizable", source: source, developmentValue: "Fast", comment: nil) }

      /// en translation: < 2 min
      ///
      /// Key: transactionConfiguration.Type.fast.time
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeFastTime: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.fast.time", tableName: "Localizable", source: source, developmentValue: "< 2 min", comment: nil) }

      /// en translation: Rapid
      ///
      /// Key: transactionConfiguration.Type.rapid
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeRapid: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.rapid", tableName: "Localizable", source: source, developmentValue: "Rapid", comment: nil) }

      /// en translation: ASAP
      ///
      /// Key: transactionConfiguration.Type.rapid.time
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeRapidTime: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.rapid.time", tableName: "Localizable", source: source, developmentValue: "ASAP", comment: nil) }

      /// en translation: Slow
      ///
      /// Key: transactionConfiguration.Type.slow
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeSlow: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.slow", tableName: "Localizable", source: source, developmentValue: "Slow", comment: nil) }

      /// en translation: > 10 min
      ///
      /// Key: transactionConfiguration.Type.slow.time
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationTypeSlowTime: RswiftResources.StringResource { .init(key: "transactionConfiguration.Type.slow.time", tableName: "Localizable", source: source, developmentValue: "> 10 min", comment: nil) }

      /// en translation: The Ethereum blockchain network is very congested now. Fees might be higher than usual.
      ///
      /// Key: transactionConfiguration.gasPrice.congested.description
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationGasPriceCongestedDescription: RswiftResources.StringResource { .init(key: "transactionConfiguration.gasPrice.congested.description", tableName: "Localizable", source: source, developmentValue: "The Ethereum blockchain network is very congested now. Fees might be higher than usual.", comment: nil) }

      /// en translation: You set a really high gas price. Please make sure this is not a mistake
      ///
      /// Key: transactionConfiguration.gasPrice.tooHigh.description
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationGasPriceTooHighDescription: RswiftResources.StringResource { .init(key: "transactionConfiguration.gasPrice.tooHigh.description", tableName: "Localizable", source: source, developmentValue: "You set a really high gas price. Please make sure this is not a mistake", comment: nil) }

      /// en translation: High Gas Price Warning!
      ///
      /// Key: transactionConfiguration.gasPrice.tooHigh.long
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationGasPriceTooHighLong: RswiftResources.StringResource { .init(key: "transactionConfiguration.gasPrice.tooHigh.long", tableName: "Localizable", source: source, developmentValue: "High Gas Price Warning!", comment: nil) }

      /// en translation: High Price
      ///
      /// Key: transactionConfiguration.gasPrice.tooHigh.short
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationGasPriceTooHighShort: RswiftResources.StringResource { .init(key: "transactionConfiguration.gasPrice.tooHigh.short", tableName: "Localizable", source: source, developmentValue: "High Price", comment: nil) }

      /// en translation: Gas price is set below the 'slow' speed. Your transaction may take a long time to be written or may never be written.
      ///
      /// Key: transactionConfiguration.gasPrice.tooLow.description
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationGasPriceTooLowDescription: RswiftResources.StringResource { .init(key: "transactionConfiguration.gasPrice.tooLow.description", tableName: "Localizable", source: source, developmentValue: "Gas price is set below the 'slow' speed. Your transaction may take a long time to be written or may never be written.", comment: nil) }

      /// en translation: Gas Price Might Be Too Low
      ///
      /// Key: transactionConfiguration.gasPrice.tooLow.long
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationGasPriceTooLowLong: RswiftResources.StringResource { .init(key: "transactionConfiguration.gasPrice.tooLow.long", tableName: "Localizable", source: source, developmentValue: "Gas Price Might Be Too Low", comment: nil) }

      /// en translation: Low Price
      ///
      /// Key: transactionConfiguration.gasPrice.tooLow.short
      ///
      /// Locales: en, zh-Hant
      var transactionConfigurationGasPriceTooLowShort: RswiftResources.StringResource { .init(key: "transactionConfiguration.gasPrice.tooLow.short", tableName: "Localizable", source: source, developmentValue: "Low Price", comment: nil) }

      /// en translation: ENS
      ///
      /// Key: transactionConfirmation.Row.title.ens
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationRowTitleEns: RswiftResources.StringResource { .init(key: "transactionConfirmation.Row.title.ens", tableName: "Localizable", source: source, developmentValue: "ENS", comment: nil) }

      /// en translation: Wallet Address
      ///
      /// Key: transactionConfirmation.Row.title.wallet
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationRowTitleWallet: RswiftResources.StringResource { .init(key: "transactionConfirmation.Row.title.wallet", tableName: "Localizable", source: source, developmentValue: "Wallet Address", comment: nil) }

      /// en translation: Amount
      ///
      /// Key: transactionConfirmation.Send.Section.Amount.title
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationSendSectionAmountTitle: RswiftResources.StringResource { .init(key: "transactionConfirmation.Send.Section.Amount.title", tableName: "Localizable", source: source, developmentValue: "Amount", comment: nil) }

      /// en translation: (New: %@)
      ///
      /// Key: transactionConfirmation.Send.Section.Balance.new.title
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationSendSectionBalanceNewTitle: RswiftResources.StringResource1<String> { .init(key: "transactionConfirmation.Send.Section.Balance.new.title", tableName: "Localizable", source: source, developmentValue: "(New: %@)", comment: nil) }

      /// en translation: Balance
      ///
      /// Key: transactionConfirmation.Send.Section.Balance.title
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationSendSectionBalanceTitle: RswiftResources.StringResource { .init(key: "transactionConfirmation.Send.Section.Balance.title", tableName: "Localizable", source: source, developmentValue: "Balance", comment: nil) }

      /// en translation: Gas
      ///
      /// Key: transactionConfirmation.Send.Section.Gas.title
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationSendSectionGasTitle: RswiftResources.StringResource { .init(key: "transactionConfirmation.Send.Section.Gas.title", tableName: "Localizable", source: source, developmentValue: "Gas", comment: nil) }

      /// en translation: Recipient
      ///
      /// Key: transactionConfirmation.Send.Section.Recipient.title
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationSendSectionRecipientTitle: RswiftResources.StringResource { .init(key: "transactionConfirmation.Send.Section.Recipient.title", tableName: "Localizable", source: source, developmentValue: "Recipient", comment: nil) }

      /// en translation: Token
      ///
      /// Key: transactionConfirmation.Send.Section.TokenId.title
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationSendSectionTokenIdTitle: RswiftResources.StringResource { .init(key: "transactionConfirmation.Send.Section.TokenId.title", tableName: "Localizable", source: source, developmentValue: "Token", comment: nil) }

      /// en translation: Authorize to confirm transaction
      ///
      /// Key: transactionConfirmation.authorisation.reason
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationAuthorisationReason: RswiftResources.StringResource { .init(key: "transactionConfirmation.authorisation.reason", tableName: "Localizable", source: source, developmentValue: "Authorize to confirm transaction", comment: nil) }

      /// en translation: The higher the fee, the better chances and faster your transaction will go through. Fees are based on current Ethereum blockchain network load.
      ///
      /// Key: transactionConfirmation.fee.footerText
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationFeeFooterText: RswiftResources.StringResource { .init(key: "transactionConfirmation.fee.footerText", tableName: "Localizable", source: source, developmentValue: "The higher the fee, the better chances and faster your transaction will go through. Fees are based on current Ethereum blockchain network load.", comment: nil) }

      /// en translation: Accessing to perform transfer
      ///
      /// Key: transactionConfirmation.keystore.accessKey.sign
      ///
      /// Locales: en, zh-Hant
      var transactionConfirmationKeystoreAccessKeySign: RswiftResources.StringResource { .init(key: "transactionConfirmation.keystore.accessKey.sign", tableName: "Localizable", source: source, developmentValue: "Accessing to perform transfer", comment: nil) }

      /// en translation: Completed
      ///
      /// Key: transactionState.completed
      ///
      /// Locales: en, zh-Hant
      var transactionStateCompleted: RswiftResources.StringResource { .init(key: "transactionState.completed", tableName: "Localizable", source: source, developmentValue: "Completed", comment: nil) }

      /// en translation: Error
      ///
      /// Key: transactionState.error
      ///
      /// Locales: en, zh-Hant
      var transactionStateError: RswiftResources.StringResource { .init(key: "transactionState.error", tableName: "Localizable", source: source, developmentValue: "Error", comment: nil) }

      /// en translation: Failed
      ///
      /// Key: transactionState.failed
      ///
      /// Locales: en, zh-Hant
      var transactionStateFailed: RswiftResources.StringResource { .init(key: "transactionState.failed", tableName: "Localizable", source: source, developmentValue: "Failed", comment: nil) }

      /// en translation: Pending
      ///
      /// Key: transactionState.pending
      ///
      /// Locales: en, zh-Hant
      var transactionStatePending: RswiftResources.StringResource { .init(key: "transactionState.pending", tableName: "Localizable", source: source, developmentValue: "Pending", comment: nil) }

      /// en translation: Unknown
      ///
      /// Key: transactionState.unknown
      ///
      /// Locales: en, zh-Hant
      var transactionStateUnknown: RswiftResources.StringResource { .init(key: "transactionState.unknown", tableName: "Localizable", source: source, developmentValue: "Unknown", comment: nil) }

      /// en translation: No Transactions Yet!
      ///
      /// Key: transactions.noTransactions.label.title
      ///
      /// Locales: en, zh-Hant
      var transactionsNoTransactionsLabelTitle: RswiftResources.StringResource { .init(key: "transactions.noTransactions.label.title", tableName: "Localizable", source: source, developmentValue: "No Transactions Yet!", comment: nil) }

      /// en translation: You have received %@ %@
      ///
      /// Key: transactions.received.ether
      ///
      /// Locales: en, zh-Hant
      var transactionsReceivedEther: RswiftResources.StringResource2<String, String> { .init(key: "transactions.received.ether", tableName: "Localizable", source: source, developmentValue: "You have received %@ %@", comment: nil) }

      /// en translation: Allow Notifications When You Receive %@?
      ///
      /// Key: transactions.received.ether.notification.prompt
      ///
      /// Locales: en, zh-Hant
      var transactionsReceivedEtherNotificationPrompt: RswiftResources.StringResource1<String> { .init(key: "transactions.received.ether.notification.prompt", tableName: "Localizable", source: source, developmentValue: "Allow Notifications When You Receive %@?", comment: nil) }

      /// en translation: Transactions
      ///
      /// Key: transactions.tabbar.item.title
      ///
      /// Locales: en, zh-Hant
      var transactionsTabbarItemTitle: RswiftResources.StringResource { .init(key: "transactions.tabbar.item.title", tableName: "Localizable", source: source, developmentValue: "Transactions", comment: nil) }

      /// en translation: Uplinking
      ///
      /// Key: transactionsStateUpchaining
      ///
      /// Locales: en, zh-Hant
      var transactionsStateUpchaining: RswiftResources.StringResource { .init(key: "transactionsStateUpchaining", tableName: "Localizable", source: source, developmentValue: "Uplinking", comment: nil) }

      /// en translation: Be sure to transcribe the seed phrase in the correct order and keep them in a safe place
      ///
      /// Key: transcribe_seed_phrase_safe
      ///
      /// Locales: en, zh-Hant
      var transcribe_seed_phrase_safe: RswiftResources.StringResource { .init(key: "transcribe_seed_phrase_safe", tableName: "Localizable", source: source, developmentValue: "Be sure to transcribe the seed phrase in the correct order and keep them in a safe place", comment: nil) }

      /// en translation: Transfer
      ///
      /// Key: transfer
      ///
      /// Locales: en, zh-Hant
      var transfer: RswiftResources.StringResource { .init(key: "transfer", tableName: "Localizable", source: source, developmentValue: "Transfer", comment: nil) }

      /// en translation: Failed to transfer chat room
      ///
      /// Key: transferChatroomFail
      ///
      /// Locales: en, zh-Hant
      var transferChatroomFail: RswiftResources.StringResource { .init(key: "transferChatroomFail", tableName: "Localizable", source: source, developmentValue: "Failed to transfer chat room", comment: nil) }

      /// en translation: Chat room transferred
      ///
      /// Key: transferChatroomSuccess
      ///
      /// Locales: en, zh-Hant
      var transferChatroomSuccess: RswiftResources.StringResource { .init(key: "transferChatroomSuccess", tableName: "Localizable", source: source, developmentValue: "Chat room transferred", comment: nil) }

      /// en translation: Transfer quantity
      ///
      /// Key: transferamount
      ///
      /// Locales: en, zh-Hant
      var transferamount: RswiftResources.StringResource { .init(key: "transferamount", tableName: "Localizable", source: source, developmentValue: "Transfer quantity", comment: nil) }

      /// en translation: Transfer Details
      ///
      /// Key: transferdetail
      ///
      /// Locales: en, zh-Hant
      var transferdetail: RswiftResources.StringResource { .init(key: "transferdetail", tableName: "Localizable", source: source, developmentValue: "Transfer Details", comment: nil) }

      /// en translation: Transfer successful
      ///
      /// Key: transfersuccess
      ///
      /// Locales: en, zh-Hant
      var transfersuccess: RswiftResources.StringResource { .init(key: "transfersuccess", tableName: "Localizable", source: source, developmentValue: "Transfer successful", comment: nil) }

      /// en translation: Transfer time
      ///
      /// Key: transfertime
      ///
      /// Locales: en, zh-Hant
      var transfertime: RswiftResources.StringResource { .init(key: "transfertime", tableName: "Localizable", source: source, developmentValue: "Transfer time", comment: nil) }

      /// en translation: Transfer to a friend
      ///
      /// Key: transfertofriend
      ///
      /// Locales: en, zh-Hant
      var transfertofriend: RswiftResources.StringResource { .init(key: "transfertofriend", tableName: "Localizable", source: source, developmentValue: "Transfer to a friend", comment: nil) }

      /// en translation: Transfer user
      ///
      /// Key: transferuser
      ///
      /// Locales: en, zh-Hant
      var transferuser: RswiftResources.StringResource { .init(key: "transferuser", tableName: "Localizable", source: source, developmentValue: "Transfer user", comment: nil) }

      /// en translation: translate
      ///
      /// Key: translate
      ///
      /// Locales: en, zh-Hant
      var translate: RswiftResources.StringResource { .init(key: "translate", tableName: "Localizable", source: source, developmentValue: "translate", comment: nil) }

      /// en translation: Failed to transfer message
      ///
      /// Key: translateFail
      ///
      /// Locales: en, zh-Hant
      var translateFail: RswiftResources.StringResource { .init(key: "translateFail", tableName: "Localizable", source: source, developmentValue: "Failed to transfer message", comment: nil) }

      /// en translation: Network is busy, please try again later
      ///
      /// Key: tryagainlater
      ///
      /// Locales: en, zh-Hant
      var tryagainlater: RswiftResources.StringResource { .init(key: "tryagainlater", tableName: "Localizable", source: source, developmentValue: "Network is busy, please try again later", comment: nil) }

      /// en translation: Tuesday 
      ///
      /// Key: tuesday
      ///
      /// Locales: en, zh-Hant
      var tuesday: RswiftResources.StringResource { .init(key: "tuesday", tableName: "Localizable", source: source, developmentValue: "Tuesday ", comment: nil) }

      /// en translation: Twitter
      ///
      /// Key: twitter
      ///
      /// Locales: en, zh-Hant
      var twitter: RswiftResources.StringResource { .init(key: "twitter", tableName: "Localizable", source: source, developmentValue: "Twitter", comment: nil) }

      /// en translation: Twitter authentication
      ///
      /// Key: twitterauthentication
      ///
      /// Locales: en, zh-Hant
      var twitterauthentication: RswiftResources.StringResource { .init(key: "twitterauthentication", tableName: "Localizable", source: source, developmentValue: "Twitter authentication", comment: nil) }

      /// en translation: two
      ///
      /// Key: two
      ///
      /// Locales: en, zh-Hant
      var two: RswiftResources.StringResource { .init(key: "two", tableName: "Localizable", source: source, developmentValue: "two", comment: nil) }

      /// en translation: Two
      ///
      /// Key: two_traditional
      ///
      /// Locales: en, zh-Hant
      var two_traditional: RswiftResources.StringResource { .init(key: "two_traditional", tableName: "Localizable", source: source, developmentValue: "Two", comment: nil) }

      /// en translation: On-chain execution...
      ///
      /// Key: tx.pending
      ///
      /// Locales: en, zh-Hant
      var txPending: RswiftResources.StringResource { .init(key: "tx.pending", tableName: "Localizable", source: source, developmentValue: "On-chain execution...", comment: nil) }

      /// en translation: TX exchange
      ///
      /// Key: txexchange
      ///
      /// Locales: en, zh-Hant
      var txexchange: RswiftResources.StringResource { .init(key: "txexchange", tableName: "Localizable", source: source, developmentValue: "TX exchange", comment: nil) }

      /// en translation: Remaining quantity of TX: %@
      ///
      /// Key: txremaining
      ///
      /// Locales: en, zh-Hant
      var txremaining: RswiftResources.StringResource1<String> { .init(key: "txremaining", tableName: "Localizable", source: source, developmentValue: "Remaining quantity of TX: %@", comment: nil) }

      /// en translation: Select type
      ///
      /// Key: type
      ///
      /// Locales: en, zh-Hant
      var type: RswiftResources.StringResource { .init(key: "type", tableName: "Localizable", source: source, developmentValue: "Select type", comment: nil) }

      /// en translation: You have not bound the main wallet yet Please go to my interface to bind the main wallet before mining
      ///
      /// Key: unbindalerttitle
      ///
      /// Locales: en, zh-Hant
      var unbindalerttitle: RswiftResources.StringResource { .init(key: "unbindalerttitle", tableName: "Localizable", source: source, developmentValue: "You have not bound the main wallet yet\nPlease go to my interface to bind the main wallet before mining", comment: nil) }

      /// en translation: Not claimed
      ///
      /// Key: unclaimed
      ///
      /// Locales: en, zh-Hant
      var unclaimed: RswiftResources.StringResource { .init(key: "unclaimed", tableName: "Localizable", source: source, developmentValue: "Not claimed", comment: nil) }

      /// en translation: Dividends to be claimed: %@ TOX
      ///
      /// Key: unclaimed_dividends
      ///
      /// Locales: en, zh-Hant
      var unclaimed_dividends: RswiftResources.StringResource1<String> { .init(key: "unclaimed_dividends", tableName: "Localizable", source: source, developmentValue: "Dividends to be claimed: %@ TOX", comment: nil) }

      /// en translation: Undefined error
      ///
      /// Key: undefined.error
      ///
      /// Locales: en, zh-Hant
      var undefinedError: RswiftResources.StringResource { .init(key: "undefined.error", tableName: "Localizable", source: source, developmentValue: "Undefined error", comment: nil) }

      /// en translation: Under construction, stay tuned
      ///
      /// Key: underConstruction
      ///
      /// Locales: en, zh-Hant
      var underConstruction: RswiftResources.StringResource { .init(key: "underConstruction", tableName: "Localizable", source: source, developmentValue: "Under construction, stay tuned", comment: nil) }

      /// en translation: Loading
      ///
      /// Key: underloading
      ///
      /// Locales: en, zh-Hant
      var underloading: RswiftResources.StringResource { .init(key: "underloading", tableName: "Localizable", source: source, developmentValue: "Loading", comment: nil) }

      /// en translation: An  error occurred.
      ///
      /// Key: unknown.error
      ///
      /// Locales: en, zh-Hant
      var unknownError: RswiftResources.StringResource { .init(key: "unknown.error", tableName: "Localizable", source: source, developmentValue: "An  error occurred.", comment: nil) }

      /// en translation: Can’t identify QR code in the picture
      ///
      /// Key: unknownQRCode
      ///
      /// Locales: en, zh-Hant
      var unknownQRCode: RswiftResources.StringResource { .init(key: "unknownQRCode", tableName: "Localizable", source: source, developmentValue: "Can’t identify QR code in the picture", comment: nil) }

      /// en translation: Earn 0.1 MAT and unlock beginner tasks
      ///
      /// Key: unlock_beginner_tasks
      ///
      /// Locales: en, zh-Hant
      var unlock_beginner_tasks: RswiftResources.StringResource { .init(key: "unlock_beginner_tasks", tableName: "Localizable", source: source, developmentValue: "Earn 0.1 MAT and unlock beginner tasks", comment: nil) }

      /// en translation: Unlock Cloud Backup
      ///
      /// Key: unlockcloudbackup
      ///
      /// Locales: en, zh-Hant
      var unlockcloudbackup: RswiftResources.StringResource { .init(key: "unlockcloudbackup", tableName: "Localizable", source: source, developmentValue: "Unlock Cloud Backup", comment: nil) }

      /// en translation: Unlocked
      ///
      /// Key: unlocked
      ///
      /// Locales: en, zh-Hant
      var unlocked: RswiftResources.StringResource { .init(key: "unlocked", tableName: "Localizable", source: source, developmentValue: "Unlocked", comment: nil) }

      /// en translation: You have a cloud backup wallet under your account, please unlock at least one
      ///
      /// Key: unlockonewallet
      ///
      /// Locales: en, zh-Hant
      var unlockonewallet: RswiftResources.StringResource { .init(key: "unlockonewallet", tableName: "Localizable", source: source, developmentValue: "You have a cloud backup wallet under your account, please unlock at least one", comment: nil) }

      /// en translation: Unmute
      ///
      /// Key: unmute
      ///
      /// Locales: en, zh-Hant
      var unmute: RswiftResources.StringResource { .init(key: "unmute", tableName: "Localizable", source: source, developmentValue: "Unmute", comment: nil) }

      /// en translation: Failed to unmute
      ///
      /// Key: unmuteFail
      ///
      /// Locales: en, zh-Hant
      var unmuteFail: RswiftResources.StringResource { .init(key: "unmuteFail", tableName: "Localizable", source: source, developmentValue: "Failed to unmute", comment: nil) }

      /// en translation: Unmute group member %@
      ///
      /// Key: unmuteGroupMember
      ///
      /// Locales: en, zh-Hant
      var unmuteGroupMember: RswiftResources.StringResource1<String> { .init(key: "unmuteGroupMember", tableName: "Localizable", source: source, developmentValue: "Unmute group member %@", comment: nil) }

      /// en translation: Failed to remove from mute list
      ///
      /// Key: unmuteGroupMemberFail
      ///
      /// Locales: en, zh-Hant
      var unmuteGroupMemberFail: RswiftResources.StringResource { .init(key: "unmuteGroupMemberFail", tableName: "Localizable", source: source, developmentValue: "Failed to remove from mute list", comment: nil) }

      /// en translation: Unmute this member?
      ///
      /// Key: unmuteGroupMemberPrompt
      ///
      /// Locales: en, zh-Hant
      var unmuteGroupMemberPrompt: RswiftResources.StringResource { .init(key: "unmuteGroupMemberPrompt", tableName: "Localizable", source: source, developmentValue: "Unmute this member?", comment: nil) }

      /// en translation: Removed from mute list
      ///
      /// Key: unmuteGroupMemberSuccess
      ///
      /// Locales: en, zh-Hant
      var unmuteGroupMemberSuccess: RswiftResources.StringResource { .init(key: "unmuteGroupMemberSuccess", tableName: "Localizable", source: source, developmentValue: "Removed from mute list", comment: nil) }

      /// en translation: Unmute member...
      ///
      /// Key: unmuteMembering
      ///
      /// Locales: en, zh-Hant
      var unmuteMembering: RswiftResources.StringResource { .init(key: "unmuteMembering", tableName: "Localizable", source: source, developmentValue: "Unmute member...", comment: nil) }

      /// en translation: You have been unmuted.
      ///
      /// Key: unmutePrompt
      ///
      /// Locales: en, zh-Hant
      var unmutePrompt: RswiftResources.StringResource { .init(key: "unmutePrompt", tableName: "Localizable", source: source, developmentValue: "You have been unmuted.", comment: nil) }

      /// en translation: Unmuted
      ///
      /// Key: unmuteSuccess
      ///
      /// Locales: en, zh-Hant
      var unmuteSuccess: RswiftResources.StringResource { .init(key: "unmuteSuccess", tableName: "Localizable", source: source, developmentValue: "Unmuted", comment: nil) }

      /// en translation: You have been unmuted in group %@
      ///
      /// Key: unmutedPrompt
      ///
      /// Locales: en, zh-Hant
      var unmutedPrompt: RswiftResources.StringResource1<String> { .init(key: "unmutedPrompt", tableName: "Localizable", source: source, developmentValue: "You have been unmuted in group %@", comment: nil) }

      /// en translation: Show unread only
      ///
      /// Key: unreadPrompt
      ///
      /// Locales: en, zh-Hant
      var unreadPrompt: RswiftResources.StringResource { .init(key: "unreadPrompt", tableName: "Localizable", source: source, developmentValue: "Show unread only", comment: nil) }

      /// en translation: Block all group messages
      ///
      /// Key: unrecvMsgPrompt
      ///
      /// Locales: en, zh-Hant
      var unrecvMsgPrompt: RswiftResources.StringResource { .init(key: "unrecvMsgPrompt", tableName: "Localizable", source: source, developmentValue: "Block all group messages", comment: nil) }

      /// en translation: Elevate
      ///
      /// Key: upRight
      ///
      /// Locales: en, zh-Hant
      var upRight: RswiftResources.StringResource { .init(key: "upRight", tableName: "Localizable", source: source, developmentValue: "Elevate", comment: nil) }

      /// en translation: Backing up your wallet is the safest guarantee, just remember your private keys and keep them offline in a secret place.
      ///
      /// Key: up_safest_secret_place
      ///
      /// Locales: en, zh-Hant
      var up_safest_secret_place: RswiftResources.StringResource { .init(key: "up_safest_secret_place", tableName: "Localizable", source: source, developmentValue: "Backing up your wallet is the safest guarantee, just remember your private keys and keep them offline in a secret place.", comment: nil) }

      /// en translation: Failed to update chat room announcement
      ///
      /// Key: upateChatroomAnnounmentFail
      ///
      /// Locales: en, zh-Hant
      var upateChatroomAnnounmentFail: RswiftResources.StringResource { .init(key: "upateChatroomAnnounmentFail", tableName: "Localizable", source: source, developmentValue: "Failed to update chat room announcement", comment: nil) }

      /// en translation: Failed to get chat room announcement
      ///
      /// Key: upateChatroomAnnounmentSuccess
      ///
      /// Locales: en, zh-Hant
      var upateChatroomAnnounmentSuccess: RswiftResources.StringResource { .init(key: "upateChatroomAnnounmentSuccess", tableName: "Localizable", source: source, developmentValue: "Failed to get chat room announcement", comment: nil) }

      /// en translation: Change nickname
      ///
      /// Key: upateNickname
      ///
      /// Locales: en, zh-Hant
      var upateNickname: RswiftResources.StringResource { .init(key: "upateNickname", tableName: "Localizable", source: source, developmentValue: "Change nickname", comment: nil) }

      /// en translation: Failed to update profile photo%@
      ///
      /// Key: updateAvatarFailing
      ///
      /// Locales: en, zh-Hant
      var updateAvatarFailing: RswiftResources.StringResource1<String> { .init(key: "updateAvatarFailing", tableName: "Localizable", source: source, developmentValue: "Failed to update profile photo%@", comment: nil) }

      /// en translation: Update chatroom announcement...
      ///
      /// Key: updateChatroomAnning
      ///
      /// Locales: en, zh-Hant
      var updateChatroomAnning: RswiftResources.StringResource { .init(key: "updateChatroomAnning", tableName: "Localizable", source: source, developmentValue: "Update chatroom announcement...", comment: nil) }

      /// en translation: Failed to update chat room intro
      ///
      /// Key: updateChatroomDescriptionFail
      ///
      /// Locales: en, zh-Hant
      var updateChatroomDescriptionFail: RswiftResources.StringResource { .init(key: "updateChatroomDescriptionFail", tableName: "Localizable", source: source, developmentValue: "Failed to update chat room intro", comment: nil) }

      /// en translation: Update chatroom info...
      ///
      /// Key: updateChatroomDescriptioning
      ///
      /// Locales: en, zh-Hant
      var updateChatroomDescriptioning: RswiftResources.StringResource { .init(key: "updateChatroomDescriptioning", tableName: "Localizable", source: source, developmentValue: "Update chatroom info...", comment: nil) }

      /// en translation: Update chatroom name...
      ///
      /// Key: updateChatroomName
      ///
      /// Locales: en, zh-Hant
      var updateChatroomName: RswiftResources.StringResource { .init(key: "updateChatroomName", tableName: "Localizable", source: source, developmentValue: "Update chatroom name...", comment: nil) }

      /// en translation: Failed to update chat room name
      ///
      /// Key: updateChatroomSubjectFail
      ///
      /// Locales: en, zh-Hant
      var updateChatroomSubjectFail: RswiftResources.StringResource { .init(key: "updateChatroomSubjectFail", tableName: "Localizable", source: source, developmentValue: "Failed to update chat room name", comment: nil) }

      /// en translation: Failed to update group announcement
      ///
      /// Key: updateGroupAnnFail
      ///
      /// Locales: en, zh-Hant
      var updateGroupAnnFail: RswiftResources.StringResource { .init(key: "updateGroupAnnFail", tableName: "Localizable", source: source, developmentValue: "Failed to update group announcement", comment: nil) }

      /// en translation: Update group announcement...
      ///
      /// Key: updateGroupAnning
      ///
      /// Locales: en, zh-Hant
      var updateGroupAnning: RswiftResources.StringResource { .init(key: "updateGroupAnning", tableName: "Localizable", source: source, developmentValue: "Update group announcement...", comment: nil) }

      /// en translation: Failed to update the group intro
      ///
      /// Key: updateGroupDescriptionFail
      ///
      /// Locales: en, zh-Hant
      var updateGroupDescriptionFail: RswiftResources.StringResource { .init(key: "updateGroupDescriptionFail", tableName: "Localizable", source: source, developmentValue: "Failed to update the group intro", comment: nil) }

      /// en translation: Update group info...
      ///
      /// Key: updateGroupDescriptioning
      ///
      /// Locales: en, zh-Hant
      var updateGroupDescriptioning: RswiftResources.StringResource { .init(key: "updateGroupDescriptioning", tableName: "Localizable", source: source, developmentValue: "Update group info...", comment: nil) }

      /// en translation: Update group name...
      ///
      /// Key: updateGroupNameing
      ///
      /// Locales: en, zh-Hant
      var updateGroupNameing: RswiftResources.StringResource { .init(key: "updateGroupNameing", tableName: "Localizable", source: source, developmentValue: "Update group name...", comment: nil) }

      /// en translation: Update group setting...
      ///
      /// Key: updateGroupSettinging
      ///
      /// Locales: en, zh-Hant
      var updateGroupSettinging: RswiftResources.StringResource { .init(key: "updateGroupSettinging", tableName: "Localizable", source: source, developmentValue: "Update group setting...", comment: nil) }

      /// en translation: Failed to update the group chat name
      ///
      /// Key: updateGroupSubjectFail
      ///
      /// Locales: en, zh-Hant
      var updateGroupSubjectFail: RswiftResources.StringResource { .init(key: "updateGroupSubjectFail", tableName: "Localizable", source: source, developmentValue: "Failed to update the group chat name", comment: nil) }

      /// en translation: Failed to update nickname：%@
      ///
      /// Key: updateNicknameFail
      ///
      /// Locales: en, zh-Hant
      var updateNicknameFail: RswiftResources.StringResource1<String> { .init(key: "updateNicknameFail", tableName: "Localizable", source: source, developmentValue: "Failed to update nickname：%@", comment: nil) }

      /// en translation: Update nickname...
      ///
      /// Key: updateNicknameing
      ///
      /// Locales: en, zh-Hant
      var updateNicknameing: RswiftResources.StringResource { .init(key: "updateNicknameing", tableName: "Localizable", source: source, developmentValue: "Update nickname...", comment: nil) }

      /// en translation: Failed to update group settings
      ///
      /// Key: updateSettingFail
      ///
      /// Locales: en, zh-Hant
      var updateSettingFail: RswiftResources.StringResource { .init(key: "updateSettingFail", tableName: "Localizable", source: source, developmentValue: "Failed to update group settings", comment: nil) }

      /// en translation: Group settings updated
      ///
      /// Key: updateSettingSuccess
      ///
      /// Locales: en, zh-Hant
      var updateSettingSuccess: RswiftResources.StringResource { .init(key: "updateSettingSuccess", tableName: "Localizable", source: source, developmentValue: "Group settings updated", comment: nil) }

      /// en translation: Upgrading maintenance
      ///
      /// Key: upgrademaintenance
      ///
      /// Locales: en, zh-Hant
      var upgrademaintenance: RswiftResources.StringResource { .init(key: "upgrademaintenance", tableName: "Localizable", source: source, developmentValue: "Upgrading maintenance", comment: nil) }

      /// en translation: Online information
      ///
      /// Key: uplinkinformation
      ///
      /// Locales: en, zh-Hant
      var uplinkinformation: RswiftResources.StringResource { .init(key: "uplinkinformation", tableName: "Localizable", source: source, developmentValue: "Online information", comment: nil) }

      /// en translation: Upload
      ///
      /// Key: upload
      ///
      /// Locales: en, zh-Hant
      var upload: RswiftResources.StringResource { .init(key: "upload", tableName: "Localizable", source: source, developmentValue: "Upload", comment: nil) }

      /// en translation: Upload attachments to INTO server. If this function is disabled, you need to customize file uploads.
      ///
      /// Key: uploadAttachmengtPrompt
      ///
      /// Locales: en, zh-Hant
      var uploadAttachmengtPrompt: RswiftResources.StringResource { .init(key: "uploadAttachmengtPrompt", tableName: "Localizable", source: source, developmentValue: "Upload attachments to INTO server. If this function is disabled, you need to customize file uploads.", comment: nil) }

      /// en translation: Upload message attachments to server
      ///
      /// Key: uploadAttachment
      ///
      /// Locales: en, zh-Hant
      var uploadAttachment: RswiftResources.StringResource { .init(key: "uploadAttachment", tableName: "Localizable", source: source, developmentValue: "Upload message attachments to server", comment: nil) }

      /// en translation: Upload file
      ///
      /// Key: uploadFile
      ///
      /// Locales: en, zh-Hant
      var uploadFile: RswiftResources.StringResource { .init(key: "uploadFile", tableName: "Localizable", source: source, developmentValue: "Upload file", comment: nil) }

      /// en translation: Upload image
      ///
      /// Key: uploadImage
      ///
      /// Locales: en, zh-Hant
      var uploadImage: RswiftResources.StringResource { .init(key: "uploadImage", tableName: "Localizable", source: source, developmentValue: "Upload image", comment: nil) }

      /// en translation: Upload video
      ///
      /// Key: uploadVideo
      ///
      /// Locales: en, zh-Hant
      var uploadVideo: RswiftResources.StringResource { .init(key: "uploadVideo", tableName: "Localizable", source: source, developmentValue: "Upload video", comment: nil) }

      /// en translation: Upload the seed phrase to INTO Cloud to restore the wallet more conveniently
      ///
      /// Key: upload_seed_phrase_restore_wallet
      ///
      /// Locales: en, zh-Hant
      var upload_seed_phrase_restore_wallet: RswiftResources.StringResource { .init(key: "upload_seed_phrase_restore_wallet", tableName: "Localizable", source: source, developmentValue: "Upload the seed phrase to INTO Cloud to restore the wallet more conveniently", comment: nil) }

      /// en translation: Uploading shared file...
      ///
      /// Key: uploadingShareFileing
      ///
      /// Locales: en, zh-Hant
      var uploadingShareFileing: RswiftResources.StringResource { .init(key: "uploadingShareFileing", tableName: "Localizable", source: source, developmentValue: "Uploading shared file...", comment: nil) }

      /// en translation: Failed to upload shared files
      ///
      /// Key: uploadsharedFileFail
      ///
      /// Locales: en, zh-Hant
      var uploadsharedFileFail: RswiftResources.StringResource { .init(key: "uploadsharedFileFail", tableName: "Localizable", source: source, developmentValue: "Failed to upload shared files", comment: nil) }

      /// en translation: Slide Up Cancel
      ///
      /// Key: upslidecancellation
      ///
      /// Locales: en, zh-Hant
      var upslidecancellation: RswiftResources.StringResource { .init(key: "upslidecancellation", tableName: "Localizable", source: source, developmentValue: "Slide Up Cancel", comment: nil) }

      /// en translation: urban pioneer
      ///
      /// Key: urban_pioneer
      ///
      /// Locales: en, zh-Hant
      var urban_pioneer: RswiftResources.StringResource { .init(key: "urban_pioneer", tableName: "Localizable", source: source, developmentValue: "urban pioneer", comment: nil) }

      /// en translation: Discord
      ///
      /// Key: url.discord
      ///
      /// Locales: en, zh-Hant
      var urlDiscord: RswiftResources.StringResource { .init(key: "url.discord", tableName: "Localizable", source: source, developmentValue: "Discord", comment: nil) }

      /// en translation: Facebook
      ///
      /// Key: url.facebook
      ///
      /// Locales: en, zh-Hant
      var urlFacebook: RswiftResources.StringResource { .init(key: "url.facebook", tableName: "Localizable", source: source, developmentValue: "Facebook", comment: nil) }

      /// en translation: faq
      ///
      /// Key: url.faq
      ///
      /// Locales: en, zh-Hant
      var urlFaq: RswiftResources.StringResource { .init(key: "url.faq", tableName: "Localizable", source: source, developmentValue: "faq", comment: nil) }

      /// en translation: Github (File an issue)
      ///
      /// Key: url.github
      ///
      /// Locales: en, zh-Hant
      var urlGithub: RswiftResources.StringResource { .init(key: "url.github", tableName: "Localizable", source: source, developmentValue: "Github (File an issue)", comment: nil) }

      /// en translation: Reddit
      ///
      /// Key: url.reddit
      ///
      /// Locales: en, zh-Hant
      var urlReddit: RswiftResources.StringResource { .init(key: "url.reddit", tableName: "Localizable", source: source, developmentValue: "Reddit", comment: nil) }

      /// en translation: Telegram (Customer Support)
      ///
      /// Key: url.telegramCustomer
      ///
      /// Locales: en, zh-Hant
      var urlTelegramCustomer: RswiftResources.StringResource { .init(key: "url.telegramCustomer", tableName: "Localizable", source: source, developmentValue: "Telegram (Customer Support)", comment: nil) }

      /// en translation: Twitter
      ///
      /// Key: url.twitter
      ///
      /// Locales: en, zh-Hant
      var urlTwitter: RswiftResources.StringResource { .init(key: "url.twitter", tableName: "Localizable", source: source, developmentValue: "Twitter", comment: nil) }

      /// en translation: Restore default configuration
      ///
      /// Key: useDefaultConfig
      ///
      /// Locales: en, zh-Hant
      var useDefaultConfig: RswiftResources.StringResource { .init(key: "useDefaultConfig", tableName: "Localizable", source: source, developmentValue: "Restore default configuration", comment: nil) }

      /// en translation: [Personal Business Card]
      ///
      /// Key: userCard
      ///
      /// Locales: en, zh-Hant
      var userCard: RswiftResources.StringResource { .init(key: "userCard", tableName: "Localizable", source: source, developmentValue: "[Personal Business Card]", comment: nil) }

      /// en translation: Username
      ///
      /// Key: userId
      ///
      /// Locales: en, zh-Hant
      var userId: RswiftResources.StringResource { .init(key: "userId", tableName: "Localizable", source: source, developmentValue: "Username", comment: nil) }

      /// en translation: Incorrect username or password
      ///
      /// Key: userIdOrPwdError
      ///
      /// Locales: en, zh-Hant
      var userIdOrPwdError: RswiftResources.StringResource { .init(key: "userIdOrPwdError", tableName: "Localizable", source: source, developmentValue: "Incorrect username or password", comment: nil) }

      /// en translation: Change avatar
      ///
      /// Key: userInfo.changeIcon
      ///
      /// Locales: en, zh-Hant
      var userInfoChangeIcon: RswiftResources.StringResource { .init(key: "userInfo.changeIcon", tableName: "Localizable", source: source, developmentValue: "Change avatar", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: userInfo.confirm
      ///
      /// Locales: en, zh-Hant
      var userInfoConfirm: RswiftResources.StringResource { .init(key: "userInfo.confirm", tableName: "Localizable", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Country / Region
      ///
      /// Key: userInfo.conuntry
      ///
      /// Locales: en, zh-Hant
      var userInfoConuntry: RswiftResources.StringResource { .init(key: "userInfo.conuntry", tableName: "Localizable", source: source, developmentValue: "Country / Region", comment: nil) }

      /// en translation: Please enter a nickname
      ///
      /// Key: userInfo.enterNickname
      ///
      /// Locales: en, zh-Hant
      var userInfoEnterNickname: RswiftResources.StringResource { .init(key: "userInfo.enterNickname", tableName: "Localizable", source: source, developmentValue: "Please enter a nickname", comment: nil) }

      /// en translation: Input phone number
      ///
      /// Key: userInfo.enterPhone
      ///
      /// Locales: en, zh-Hant
      var userInfoEnterPhone: RswiftResources.StringResource { .init(key: "userInfo.enterPhone", tableName: "Localizable", source: source, developmentValue: "Input phone number", comment: nil) }

      /// en translation: Please enter a personalized signature
      ///
      /// Key: userInfo.enterSign
      ///
      /// Locales: en, zh-Hant
      var userInfoEnterSign: RswiftResources.StringResource { .init(key: "userInfo.enterSign", tableName: "Localizable", source: source, developmentValue: "Please enter a personalized signature", comment: nil) }

      /// en translation: Next step
      ///
      /// Key: userInfo.next
      ///
      /// Locales: en, zh-Hant
      var userInfoNext: RswiftResources.StringResource { .init(key: "userInfo.next", tableName: "Localizable", source: source, developmentValue: "Next step", comment: nil) }

      /// en translation: Nick name
      ///
      /// Key: userInfo.nickname
      ///
      /// Locales: en, zh-Hant
      var userInfoNickname: RswiftResources.StringResource { .init(key: "userInfo.nickname", tableName: "Localizable", source: source, developmentValue: "Nick name", comment: nil) }

      /// en translation: Input phone number
      ///
      /// Key: userInfo.phoneLogin
      ///
      /// Locales: en, zh-Hant
      var userInfoPhoneLogin: RswiftResources.StringResource { .init(key: "userInfo.phoneLogin", tableName: "Localizable", source: source, developmentValue: "Input phone number", comment: nil) }

      /// en translation: Photograph
      ///
      /// Key: userInfo.phonePic
      ///
      /// Locales: en, zh-Hant
      var userInfoPhonePic: RswiftResources.StringResource { .init(key: "userInfo.phonePic", tableName: "Localizable", source: source, developmentValue: "Photograph", comment: nil) }

      /// en translation: Select from phone gallery
      ///
      /// Key: userInfo.phoneSelectPic
      ///
      /// Locales: en, zh-Hant
      var userInfoPhoneSelectPic: RswiftResources.StringResource { .init(key: "userInfo.phoneSelectPic", tableName: "Localizable", source: source, developmentValue: "Select from phone gallery", comment: nil) }

      /// en translation: Scan the QR code above and add me as a friend
      ///
      /// Key: userInfo.scan
      ///
      /// Locales: en, zh-Hant
      var userInfoScan: RswiftResources.StringResource { .init(key: "userInfo.scan", tableName: "Localizable", source: source, developmentValue: "Scan the QR code above and add me as a friend", comment: nil) }

      /// en translation: Search
      ///
      /// Key: userInfo.search
      ///
      /// Locales: en, zh-Hant
      var userInfoSearch: RswiftResources.StringResource { .init(key: "userInfo.search", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: We will send you a verification code for that phone number
      ///
      /// Key: userInfo.sendCode
      ///
      /// Locales: en, zh-Hant
      var userInfoSendCode: RswiftResources.StringResource { .init(key: "userInfo.sendCode", tableName: "Localizable", source: source, developmentValue: "We will send you a verification code for that phone number", comment: nil) }

      /// en translation: You can modify your user nickname
      ///
      /// Key: userInfo.setNickname
      ///
      /// Locales: en, zh-Hant
      var userInfoSetNickname: RswiftResources.StringResource { .init(key: "userInfo.setNickname", tableName: "Localizable", source: source, developmentValue: "You can modify your user nickname", comment: nil) }

      /// en translation: Set up a personalized signature
      ///
      /// Key: userInfo.setSign
      ///
      /// Locales: en, zh-Hant
      var userInfoSetSign: RswiftResources.StringResource { .init(key: "userInfo.setSign", tableName: "Localizable", source: source, developmentValue: "Set up a personalized signature", comment: nil) }

      /// en translation: Modify nickname
      ///
      /// Key: userInfo.setUserName
      ///
      /// Locales: en, zh-Hant
      var userInfoSetUserName: RswiftResources.StringResource { .init(key: "userInfo.setUserName", tableName: "Localizable", source: source, developmentValue: "Modify nickname", comment: nil) }

      /// en translation: You can set your personalized signature
      ///
      /// Key: userInfo.setVipSign
      ///
      /// Locales: en, zh-Hant
      var userInfoSetVipSign: RswiftResources.StringResource { .init(key: "userInfo.setVipSign", tableName: "Localizable", source: source, developmentValue: "You can set your personalized signature", comment: nil) }

      /// en translation: Sign
      ///
      /// Key: userInfo.sign
      ///
      /// Locales: en, zh-Hant
      var userInfoSign: RswiftResources.StringResource { .init(key: "userInfo.sign", tableName: "Localizable", source: source, developmentValue: "Sign", comment: nil) }

      /// en translation: User ID does not exist
      ///
      /// Key: userNotFount
      ///
      /// Locales: en, zh-Hant
      var userNotFount: RswiftResources.StringResource { .init(key: "userNotFount", tableName: "Localizable", source: source, developmentValue: "User ID does not exist", comment: nil) }

      /// en translation: User ID or password cannot be empty.
      ///
      /// Key: userOrPwdEmpty
      ///
      /// Locales: en, zh-Hant
      var userOrPwdEmpty: RswiftResources.StringResource { .init(key: "userOrPwdEmpty", tableName: "Localizable", source: source, developmentValue: "User ID or password cannot be empty.", comment: nil) }

      /// en translation: This account has been deleted by the administrator.
      ///
      /// Key: userRemovedByServer
      ///
      /// Locales: en, zh-Hant
      var userRemovedByServer: RswiftResources.StringResource { .init(key: "userRemovedByServer", tableName: "Localizable", source: source, developmentValue: "This account has been deleted by the administrator.", comment: nil) }

      /// en translation: Username already exists, please enter another one.
      ///
      /// Key: userUsed
      ///
      /// Locales: en, zh-Hant
      var userUsed: RswiftResources.StringResource { .init(key: "userUsed", tableName: "Localizable", source: source, developmentValue: "Username already exists, please enter another one.", comment: nil) }

      /// en translation: You must abide by laws and regulations when using this service, and may not produce, copy, publish, or disseminate information containing the following contents or engage in related behaviors, nor may you provide convenience for the production, copy, publish, disseminate information containing the following contents, or engage in related behaviors. : (1) Opposing the basic principles established by the Constitution; (2) Endangering national security, leaking state secrets, subverting state power, and undermining national unity; (3) Damaging national honor and interests;  n(4) Distorting, vilifying, blaspheming, or denying the deeds and spirit of heroes and martyrs, and insulting, slandering, or otherwise infringing on the names, portraits, reputation, and honor of heroes and martyrs; (5) Promoting terrorism, extremism, or inciting Carrying out terrorist activities and extremist activities; (6) Inciting ethnic hatred and discrimination and undermining ethnic unity; (7) Undermining national religious policies and promoting cults and feudal superstitions; (8) Spreading rumors , disrupting social order and undermining social stability; (9) Spreading obscenity, pornography, gambling, violence, terror or instigating crimes; (10) Insulting or slandering others, infringing on others' reputation, privacy and other legitimate rights and interests ; (11) Using exaggerated titles, the content is seriously inconsistent with the title; (12) Hyping up scandals, scandals, misdeeds, etc.; (13) Improperly commenting on natural disasters, major accidents and other disasters; ( 14) With sexual hints, sexual provocations, etc. that can easily lead to sexual associations; (15) Shows blood, horror, cruelty, etc. that cause physical and mental discomfort; (16) Incites group discrimination, regional discrimination, etc.;  (17) Promote vulgar, vulgar, kitsch content; (18) May cause minors to imitate unsafe behaviors and violate social morality, induce minors to have bad habits, etc.; (19) Infringe upon minors Content that harms the legitimate rights and interests of adults or harms the physical and mental health of minors; (20) Inciting illegal gatherings, associations, marches, demonstrations, and gatherings of people to disrupt social order; (21) Activities in the name of illegal civil organizations; ( 22) Failure to comply with the "Interim Regulations on the Development and Management of Public Information Services of Instant Messaging Tools" and the "seven bottom lines" requirements such as complying with laws and regulations, socialist system, national interests, legitimate interests of citizens, public order, social morals and information authenticity;  (23) Other content prohibited by laws and administrative regulations.
      ///
      /// Key: user_gener_prototol
      ///
      /// Locales: en, zh-Hant
      var user_gener_prototol: RswiftResources.StringResource { .init(key: "user_gener_prototol", tableName: "Localizable", source: source, developmentValue: "You must abide by laws and regulations when using this service, and may not produce, copy, publish, or disseminate information containing the following contents or engage in related behaviors, nor may you provide convenience for the production, copy, publish, disseminate information containing the following contents, or engage in related behaviors. :\n(1) Opposing the basic principles established by the Constitution;\n(2) Endangering national security, leaking state secrets, subverting state power, and undermining national unity;\n(3) Damaging national honor and interests;\n n(4) Distorting, vilifying, blaspheming, or denying the deeds and spirit of heroes and martyrs, and insulting, slandering, or otherwise infringing on the names, portraits, reputation, and honor of heroes and martyrs;\n(5) Promoting terrorism, extremism, or inciting Carrying out terrorist activities and extremist activities;\n(6) Inciting ethnic hatred and discrimination and undermining ethnic unity;\n(7) Undermining national religious policies and promoting cults and feudal superstitions;\n(8) Spreading rumors , disrupting social order and undermining social stability;\n(9) Spreading obscenity, pornography, gambling, violence, terror or instigating crimes;\n(10) Insulting or slandering others, infringing on others' reputation, privacy and other legitimate rights and interests ;\n(11) Using exaggerated titles, the content is seriously inconsistent with the title;\n(12) Hyping up scandals, scandals, misdeeds, etc.;\n(13) Improperly commenting on natural disasters, major accidents and other disasters;\n( 14) With sexual hints, sexual provocations, etc. that can easily lead to sexual associations;\n(15) Shows blood, horror, cruelty, etc. that cause physical and mental discomfort;\n(16) Incites group discrimination, regional discrimination, etc.; \n(17) Promote vulgar, vulgar, kitsch content;\n(18) May cause minors to imitate unsafe behaviors and violate social morality, induce minors to have bad habits, etc.;\n(19) Infringe upon minors Content that harms the legitimate rights and interests of adults or harms the physical and mental health of minors;\n(20) Inciting illegal gatherings, associations, marches, demonstrations, and gatherings of people to disrupt social order;\n(21) Activities in the name of illegal civil organizations;\n( 22) Failure to comply with the \"Interim Regulations on the Development and Management of Public Information Services of Instant Messaging Tools\" and the \"seven bottom lines\" requirements such as complying with laws and regulations, socialist system, national interests, legitimate interests of citizens, public order, social morals and information authenticity; \n(23) Other content prohibited by laws and administrative regulations.", comment: nil) }

      /// en translation: User Generated Content License Agreement
      ///
      /// Key: user_gener_title
      ///
      /// Locales: en, zh-Hant
      var user_gener_title: RswiftResources.StringResource { .init(key: "user_gener_title", tableName: "Localizable", source: source, developmentValue: "User Generated Content License Agreement", comment: nil) }

      /// en translation: The user already has a main wallet, which has been bound normally
      ///
      /// Key: userhasmainbind
      ///
      /// Locales: en, zh-Hant
      var userhasmainbind: RswiftResources.StringResource { .init(key: "userhasmainbind", tableName: "Localizable", source: source, developmentValue: "The user already has a main wallet, which has been bound normally", comment: nil) }

      /// en translation: %lu in total
      ///
      /// Key: usersCount
      ///
      /// Locales: en, zh-Hant
      var usersCount: RswiftResources.StringResource1<UInt> { .init(key: "usersCount", tableName: "Localizable", source: source, developmentValue: "%lu in total", comment: nil) }

      /// en translation: The verification code has been sent to 86138000000000
      ///
      /// Key: verification_code_sent
      ///
      /// Locales: en, zh-Hant
      var verification_code_sent: RswiftResources.StringResource { .init(key: "verification_code_sent", tableName: "Localizable", source: source, developmentValue: "The verification code has been sent to 86138000000000", comment: nil) }

      /// en translation: Verification successful, precise and invincible
      ///
      /// Key: verifiedsuccess
      ///
      /// Locales: en, zh-Hant
      var verifiedsuccess: RswiftResources.StringResource { .init(key: "verifiedsuccess", tableName: "Localizable", source: source, developmentValue: "Verification successful, precise and invincible", comment: nil) }

      /// en translation: Please select and fill in the mnemonics in order based on the backup you provided.
      ///
      /// Key: verifymnemonicsubtitle
      ///
      /// Locales: en, zh-Hant
      var verifymnemonicsubtitle: RswiftResources.StringResource { .init(key: "verifymnemonicsubtitle", tableName: "Localizable", source: source, developmentValue: "Please select and fill in the mnemonics in order based on the backup you provided.", comment: nil) }

      /// en translation: Update immediately
      ///
      /// Key: version.update.commit
      ///
      /// Locales: en, zh-Hant
      var versionUpdateCommit: RswiftResources.StringResource { .init(key: "version.update.commit", tableName: "Localizable", source: source, developmentValue: "Update immediately", comment: nil) }

      /// en translation: Already the latest version
      ///
      /// Key: version.update.courent
      ///
      /// Locales: en, zh-Hant
      var versionUpdateCourent: RswiftResources.StringResource { .init(key: "version.update.courent", tableName: "Localizable", source: source, developmentValue: "Already the latest version", comment: nil) }

      /// en translation: New version found
      ///
      /// Key: version.update.discover
      ///
      /// Locales: en, zh-Hant
      var versionUpdateDiscover: RswiftResources.StringResource { .init(key: "version.update.discover", tableName: "Localizable", source: source, developmentValue: "New version found", comment: nil) }

      /// en translation: Video call
      ///
      /// Key: videoCall
      ///
      /// Locales: en, zh-Hant
      var videoCall: RswiftResources.StringResource { .init(key: "videoCall", tableName: "Localizable", source: source, developmentValue: "Video call", comment: nil) }

      /// en translation: View in %@
      ///
      /// Key: view in
      ///
      /// Locales: en, zh-Hant
      var viewIn: RswiftResources.StringResource1<String> { .init(key: "view in", tableName: "Localizable", source: source, developmentValue: "View in %@", comment: nil) }

      /// en translation: View private key
      ///
      /// Key: view_private_key
      ///
      /// Locales: en, zh-Hant
      var view_private_key: RswiftResources.StringResource { .init(key: "view_private_key", tableName: "Localizable", source: source, developmentValue: "View private key", comment: nil) }

      /// en translation: View claim details>
      ///
      /// Key: viewclaimdetails
      ///
      /// Locales: en, zh-Hant
      var viewclaimdetails: RswiftResources.StringResource { .init(key: "viewclaimdetails", tableName: "Localizable", source: source, developmentValue: "View claim details>", comment: nil) }

      /// en translation: Visit website
      ///
      /// Key: visitWebsite
      ///
      /// Locales: en, zh-Hant
      var visitWebsite: RswiftResources.StringResource { .init(key: "visitWebsite", tableName: "Localizable", source: source, developmentValue: "Visit website", comment: nil) }

      /// en translation: Visit Wiki
      ///
      /// Key: visitWiki
      ///
      /// Locales: en, zh-Hant
      var visitWiki: RswiftResources.StringResource { .init(key: "visitWiki", tableName: "Localizable", source: source, developmentValue: "Visit Wiki", comment: nil) }

      /// en translation: Click to start talking
      ///
      /// Key: voiceTouchDownPlay
      ///
      /// Locales: en, zh-Hant
      var voiceTouchDownPlay: RswiftResources.StringResource { .init(key: "voiceTouchDownPlay", tableName: "Localizable", source: source, developmentValue: "Click to start talking", comment: nil) }

      /// en translation: Click the button to end
      ///
      /// Key: voiceTouchDownStop
      ///
      /// Locales: en, zh-Hant
      var voiceTouchDownStop: RswiftResources.StringResource { .init(key: "voiceTouchDownStop", tableName: "Localizable", source: source, developmentValue: "Click the button to end", comment: nil) }

      /// en translation: Speech too short
      ///
      /// Key: voicetooshor
      ///
      /// Locales: en, zh-Hant
      var voicetooshor: RswiftResources.StringResource { .init(key: "voicetooshor", tableName: "Localizable", source: source, developmentValue: "Speech too short", comment: nil) }

      /// en translation: Please wait...
      ///
      /// Key: wait
      ///
      /// Locales: en, zh-Hant
      var wait: RswiftResources.StringResource { .init(key: "wait", tableName: "Localizable", source: source, developmentValue: "Please wait...", comment: nil) }

      /// en translation: Waiting for the other party to collect it
      ///
      /// Key: waittoreceive
      ///
      /// Locales: en, zh-Hant
      var waittoreceive: RswiftResources.StringResource { .init(key: "waittoreceive", tableName: "Localizable", source: source, developmentValue: "Waiting for the other party to collect it", comment: nil) }

      /// en translation: Welfare package
      ///
      /// Key: walfare_package
      ///
      /// Locales: en, zh-Hant
      var walfare_package: RswiftResources.StringResource { .init(key: "walfare_package", tableName: "Localizable", source: source, developmentValue: "Welfare package", comment: nil) }

      /// en translation: Wallet address
      ///
      /// Key: wallet.address
      ///
      /// Locales: en, zh-Hant
      var walletAddress: RswiftResources.StringResource { .init(key: "wallet.address", tableName: "Localizable", source: source, developmentValue: "Wallet address", comment: nil) }

      /// en translation: Create Wallet
      ///
      /// Key: wallet.create.button.title
      ///
      /// Locales: en, zh-Hant
      var walletCreateButtonTitle: RswiftResources.StringResource { .init(key: "wallet.create.button.title", tableName: "Localizable", source: source, developmentValue: "Create Wallet", comment: nil) }

      /// en translation: Creating wallet...
      ///
      /// Key: wallet.create.inProgress
      ///
      /// Locales: en, zh-Hant
      var walletCreateInProgress: RswiftResources.StringResource { .init(key: "wallet.create.inProgress", tableName: "Localizable", source: source, developmentValue: "Creating wallet...", comment: nil) }

      /// en translation: Import Wallet
      ///
      /// Key: wallet.import.button.title
      ///
      /// Locales: en, zh-Hant
      var walletImportButtonTitle: RswiftResources.StringResource { .init(key: "wallet.import.button.title", tableName: "Localizable", source: source, developmentValue: "Import Wallet", comment: nil) }

      /// en translation: Change Wallet
      ///
      /// Key: wallet.navigation.title
      ///
      /// Locales: en, zh-Hant
      var walletNavigationTitle: RswiftResources.StringResource { .init(key: "wallet.navigation.title", tableName: "Localizable", source: source, developmentValue: "Change Wallet", comment: nil) }

      /// en translation: Enter Name
      ///
      /// Key: wallet.rename.enterNameTitle
      ///
      /// Locales: en, zh-Hant
      var walletRenameEnterNameTitle: RswiftResources.StringResource { .init(key: "wallet.rename.enterNameTitle", tableName: "Localizable", source: source, developmentValue: "Enter Name", comment: nil) }

      /// en translation: Save Name
      ///
      /// Key: wallet.rename.save
      ///
      /// Locales: en, zh-Hant
      var walletRenameSave: RswiftResources.StringResource { .init(key: "wallet.rename.save", tableName: "Localizable", source: source, developmentValue: "Save Name", comment: nil) }

      /// en translation: 100% SECURE
      ///
      /// Key: wallet.security.level.green
      ///
      /// Locales: en, zh-Hant
      var walletSecurityLevelGreen: RswiftResources.StringResource { .init(key: "wallet.security.level.green", tableName: "Localizable", source: source, developmentValue: "100% SECURE", comment: nil) }

      /// en translation: NOT LOCKED
      ///
      /// Key: wallet.security.level.orange
      ///
      /// Locales: en, zh-Hant
      var walletSecurityLevelOrange: RswiftResources.StringResource { .init(key: "wallet.security.level.orange", tableName: "Localizable", source: source, developmentValue: "NOT LOCKED", comment: nil) }

      /// en translation: BACK UP NOW!
      ///
      /// Key: wallet.security.level.red
      ///
      /// Locales: en, zh-Hant
      var walletSecurityLevelRed: RswiftResources.StringResource { .init(key: "wallet.security.level.red", tableName: "Localizable", source: source, developmentValue: "BACK UP NOW!", comment: nil) }

      /// en translation: %@ Today
      ///
      /// Key: wallet.summary.today
      ///
      /// Locales: en, zh-Hant
      var walletSummaryToday: RswiftResources.StringResource1<String> { .init(key: "wallet.summary.today", tableName: "Localizable", source: source, developmentValue: "%@ Today", comment: nil) }

      /// en translation: Connected Wallets
      ///
      /// Key: wallet.types.hdWallets
      ///
      /// Locales: en, zh-Hant
      var walletTypesHdWallets: RswiftResources.StringResource { .init(key: "wallet.types.hdWallets", tableName: "Localizable", source: source, developmentValue: "Connected Wallets", comment: nil) }

      /// en translation: Keystore Wallets
      ///
      /// Key: wallet.types.keystoreWallets
      ///
      /// Locales: en, zh-Hant
      var walletTypesKeystoreWallets: RswiftResources.StringResource { .init(key: "wallet.types.keystoreWallets", tableName: "Localizable", source: source, developmentValue: "Keystore Wallets", comment: nil) }

      /// en translation: Summary
      ///
      /// Key: wallet.types.summary
      ///
      /// Locales: en, zh-Hant
      var walletTypesSummary: RswiftResources.StringResource { .init(key: "wallet.types.summary", tableName: "Localizable", source: source, developmentValue: "Summary", comment: nil) }

      /// en translation: Watch-only Wallets
      ///
      /// Key: wallet.types.watchedWallets
      ///
      /// Locales: en, zh-Hant
      var walletTypesWatchedWallets: RswiftResources.StringResource { .init(key: "wallet.types.watchedWallets", tableName: "Localizable", source: source, developmentValue: "Watch-only Wallets", comment: nil) }

      /// en translation: Watch Wallet
      ///
      /// Key: wallet.watch.button.title
      ///
      /// Locales: en, zh-Hant
      var walletWatchButtonTitle: RswiftResources.StringResource { .init(key: "wallet.watch.button.title", tableName: "Localizable", source: source, developmentValue: "Watch Wallet", comment: nil) }

      /// en translation: Active connection to Dapps
      ///
      /// Key: walletConnect.activeSessions
      ///
      /// Locales: en, zh-Hant
      var walletConnectActiveSessions: RswiftResources.StringResource { .init(key: "walletConnect.activeSessions", tableName: "Localizable", source: source, developmentValue: "Active connection to Dapps", comment: nil) }

      /// en translation: Active connections to Dapps
      ///
      /// Key: walletConnect.activeSessions.plural
      ///
      /// Locales: en, zh-Hant
      var walletConnectActiveSessionsPlural: RswiftResources.StringResource { .init(key: "walletConnect.activeSessions.plural", tableName: "Localizable", source: source, developmentValue: "Active connections to Dapps", comment: nil) }

      /// en translation: Events
      ///
      /// Key: walletConnect.connection.events.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectConnectionEventsTitle: RswiftResources.StringResource { .init(key: "walletConnect.connection.events.title", tableName: "Localizable", source: source, developmentValue: "Events", comment: nil) }

      /// en translation: Methods
      ///
      /// Key: walletConnect.connection.methods.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectConnectionMethodsTitle: RswiftResources.StringResource { .init(key: "walletConnect.connection.methods.title", tableName: "Localizable", source: source, developmentValue: "Methods", comment: nil) }

      /// en translation: Name
      ///
      /// Key: walletConnect.connection.name.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectConnectionNameTitle: RswiftResources.StringResource { .init(key: "walletConnect.connection.name.title", tableName: "Localizable", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: Network
      ///
      /// Key: walletConnect.connection.network.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectConnectionNetworkTitle: RswiftResources.StringResource { .init(key: "walletConnect.connection.network.title", tableName: "Localizable", source: source, developmentValue: "Network", comment: nil) }

      /// en translation: Networks
      ///
      /// Key: walletConnect.connection.networks.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectConnectionNetworksTitle: RswiftResources.StringResource { .init(key: "walletConnect.connection.networks.title", tableName: "Localizable", source: source, developmentValue: "Networks", comment: nil) }

      /// en translation: Connect To Site?
      ///
      /// Key: walletConnect.connection.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectConnectionTitle: RswiftResources.StringResource { .init(key: "walletConnect.connection.title", tableName: "Localizable", source: source, developmentValue: "Connect To Site?", comment: nil) }

      /// en translation: Connected To
      ///
      /// Key: walletConnect.connection.url.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectConnectionUrlTitle: RswiftResources.StringResource { .init(key: "walletConnect.connection.url.title", tableName: "Localizable", source: source, developmentValue: "Connected To", comment: nil) }

      /// en translation: Name
      ///
      /// Key: walletConnect.dapp.name
      ///
      /// Locales: en, zh-Hant
      var walletConnectDappName: RswiftResources.StringResource { .init(key: "walletConnect.dapp.name", tableName: "Localizable", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: Website
      ///
      /// Key: walletConnect.dapp.website
      ///
      /// Locales: en, zh-Hant
      var walletConnectDappWebsite: RswiftResources.StringResource { .init(key: "walletConnect.dapp.website", tableName: "Localizable", source: source, developmentValue: "Website", comment: nil) }

      /// en translation: You tried to connect with WalletConnect. Well.. It takes too long. Please generate a fresh QR code and try again.
      ///
      /// Key: walletConnect.error.connectionTimeout.errorMessage
      ///
      /// Locales: en, zh-Hant
      var walletConnectErrorConnectionTimeoutErrorMessage: RswiftResources.StringResource { .init(key: "walletConnect.error.connectionTimeout.errorMessage", tableName: "Localizable", source: source, developmentValue: "You tried to connect with WalletConnect.\nWell.. It takes too long. Please generate\na fresh QR code and try again.", comment: nil) }

      /// en translation: Try WalletConnect again
      ///
      /// Key: walletConnect.error.connectionTimeout.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectErrorConnectionTimeoutTitle: RswiftResources.StringResource { .init(key: "walletConnect.error.connectionTimeout.title", tableName: "Localizable", source: source, developmentValue: "Try WalletConnect again", comment: nil) }

      /// en translation: Request Rejected! Switch to non watched wallet
      ///
      /// Key: walletConnect.failure.mustNotBeWatchedWallet
      ///
      /// Locales: en, zh-Hant
      var walletConnectFailureMustNotBeWatchedWallet: RswiftResources.StringResource { .init(key: "walletConnect.failure.mustNotBeWatchedWallet", tableName: "Localizable", source: source, developmentValue: "Request Rejected! Switch to non watched wallet", comment: nil) }

      /// en translation: WalletConnect Error
      ///
      /// Key: walletConnect.failure.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectFailureTitle: RswiftResources.StringResource { .init(key: "walletConnect.failure.title", tableName: "Localizable", source: source, developmentValue: "WalletConnect Error", comment: nil) }

      /// en translation: WalletConnect Wallet not found
      ///
      /// Key: walletConnect.failure.walletsNotFound
      ///
      /// Locales: en, zh-Hant
      var walletConnectFailureWalletsNotFound: RswiftResources.StringResource { .init(key: "walletConnect.failure.walletsNotFound", tableName: "Localizable", source: source, developmentValue: "WalletConnect Wallet not found", comment: nil) }

      /// en translation: Scan QR Code again
      ///
      /// Key: walletConnect.scanQRCodeAgain
      ///
      /// Locales: en, zh-Hant
      var walletConnectScanQRCodeAgain: RswiftResources.StringResource { .init(key: "walletConnect.scanQRCodeAgain", tableName: "Localizable", source: source, developmentValue: "Scan QR Code again", comment: nil) }

      /// en translation: Send raw transaction
      ///
      /// Key: walletConnect.sendRawTransaction.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectSendRawTransactionTitle: RswiftResources.StringResource { .init(key: "walletConnect.sendRawTransaction.title", tableName: "Localizable", source: source, developmentValue: "Send raw transaction", comment: nil) }

      /// en translation: Connect on %@
      ///
      /// Key: walletConnect.session.connect
      ///
      /// Locales: en, zh-Hant
      var walletConnectSessionConnect: RswiftResources.StringResource1<String> { .init(key: "walletConnect.session.connect", tableName: "Localizable", source: source, developmentValue: "Connect on %@", comment: nil) }

      /// en translation: Connected to
      ///
      /// Key: walletConnect.session.connectedURL
      ///
      /// Locales: en, zh-Hant
      var walletConnectSessionConnectedURL: RswiftResources.StringResource { .init(key: "walletConnect.session.connectedURL", tableName: "Localizable", source: source, developmentValue: "Connected to", comment: nil) }

      /// en translation: Disconnect
      ///
      /// Key: walletConnect.session.disconnect
      ///
      /// Locales: en, zh-Hant
      var walletConnectSessionDisconnect: RswiftResources.StringResource { .init(key: "walletConnect.session.disconnect", tableName: "Localizable", source: source, developmentValue: "Disconnect", comment: nil) }

      /// en translation: Signed Transactions
      ///
      /// Key: walletConnect.session.signedTransactions
      ///
      /// Locales: en, zh-Hant
      var walletConnectSessionSignedTransactions: RswiftResources.StringResource { .init(key: "walletConnect.session.signedTransactions", tableName: "Localizable", source: source, developmentValue: "Signed Transactions", comment: nil) }

      /// en translation: Switch Network
      ///
      /// Key: walletConnect.session.switchNetwork
      ///
      /// Locales: en, zh-Hant
      var walletConnectSessionSwitchNetwork: RswiftResources.StringResource { .init(key: "walletConnect.session.switchNetwork", tableName: "Localizable", source: source, developmentValue: "Switch Network", comment: nil) }

      /// en translation: No active WalletConnect sessions
      ///
      /// Key: walletConnect.sessions.empty
      ///
      /// Locales: en, zh-Hant
      var walletConnectSessionsEmpty: RswiftResources.StringResource { .init(key: "walletConnect.sessions.empty", tableName: "Localizable", source: source, developmentValue: "No active WalletConnect sessions", comment: nil) }

      /// en translation: Scan QR Code
      ///
      /// Key: walletConnect.sessions.scanQrCode
      ///
      /// Locales: en, zh-Hant
      var walletConnectSessionsScanQrCode: RswiftResources.StringResource { .init(key: "walletConnect.sessions.scanQrCode", tableName: "Localizable", source: source, developmentValue: "Scan QR Code", comment: nil) }

      /// en translation: %@  Start WalletConnect session on:
      ///
      /// Key: walletConnect.start
      ///
      /// Locales: en, zh-Hant
      var walletConnectStart: RswiftResources.StringResource1<String> { .init(key: "walletConnect.start", tableName: "Localizable", source: source, developmentValue: "%@\n\nStart WalletConnect session on:", comment: nil) }

      /// en translation: Offline
      ///
      /// Key: walletConnect.status.offline
      ///
      /// Locales: en, zh-Hant
      var walletConnectStatusOffline: RswiftResources.StringResource { .init(key: "walletConnect.status.offline", tableName: "Localizable", source: source, developmentValue: "Offline", comment: nil) }

      /// en translation: Online
      ///
      /// Key: walletConnect.status.online
      ///
      /// Locales: en, zh-Hant
      var walletConnectStatusOnline: RswiftResources.StringResource { .init(key: "walletConnect.status.online", tableName: "Localizable", source: source, developmentValue: "Online", comment: nil) }

      /// en translation: Status
      ///
      /// Key: walletConnect.statusPlaceholder
      ///
      /// Locales: en, zh-Hant
      var walletConnectStatusPlaceholder: RswiftResources.StringResource { .init(key: "walletConnect.statusPlaceholder", tableName: "Localizable", source: source, developmentValue: "Status", comment: nil) }

      /// en translation: WalletConnect
      ///
      /// Key: walletConnect.title
      ///
      /// Locales: en, zh-Hant
      var walletConnectTitle: RswiftResources.StringResource { .init(key: "walletConnect.title", tableName: "Localizable", source: source, developmentValue: "WalletConnect", comment: nil) }

      /// en translation: And automatically generate the following wallet for you
      ///
      /// Key: walletCreate.autoCreate
      ///
      /// Locales: en, zh-Hant
      var walletCreateAutoCreate: RswiftResources.StringResource { .init(key: "walletCreate.autoCreate", tableName: "Localizable", source: source, developmentValue: "And automatically generate the following wallet for you", comment: nil) }

      /// en translation: You can modify the wallet name in My Settings later to view details
      ///
      /// Key: walletCreate.checkWallet
      ///
      /// Locales: en, zh-Hant
      var walletCreateCheckWallet: RswiftResources.StringResource { .init(key: "walletCreate.checkWallet", tableName: "Localizable", source: source, developmentValue: "You can modify the wallet name in My Settings later to view details", comment: nil) }

      /// en translation: Backup now
      ///
      /// Key: walletCreate.copyWallet
      ///
      /// Locales: en, zh-Hant
      var walletCreateCopyWallet: RswiftResources.StringResource { .init(key: "walletCreate.copyWallet", tableName: "Localizable", source: source, developmentValue: "Backup now", comment: nil) }

      /// en translation: Wallet generating...
      ///
      /// Key: walletCreate.generate
      ///
      /// Locales: en, zh-Hant
      var walletCreateGenerate: RswiftResources.StringResource { .init(key: "walletCreate.generate", tableName: "Localizable", source: source, developmentValue: "Wallet generating...", comment: nil) }

      /// en translation: Wallet created successfully
      ///
      /// Key: walletCreate.success
      ///
      /// Locales: en, zh-Hant
      var walletCreateSuccess: RswiftResources.StringResource { .init(key: "walletCreate.success", tableName: "Localizable", source: source, developmentValue: "Wallet created successfully", comment: nil) }

      /// en translation: Your wallet has not been backed up, please do it safely
      ///
      /// Key: walletNeedBackup
      ///
      /// Locales: en, zh-Hant
      var walletNeedBackup: RswiftResources.StringResource { .init(key: "walletNeedBackup", tableName: "Localizable", source: source, developmentValue: "Your wallet has not been backed up, please do it safely", comment: nil) }

      /// en translation: Me
      ///
      /// Key: walletTokens.tabbar.item.title
      ///
      /// Locales: en, zh-Hant
      var walletTokensTabbarItemTitle: RswiftResources.StringResource { .init(key: "walletTokens.tabbar.item.title", tableName: "Localizable", source: source, developmentValue: "Me", comment: nil) }

      /// en translation: The wallet address has been bound normally and cannot be associated with the INID.
      ///
      /// Key: wallet_address_bound_associated
      ///
      /// Locales: en, zh-Hant
      var wallet_address_bound_associated: RswiftResources.StringResource { .init(key: "wallet_address_bound_associated", tableName: "Localizable", source: source, developmentValue: "The wallet address has been bound normally and cannot be associated with the INID.", comment: nil) }

      /// en translation: 1. Open INTO APP to import this wallet address to view the inviter's information
      ///
      /// Key: wallet_address_inviter_information
      ///
      /// Locales: en, zh-Hant
      var wallet_address_inviter_information: RswiftResources.StringResource { .init(key: "wallet_address_inviter_information", tableName: "Localizable", source: source, developmentValue: "1. Open INTO APP to import this wallet address to view the inviter's information", comment: nil) }

      /// en translation: Wallet created successfully
      ///
      /// Key: wallet_created_successfully
      ///
      /// Locales: en, zh-Hant
      var wallet_created_successfully: RswiftResources.StringResource { .init(key: "wallet_created_successfully", tableName: "Localizable", source: source, developmentValue: "Wallet created successfully", comment: nil) }

      /// en translation: This wallet is already bound to the main wallet
      ///
      /// Key: walletbindtomain
      ///
      /// Locales: en, zh-Hant
      var walletbindtomain: RswiftResources.StringResource { .init(key: "walletbindtomain", tableName: "Localizable", source: source, developmentValue: "This wallet is already bound to the main wallet", comment: nil) }

      /// en translation: Wallet function (stay tuned)
      ///
      /// Key: walletfunction
      ///
      /// Locales: en, zh-Hant
      var walletfunction: RswiftResources.StringResource { .init(key: "walletfunction", tableName: "Localizable", source: source, developmentValue: "Wallet function (stay tuned)", comment: nil) }

      /// en translation: The wallet has been bound to another account
      ///
      /// Key: walletiedtoanother
      ///
      /// Locales: en, zh-Hant
      var walletiedtoanother: RswiftResources.StringResource { .init(key: "walletiedtoanother", tableName: "Localizable", source: source, developmentValue: "The wallet has been bound to another account", comment: nil) }

      /// en translation: Add / Hide Tokens
      ///
      /// Key: wallets.addHideTokens.title
      ///
      /// Locales: en, zh-Hant
      var walletsAddHideTokensTitle: RswiftResources.StringResource { .init(key: "wallets.addHideTokens.title", tableName: "Localizable", source: source, developmentValue: "Add / Hide Tokens", comment: nil) }

      /// en translation: Show Seed Phrase
      ///
      /// Key: wallets.backupHdWallet.alertSheet.title
      ///
      /// Locales: en, zh-Hant
      var walletsBackupHdWalletAlertSheetTitle: RswiftResources.StringResource { .init(key: "wallets.backupHdWallet.alertSheet.title", tableName: "Localizable", source: source, developmentValue: "Show Seed Phrase", comment: nil) }

      /// en translation: Back up my Wallet
      ///
      /// Key: wallets.backupHdWallet.introduction.button.title
      ///
      /// Locales: en, zh-Hant
      var walletsBackupHdWalletIntroductionButtonTitle: RswiftResources.StringResource { .init(key: "wallets.backupHdWallet.introduction.button.title", tableName: "Localizable", source: source, developmentValue: "Back up my Wallet", comment: nil) }

      /// en translation: Back up your Wallet with Seed Phrase
      ///
      /// Key: wallets.backupHdWallet.introduction.title
      ///
      /// Locales: en, zh-Hant
      var walletsBackupHdWalletIntroductionTitle: RswiftResources.StringResource { .init(key: "wallets.backupHdWallet.introduction.title", tableName: "Localizable", source: source, developmentValue: "Back up your Wallet\nwith Seed Phrase", comment: nil) }

      /// en translation: Export Keystore JSON
      ///
      /// Key: wallets.backupKeystoreWallet.alertSheet.title
      ///
      /// Locales: en, zh-Hant
      var walletsBackupKeystoreWalletAlertSheetTitle: RswiftResources.StringResource { .init(key: "wallets.backupKeystoreWallet.alertSheet.title", tableName: "Localizable", source: source, developmentValue: "Export Keystore JSON", comment: nil) }

      /// en translation: Export Keystore
      ///
      /// Key: wallets.backupKeystoreWallet.alertSheet.title.shorter
      ///
      /// Locales: en, zh-Hant
      var walletsBackupKeystoreWalletAlertSheetTitleShorter: RswiftResources.StringResource { .init(key: "wallets.backupKeystoreWallet.alertSheet.title.shorter", tableName: "Localizable", source: source, developmentValue: "Export Keystore", comment: nil) }

      /// en translation: A Keystore is a text file. You can copy its contents when you want to import your wallet. This is a safe way to back up a wallet.
      ///
      /// Key: wallets.backupKeystoreWallet.introduction.description
      ///
      /// Locales: en, zh-Hant
      var walletsBackupKeystoreWalletIntroductionDescription: RswiftResources.StringResource { .init(key: "wallets.backupKeystoreWallet.introduction.description", tableName: "Localizable", source: source, developmentValue: "A Keystore is a text file. You can copy its contents when you want to import your wallet. This is a safe way to back up a wallet.", comment: nil) }

      /// en translation: What is Keystore JSON?
      ///
      /// Key: wallets.backupKeystoreWallet.introduction.title
      ///
      /// Locales: en, zh-Hant
      var walletsBackupKeystoreWalletIntroductionTitle: RswiftResources.StringResource { .init(key: "wallets.backupKeystoreWallet.introduction.title", tableName: "Localizable", source: source, developmentValue: "What is Keystore JSON?", comment: nil) }

      /// en translation: Add token failure
      ///
      /// Key: wallets.hideToken.error.AddTokenFailure
      ///
      /// Locales: en, zh-Hant
      var walletsHideTokenErrorAddTokenFailure: RswiftResources.StringResource { .init(key: "wallets.hideToken.error.AddTokenFailure", tableName: "Localizable", source: source, developmentValue: "Add token failure", comment: nil) }

      /// en translation: Hide
      ///
      /// Key: wallets.hideToken.title
      ///
      /// Locales: en, zh-Hant
      var walletsHideTokenTitle: RswiftResources.StringResource { .init(key: "wallets.hideToken.title", tableName: "Localizable", source: source, developmentValue: "Hide", comment: nil) }

      /// en translation: Rename Wallet
      ///
      /// Key: wallets.name.rename
      ///
      /// Locales: en, zh-Hant
      var walletsNameRename: RswiftResources.StringResource { .init(key: "wallets.name.rename", tableName: "Localizable", source: source, developmentValue: "Rename Wallet", comment: nil) }

      /// en translation: Rename Wallet to
      ///
      /// Key: wallets.name.rename.to
      ///
      /// Locales: en, zh-Hant
      var walletsNameRenameTo: RswiftResources.StringResource { .init(key: "wallets.name.rename.to", tableName: "Localizable", source: source, developmentValue: "Rename Wallet to", comment: nil) }

      /// en translation: Wallets
      ///
      /// Key: wallets.navigation.title
      ///
      /// Locales: en, zh-Hant
      var walletsNavigationTitle: RswiftResources.StringResource { .init(key: "wallets.navigation.title", tableName: "Localizable", source: source, developmentValue: "Wallets", comment: nil) }

      /// en translation: It's not a good idea to take a screenshot of your seed phrase
      ///
      /// Key: wallets.showSeedPhrase.doNotTakeScreenshotDescription
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseDoNotTakeScreenshotDescription: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.doNotTakeScreenshotDescription", tableName: "Localizable", source: source, developmentValue: "It's not a good idea to take a screenshot of your seed phrase", comment: nil) }

      /// en translation: OK, hide my seed phrase
      ///
      /// Key: wallets.showSeedPhrase.hideSeedPhrase
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseHideSeedPhrase: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.hideSeedPhrase", tableName: "Localizable", source: source, developmentValue: "OK, hide my seed phrase", comment: nil) }

      /// en translation: Got it, show my seed phrase
      ///
      /// Key: wallets.showSeedPhrase.introduction.button.title
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseIntroductionButtonTitle: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.introduction.button.title", tableName: "Localizable", source: source, developmentValue: "Got it, show my seed phrase", comment: nil) }

      /// en translation: INTO will NEVER ask about your seed phrase (especially on Telegram).
      ///
      /// Key: wallets.showSeedPhrase.introduction.subtitle
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseIntroductionSubtitle: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.introduction.subtitle", tableName: "Localizable", source: source, developmentValue: "INTO will NEVER ask about your\nseed phrase (especially on Telegram).", comment: nil) }

      /// en translation: Beware of scammers! Don’t share seed phrase.
      ///
      /// Key: wallets.showSeedPhrase.introduction.title
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseIntroductionTitle: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.introduction.title", tableName: "Localizable", source: source, developmentValue: "Beware of scammers!\nDon’t share seed phrase.", comment: nil) }

      /// en translation: Making backup is very simple and safe:  just write down these 12 words and  keep them in a secret place, offline.
      ///
      /// Key: wallets.showSeedPhrase.subtitle
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseSubtitle: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.subtitle", tableName: "Localizable", source: source, developmentValue: "Making backup is very simple and safe:\n just write down these 12 words and\n keep them in a secret place, offline.", comment: nil) }

      /// en translation: Do not share your backup. INTO team members will not ask for it.
      ///
      /// Key: wallets.showSeedPhrase.subtitle.error
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseSubtitleError: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.subtitle.error", tableName: "Localizable", source: source, developmentValue: "Do not share your backup. INTO team members will not ask for it.", comment: nil) }

      /// en translation: Your seed phrase (do not share with anyone)
      ///
      /// Key: wallets.showSeedPhrase.subtitle2
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseSubtitle2: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.subtitle2", tableName: "Localizable", source: source, developmentValue: "Your seed phrase\n(do not share with anyone)", comment: nil) }

      /// en translation: OK, I wrote this down
      ///
      /// Key: wallets.showSeedPhrase.testSeedPhrase
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseTestSeedPhrase: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.testSeedPhrase", tableName: "Localizable", source: source, developmentValue: "OK, I wrote this down", comment: nil) }

      /// en translation: Your Seed Phrase
      ///
      /// Key: wallets.showSeedPhrase.title
      ///
      /// Locales: en, zh-Hant
      var walletsShowSeedPhraseTitle: RswiftResources.StringResource { .init(key: "wallets.showSeedPhrase.title", tableName: "Localizable", source: source, developmentValue: "Your Seed Phrase", comment: nil) }

      /// en translation: It's not a good idea to take a screenshot of your seed phrase
      ///
      /// Key: wallets.verifySeedPhrase.doNotTakeScreenshotDescription
      ///
      /// Locales: en, zh-Hant
      var walletsVerifySeedPhraseDoNotTakeScreenshotDescription: RswiftResources.StringResource { .init(key: "wallets.verifySeedPhrase.doNotTakeScreenshotDescription", tableName: "Localizable", source: source, developmentValue: "It's not a good idea to take a screenshot of your seed phrase", comment: nil) }

      /// en translation: Verify Seed Phrase
      ///
      /// Key: wallets.verifySeedPhrase.title
      ///
      /// Locales: en, zh-Hant
      var walletsVerifySeedPhraseTitle: RswiftResources.StringResource { .init(key: "wallets.verifySeedPhrase.title", tableName: "Localizable", source: source, developmentValue: "Verify Seed Phrase", comment: nil) }

      /// en translation: Invalid seed phrase. Please check and try again.
      ///
      /// Key: wallets.verifySeedPhrase.wrong
      ///
      /// Locales: en, zh-Hant
      var walletsVerifySeedPhraseWrong: RswiftResources.StringResource { .init(key: "wallets.verifySeedPhrase.wrong", tableName: "Localizable", source: source, developmentValue: "Invalid seed phrase. Please check and try again.", comment: nil) }

      /// en translation: The following wallets are being generated for you
      ///
      /// Key: wallets_generated
      ///
      /// Locales: en, zh-Hant
      var wallets_generated: RswiftResources.StringResource { .init(key: "wallets_generated", tableName: "Localizable", source: source, developmentValue: "The following wallets are being generated for you", comment: nil) }

      /// en translation: Ten thousand
      ///
      /// Key: wan
      ///
      /// Locales: en, zh-Hant
      var wan: RswiftResources.StringResource { .init(key: "wan", tableName: "Localizable", source: source, developmentValue: "Ten thousand", comment: nil) }

      /// en translation: Ten thousand
      ///
      /// Key: wan_traditional
      ///
      /// Locales: en, zh-Hant
      var wan_traditional: RswiftResources.StringResource { .init(key: "wan_traditional", tableName: "Localizable", source: source, developmentValue: "Ten thousand", comment: nil) }

      /// en translation: Kind reminder
      ///
      /// Key: warmreminder
      ///
      /// Locales: en, zh-Hant
      var warmreminder: RswiftResources.StringResource { .init(key: "warmreminder", tableName: "Localizable", source: source, developmentValue: "Kind reminder", comment: nil) }

      /// en translation: Warning
      ///
      /// Key: warning
      ///
      /// Locales: en, zh-Hant
      var warning: RswiftResources.StringResource { .init(key: "warning", tableName: "Localizable", source: source, developmentValue: "Warning", comment: nil) }

      /// en translation: Field required!
      ///
      /// Key: warning.fieldRequired
      ///
      /// Locales: en, zh-Hant
      var warningFieldRequired: RswiftResources.StringResource { .init(key: "warning.fieldRequired", tableName: "Localizable", source: source, developmentValue: "Field required!", comment: nil) }

      /// en translation: Clear cache
      ///
      /// Key: webView_clear_cache
      ///
      /// Locales: en, zh-Hant
      var webView_clear_cache: RswiftResources.StringResource { .init(key: "webView_clear_cache", tableName: "Localizable", source: source, developmentValue: "Clear cache", comment: nil) }

      /// en translation: Clear cache successfully
      ///
      /// Key: webView_clear_cache_success
      ///
      /// Locales: en, zh-Hant
      var webView_clear_cache_success: RswiftResources.StringResource { .init(key: "webView_clear_cache_success", tableName: "Localizable", source: source, developmentValue: "Clear cache successfully", comment: nil) }

      /// en translation: Website
      ///
      /// Key: website
      ///
      /// Locales: en, zh-Hant
      var website: RswiftResources.StringResource { .init(key: "website", tableName: "Localizable", source: source, developmentValue: "Website", comment: nil) }

      /// en translation: Wednesday 
      ///
      /// Key: wednesday
      ///
      /// Locales: en, zh-Hant
      var wednesday: RswiftResources.StringResource { .init(key: "wednesday", tableName: "Localizable", source: source, developmentValue: "Wednesday ", comment: nil) }

      /// en translation: OK
      ///
      /// Key: well
      ///
      /// Locales: en, zh-Hant
      var well: RswiftResources.StringResource { .init(key: "well", tableName: "Localizable", source: source, developmentValue: "OK", comment: nil) }

      /// en translation: Help us grow by sharing this app with your friends!
      ///
      /// Key: welldone.description.label.text
      ///
      /// Locales: en, zh-Hant
      var welldoneDescriptionLabelText: RswiftResources.StringResource { .init(key: "welldone.description.label.text", tableName: "Localizable", source: source, developmentValue: "Help us grow by sharing this app with your friends!", comment: nil) }

      /// en translation: Thank you!
      ///
      /// Key: welldone.navigation.title
      ///
      /// Locales: en, zh-Hant
      var welldoneNavigationTitle: RswiftResources.StringResource { .init(key: "welldone.navigation.title", tableName: "Localizable", source: source, developmentValue: "Thank you!", comment: nil) }

      /// en translation: Share
      ///
      /// Key: welldone.share.label.text
      ///
      /// Locales: en, zh-Hant
      var welldoneShareLabelText: RswiftResources.StringResource { .init(key: "welldone.share.label.text", tableName: "Localizable", source: source, developmentValue: "Share", comment: nil) }

      /// en translation: Check out INTO - The first crypto mobile wallet which can interact with smart contracts to perform real-world use cases.
      ///
      /// Key: welldone.viewmodel.sharing.text
      ///
      /// Locales: en, zh-Hant
      var welldoneViewmodelSharingText: RswiftResources.StringResource { .init(key: "welldone.viewmodel.sharing.text", tableName: "Localizable", source: source, developmentValue: "Check out INTO - The first crypto mobile wallet which can interact with smart contracts to perform real-world use cases.", comment: nil) }

      /// en translation: What’s new?
      ///
      /// Key: whats.new
      ///
      /// Locales: en, zh-Hant
      var whatsNew: RswiftResources.StringResource { .init(key: "whats.new", tableName: "Localizable", source: source, developmentValue: "What’s new?", comment: nil) }

      /// en translation: Switch to Mainnet
      ///
      /// Key: whereAreMyTokens.action
      ///
      /// Locales: en, zh-Hant
      var whereAreMyTokensAction: RswiftResources.StringResource { .init(key: "whereAreMyTokens.action", tableName: "Localizable", source: source, developmentValue: "Switch to Mainnet", comment: nil) }

      /// en translation: Don’t worry. Your tokens are safe. You are viewing Testnet networks. They are used by developers to try out new designs. You can switch to Mainnet any time.
      ///
      /// Key: whereAreMyTokens.description
      ///
      /// Locales: en, zh-Hant
      var whereAreMyTokensDescription: RswiftResources.StringResource { .init(key: "whereAreMyTokens.description", tableName: "Localizable", source: source, developmentValue: "Don’t worry. Your tokens are safe. You are viewing Testnet networks. They are used by developers to try out new designs. You can switch to Mainnet any time.", comment: nil) }

      /// en translation: Testnet
      ///
      /// Key: whereAreMyTokens.testnet
      ///
      /// Locales: en, zh-Hant
      var whereAreMyTokensTestnet: RswiftResources.StringResource { .init(key: "whereAreMyTokens.testnet", tableName: "Localizable", source: source, developmentValue: "Testnet", comment: nil) }

      /// en translation: Where are my Tokens?
      ///
      /// Key: whereAreMyTokens.title
      ///
      /// Locales: en, zh-Hant
      var whereAreMyTokensTitle: RswiftResources.StringResource { .init(key: "whereAreMyTokens.title", tableName: "Localizable", source: source, developmentValue: "Where are my Tokens?", comment: nil) }

      /// en translation: Where are my tokens?
      ///
      /// Key: whereAreMyTokens.whereAreMyTokens
      ///
      /// Locales: en, zh-Hant
      var whereAreMyTokensWhereAreMyTokens: RswiftResources.StringResource { .init(key: "whereAreMyTokens.whereAreMyTokens", tableName: "Localizable", source: source, developmentValue: "Where are my tokens?", comment: nil) }

      /// en translation: Wiki
      ///
      /// Key: wiki
      ///
      /// Locales: en, zh-Hant
      var wiki: RswiftResources.StringResource { .init(key: "wiki", tableName: "Localizable", source: source, developmentValue: "Wiki", comment: nil) }

      /// en translation: The minimum limit is 1000 pieces per time, and an additional 50 pieces handling fee will be added across the chain
      ///
      /// Key: withDrawCrossDesc
      ///
      /// Locales: en, zh-Hant
      var withDrawCrossDesc: RswiftResources.StringResource { .init(key: "withDrawCrossDesc", tableName: "Localizable", source: source, developmentValue: "The minimum limit is 1000 pieces per time, and an additional 50 pieces handling fee will be added across the chain", comment: nil) }

      /// en translation: Total withdrawal quantity
      ///
      /// Key: withdrawal.amount
      ///
      /// Locales: en, zh-Hant
      var withdrawalAmount: RswiftResources.StringResource { .init(key: "withdrawal.amount", tableName: "Localizable", source: source, developmentValue: "Total withdrawal quantity", comment: nil) }

      /// en translation: The minimum withdrawal limit for BSC chain is 1000 pieces/time
      ///
      /// Key: withdrawal.bsc.not.enough
      ///
      /// Locales: en, zh-Hant
      var withdrawalBscNotEnough: RswiftResources.StringResource { .init(key: "withdrawal.bsc.not.enough", tableName: "Localizable", source: source, developmentValue: "The minimum withdrawal limit for BSC chain is 1000 pieces/time", comment: nil) }

      /// en translation: Social Fund
      ///
      /// Key: withdrawalcommission
      ///
      /// Locales: en, zh-Hant
      var withdrawalcommission: RswiftResources.StringResource { .init(key: "withdrawalcommission", tableName: "Localizable", source: source, developmentValue: "Social Fund", comment: nil) }

      /// en translation: %ldYear
      ///
      /// Key: year
      ///
      /// Locales: en, zh-Hant
      var year: RswiftResources.StringResource1<Int> { .init(key: "year", tableName: "Localizable", source: source, developmentValue: "%ldYear", comment: nil) }

      /// en translation: %Ld years ago
      ///
      /// Key: yearago
      ///
      /// Locales: en, zh-Hant
      var yearago: RswiftResources.StringResource1<Int> { .init(key: "yearago", tableName: "Localizable", source: source, developmentValue: "%Ld years ago", comment: nil) }

      /// en translation: year
      ///
      /// Key: yearnian
      ///
      /// Locales: en, zh-Hant
      var yearnian: RswiftResources.StringResource { .init(key: "yearnian", tableName: "Localizable", source: source, developmentValue: "year", comment: nil) }

      /// en translation: M-d HH:mm
      ///
      /// Key: yestodatytime
      ///
      /// Locales: en, zh-Hant
      var yestodatytime: RswiftResources.StringResource { .init(key: "yestodatytime", tableName: "Localizable", source: source, developmentValue: "M-d HH:mm", comment: nil) }

      /// en translation: You can add or register a new account in the following ways
      ///
      /// Key: you_add_following_ways
      ///
      /// Locales: en, zh-Hant
      var you_add_following_ways: RswiftResources.StringResource { .init(key: "you_add_following_ways", tableName: "Localizable", source: source, developmentValue: "You can add or register a new account in the following ways", comment: nil) }

      /// en translation: Your inviter
      ///
      /// Key: your.inviter
      ///
      /// Locales: en, zh-Hant
      var yourInviter: RswiftResources.StringResource { .init(key: "your.inviter", tableName: "Localizable", source: source, developmentValue: "Your inviter", comment: nil) }

      /// en translation: Your QQ
      ///
      /// Key: yourQQ
      ///
      /// Locales: en, zh-Hant
      var yourQQ: RswiftResources.StringResource { .init(key: "yourQQ", tableName: "Localizable", source: source, developmentValue: "Your QQ", comment: nil) }

      /// en translation: My group chat
      ///
      /// Key: yy_group_chat
      ///
      /// Locales: en, zh-Hant
      var yy_group_chat: RswiftResources.StringResource { .init(key: "yy_group_chat", tableName: "Localizable", source: source, developmentValue: "My group chat", comment: nil) }

      /// en translation: zero
      ///
      /// Key: zero
      ///
      /// Locales: en, zh-Hant
      var zero: RswiftResources.StringResource { .init(key: "zero", tableName: "Localizable", source: source, developmentValue: "zero", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
            var uiSceneStoryboardFile: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneStoryboardFile") ?? "Main" }
          }
        }
      }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = ViewController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}